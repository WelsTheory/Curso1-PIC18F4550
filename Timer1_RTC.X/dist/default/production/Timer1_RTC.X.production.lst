

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sun Dec 20 15:29:44 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    23                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    25  0000                     
    26                           ; Version 2.20
    27                           ; Generated 12/02/2020 GMT
    28                           ; 
    29                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F4550 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     
    61                           	psect	idataCOMRAM
    62  000394                     __pidataCOMRAM:
    63                           	callstack 0
    64                           
    65                           ;initializer for _hor_d
    66  000394  0002               	dw	2
    67                           
    68                           ;initializer for _hor
    69  000396  0003               	dw	3
    70                           
    71                           ;initializer for _min_d
    72  000398  0005               	dw	5
    73                           
    74                           ;initializer for _min
    75  00039A  0009               	dw	9
    76                           
    77                           ;initializer for _sec_d
    78  00039C  0005               	dw	5
    79                           
    80                           ;initializer for _sec
    81  00039E  0008               	dw	8
    82  0000                     _IPR1bits	set	3999
    83  0000                     _PIE1bits	set	3997
    84  0000                     _T1CON	set	4045
    85  0000                     _LATD	set	3980
    86  0000                     _TRISD	set	3989
    87  0000                     _PIR1bits	set	3998
    88  0000                     _TMR1H	set	4047
    89  0000                     _LATDbits	set	3980
    90  0000                     _TMR1L	set	4046
    91  0000                     _INTCONbits	set	4082
    92  0000                     _RCONbits	set	4048
    93                           
    94                           ; #config settings
    95                           
    96                           	psect	cinit
    97  000352                     __pcinit:
    98                           	callstack 0
    99  000352                     start_initialization:
   100                           	callstack 0
   101  000352                     __initialization:
   102                           	callstack 0
   103                           
   104                           ; Initialize objects allocated to COMRAM (12 bytes)
   105                           ; load TBLPTR registers with __pidataCOMRAM
   106  000352  0E94               	movlw	low __pidataCOMRAM
   107  000354  6EF6               	movwf	tblptrl,c
   108  000356  0E03               	movlw	high __pidataCOMRAM
   109  000358  6EF7               	movwf	tblptrh,c
   110  00035A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   111  00035C  6EF8               	movwf	tblptru,c
   112  00035E  EE00  F001         	lfsr	0,__pdataCOMRAM
   113  000362  EE10 F00C          	lfsr	1,12
   114  000366                     copy_data0:
   115  000366  0009               	tblrd		*+
   116  000368  CFF5 FFEE          	movff	tablat,postinc0
   117  00036C  50E5               	movf	postdec1,w,c
   118  00036E  50E1               	movf	fsr1l,w,c
   119  000370  E1FA               	bnz	copy_data0
   120                           
   121                           ; Clear objects allocated to COMRAM (2 bytes)
   122  000372  6A18               	clrf	(__pbssCOMRAM+1)& (0+255),c
   123  000374  6A17               	clrf	__pbssCOMRAM& (0+255),c
   124  000376                     end_of_initialization:
   125                           	callstack 0
   126  000376                     __end_of__initialization:
   127                           	callstack 0
   128  000376  9019               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   129  000378  9219               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   130  00037A  0100               	movlb	0
   131  00037C  EF15  F000         	goto	_main	;jump to C main() function
   132                           
   133                           	psect	bssCOMRAM
   134  000017                     __pbssCOMRAM:
   135                           	callstack 0
   136  000017                     _i:
   137                           	callstack 0
   138  000017                     	ds	2
   139                           
   140                           	psect	dataCOMRAM
   141  000001                     __pdataCOMRAM:
   142                           	callstack 0
   143  000001                     _hor_d:
   144                           	callstack 0
   145  000001                     	ds	2
   146  000003                     _hor:
   147                           	callstack 0
   148  000003                     	ds	2
   149  000005                     _min_d:
   150                           	callstack 0
   151  000005                     	ds	2
   152  000007                     _min:
   153                           	callstack 0
   154  000007                     	ds	2
   155  000009                     _sec_d:
   156                           	callstack 0
   157  000009                     	ds	2
   158  00000B                     _sec:
   159                           	callstack 0
   160  00000B                     	ds	2
   161                           
   162                           	psect	cstackCOMRAM
   163  00000D                     __pcstackCOMRAM:
   164                           	callstack 0
   165  00000D                     ??_INT02_Ext:
   166  00000D                     
   167                           ; 1 bytes @ 0x0
   168  00000D                     	ds	1
   169  00000E                     ??_TMR0_Ext:
   170                           
   171                           ; 1 bytes @ 0x1
   172  00000E                     	ds	1
   173  00000F                     ??_LCD_Comando:
   174  00000F                     ??_LCD_Data:
   175                           
   176                           ; 1 bytes @ 0x2
   177  00000F                     	ds	1
   178  000010                     LCD_Comando@cmd:
   179                           	callstack 0
   180  000010                     LCD_Data@data:
   181                           	callstack 0
   182                           
   183                           ; 1 bytes @ 0x3
   184  000010                     	ds	1
   185  000011                     ??_LCD_Init:
   186  000011                     LCD_XY@x:
   187                           	callstack 0
   188                           
   189                           ; 2 bytes @ 0x4
   190  000011                     	ds	2
   191  000013                     LCD_XY@y:
   192                           	callstack 0
   193                           
   194                           ; 2 bytes @ 0x6
   195  000013                     	ds	2
   196  000015                     ??_main:
   197                           
   198                           ; 1 bytes @ 0x8
   199  000015                     	ds	2
   200                           
   201 ;;
   202 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   203 ;;
   204 ;; *************** function _main *****************
   205 ;; Defined at:
   206 ;;		line 18 in file "Programa_principal.c"
   207 ;; Parameters:    Size  Location     Type
   208 ;;		None
   209 ;; Auto vars:     Size  Location     Type
   210 ;;		None
   211 ;; Return value:  Size  Location     Type
   212 ;;                  1    wreg      void 
   213 ;; Registers used:
   214 ;;		wreg, status,2, status,0, cstack
   215 ;; Tracked objects:
   216 ;;		On entry : 0/0
   217 ;;		On exit  : 0/0
   218 ;;		Unchanged: 0/0
   219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   220 ;;      Params:         0       0       0       0       0       0       0       0       0
   221 ;;      Locals:         0       0       0       0       0       0       0       0       0
   222 ;;      Temps:          2       0       0       0       0       0       0       0       0
   223 ;;      Totals:         2       0       0       0       0       0       0       0       0
   224 ;;Total ram usage:        2 bytes
   225 ;; Hardware stack levels required when called:    4
   226 ;; This function calls:
   227 ;;		_Int_Ext
   228 ;;		_LCD_Data
   229 ;;		_LCD_Init
   230 ;;		_LCD_XY
   231 ;;		_Timer1_Init
   232 ;; This function is called by:
   233 ;;		Startup code after reset
   234 ;; This function uses a non-reentrant model
   235 ;;
   236                           
   237                           	psect	text0
   238  00002A                     __ptext0:
   239                           	callstack 0
   240  00002A                     _main:
   241                           	callstack 27
   242  00002A                     
   243                           ;Programa_principal.c: 19:     TRISD = 0x00;
   244  00002A  0E00               	movlw	0
   245  00002C  6E95               	movwf	149,c	;volatile
   246  00002E                     
   247                           ;Programa_principal.c: 20:     LCD_Init();
   248  00002E  ECCA  F000         	call	_LCD_Init	;wreg free
   249  000032                     
   250                           ;Programa_principal.c: 21:     Timer1_Init();
   251  000032  ECC0  F001         	call	_Timer1_Init	;wreg free
   252  000036                     
   253                           ;Programa_principal.c: 22:     Int_Ext();
   254  000036  ECD0  F001         	call	_Int_Ext	;wreg free
   255  00003A                     l1055:
   256                           
   257                           ;Programa_principal.c: 24:         if(sec > 9){
   258  00003A  BE0C               	btfsc	(_sec+1)^0,7,c
   259  00003C  EF29  F000         	goto	u151
   260  000040  500C               	movf	(_sec+1)^0,w,c
   261  000042  E109               	bnz	u150
   262  000044  0E0A               	movlw	10
   263  000046  5C0B               	subwf	_sec^0,w,c
   264  000048  A0D8               	btfss	status,0,c
   265  00004A  EF29  F000         	goto	u151
   266  00004E  EF2B  F000         	goto	u150
   267  000052                     u151:
   268  000052  EF31  F000         	goto	l1061
   269  000056                     u150:
   270  000056                     
   271                           ;Programa_principal.c: 25:             sec = 0;
   272  000056  0E00               	movlw	0
   273  000058  6E0C               	movwf	(_sec+1)^0,c
   274  00005A  0E00               	movlw	0
   275  00005C  6E0B               	movwf	_sec^0,c
   276  00005E                     
   277                           ;Programa_principal.c: 26:             sec_d++;
   278  00005E  4A09               	infsnz	_sec_d^0,f,c
   279  000060  2A0A               	incf	(_sec_d+1)^0,f,c
   280  000062                     l1061:
   281                           
   282                           ;Programa_principal.c: 28:         if(sec_d > 5){
   283  000062  BE0A               	btfsc	(_sec_d+1)^0,7,c
   284  000064  EF3D  F000         	goto	u161
   285  000068  500A               	movf	(_sec_d+1)^0,w,c
   286  00006A  E109               	bnz	u160
   287  00006C  0E06               	movlw	6
   288  00006E  5C09               	subwf	_sec_d^0,w,c
   289  000070  A0D8               	btfss	status,0,c
   290  000072  EF3D  F000         	goto	u161
   291  000076  EF3F  F000         	goto	u160
   292  00007A                     u161:
   293  00007A  EF45  F000         	goto	l1067
   294  00007E                     u160:
   295  00007E                     
   296                           ;Programa_principal.c: 29:             sec_d = 0;
   297  00007E  0E00               	movlw	0
   298  000080  6E0A               	movwf	(_sec_d+1)^0,c
   299  000082  0E00               	movlw	0
   300  000084  6E09               	movwf	_sec_d^0,c
   301  000086                     
   302                           ;Programa_principal.c: 30:             min++;
   303  000086  4A07               	infsnz	_min^0,f,c
   304  000088  2A08               	incf	(_min+1)^0,f,c
   305  00008A                     l1067:
   306                           
   307                           ;Programa_principal.c: 32:         if(min > 9){
   308  00008A  BE08               	btfsc	(_min+1)^0,7,c
   309  00008C  EF51  F000         	goto	u171
   310  000090  5008               	movf	(_min+1)^0,w,c
   311  000092  E109               	bnz	u170
   312  000094  0E0A               	movlw	10
   313  000096  5C07               	subwf	_min^0,w,c
   314  000098  A0D8               	btfss	status,0,c
   315  00009A  EF51  F000         	goto	u171
   316  00009E  EF53  F000         	goto	u170
   317  0000A2                     u171:
   318  0000A2  EF59  F000         	goto	l1073
   319  0000A6                     u170:
   320  0000A6                     
   321                           ;Programa_principal.c: 33:             min = 0;
   322  0000A6  0E00               	movlw	0
   323  0000A8  6E08               	movwf	(_min+1)^0,c
   324  0000AA  0E00               	movlw	0
   325  0000AC  6E07               	movwf	_min^0,c
   326  0000AE                     
   327                           ;Programa_principal.c: 34:             min_d++;
   328  0000AE  4A05               	infsnz	_min_d^0,f,c
   329  0000B0  2A06               	incf	(_min_d+1)^0,f,c
   330  0000B2                     l1073:
   331                           
   332                           ;Programa_principal.c: 36:         if(min_d > 5){
   333  0000B2  BE06               	btfsc	(_min_d+1)^0,7,c
   334  0000B4  EF65  F000         	goto	u181
   335  0000B8  5006               	movf	(_min_d+1)^0,w,c
   336  0000BA  E109               	bnz	u180
   337  0000BC  0E06               	movlw	6
   338  0000BE  5C05               	subwf	_min_d^0,w,c
   339  0000C0  A0D8               	btfss	status,0,c
   340  0000C2  EF65  F000         	goto	u181
   341  0000C6  EF67  F000         	goto	u180
   342  0000CA                     u181:
   343  0000CA  EF6D  F000         	goto	l1079
   344  0000CE                     u180:
   345  0000CE                     
   346                           ;Programa_principal.c: 37:             min_d = 0;
   347  0000CE  0E00               	movlw	0
   348  0000D0  6E06               	movwf	(_min_d+1)^0,c
   349  0000D2  0E00               	movlw	0
   350  0000D4  6E05               	movwf	_min_d^0,c
   351  0000D6                     
   352                           ;Programa_principal.c: 38:             hor++;
   353  0000D6  4A03               	infsnz	_hor^0,f,c
   354  0000D8  2A04               	incf	(_hor+1)^0,f,c
   355  0000DA                     l1079:
   356                           
   357                           ;Programa_principal.c: 40:         if(hor > 3){
   358  0000DA  BE04               	btfsc	(_hor+1)^0,7,c
   359  0000DC  EF79  F000         	goto	u191
   360  0000E0  5004               	movf	(_hor+1)^0,w,c
   361  0000E2  E109               	bnz	u190
   362  0000E4  0E04               	movlw	4
   363  0000E6  5C03               	subwf	_hor^0,w,c
   364  0000E8  A0D8               	btfss	status,0,c
   365  0000EA  EF79  F000         	goto	u191
   366  0000EE  EF7B  F000         	goto	u190
   367  0000F2                     u191:
   368  0000F2  EF81  F000         	goto	l1085
   369  0000F6                     u190:
   370  0000F6                     
   371                           ;Programa_principal.c: 41:             hor = 0;
   372  0000F6  0E00               	movlw	0
   373  0000F8  6E04               	movwf	(_hor+1)^0,c
   374  0000FA  0E00               	movlw	0
   375  0000FC  6E03               	movwf	_hor^0,c
   376  0000FE                     
   377                           ;Programa_principal.c: 42:             hor_d++;
   378  0000FE  4A01               	infsnz	_hor_d^0,f,c
   379  000100  2A02               	incf	(_hor_d+1)^0,f,c
   380  000102                     l1085:
   381                           
   382                           ;Programa_principal.c: 44:         if(hor_d > 2){
   383  000102  BE02               	btfsc	(_hor_d+1)^0,7,c
   384  000104  EF8D  F000         	goto	u201
   385  000108  5002               	movf	(_hor_d+1)^0,w,c
   386  00010A  E109               	bnz	u200
   387  00010C  0E03               	movlw	3
   388  00010E  5C01               	subwf	_hor_d^0,w,c
   389  000110  A0D8               	btfss	status,0,c
   390  000112  EF8D  F000         	goto	u201
   391  000116  EF8F  F000         	goto	u200
   392  00011A                     u201:
   393  00011A  EF93  F000         	goto	l1089
   394  00011E                     u200:
   395  00011E                     
   396                           ;Programa_principal.c: 45:             hor_d = 0;
   397  00011E  0E00               	movlw	0
   398  000120  6E02               	movwf	(_hor_d+1)^0,c
   399  000122  0E00               	movlw	0
   400  000124  6E01               	movwf	_hor_d^0,c
   401  000126                     l1089:
   402                           
   403                           ;Programa_principal.c: 47:         LCD_XY(0,0);
   404  000126  0E00               	movlw	0
   405  000128  6E12               	movwf	(LCD_XY@x+1)^0,c
   406  00012A  0E00               	movlw	0
   407  00012C  6E11               	movwf	LCD_XY@x^0,c
   408  00012E  0E00               	movlw	0
   409  000130  6E14               	movwf	(LCD_XY@y+1)^0,c
   410  000132  0E00               	movlw	0
   411  000134  6E13               	movwf	LCD_XY@y^0,c
   412  000136  EC91  F001         	call	_LCD_XY	;wreg free
   413  00013A                     
   414                           ;Programa_principal.c: 48:         LCD_Data('0'+ hor_d);
   415  00013A  5001               	movf	_hor_d^0,w,c
   416  00013C  0F30               	addlw	48
   417  00013E  EC3A  F001         	call	_LCD_Data
   418  000142                     
   419                           ;Programa_principal.c: 49:         LCD_Data('0'+ hor);
   420  000142  5003               	movf	_hor^0,w,c
   421  000144  0F30               	addlw	48
   422  000146  EC3A  F001         	call	_LCD_Data
   423  00014A                     
   424                           ;Programa_principal.c: 50:         LCD_Data(':');
   425  00014A  0E3A               	movlw	58
   426  00014C  EC3A  F001         	call	_LCD_Data
   427  000150                     
   428                           ;Programa_principal.c: 51:         LCD_Data('0'+ min_d);
   429  000150  5005               	movf	_min_d^0,w,c
   430  000152  0F30               	addlw	48
   431  000154  EC3A  F001         	call	_LCD_Data
   432  000158                     
   433                           ;Programa_principal.c: 52:         LCD_Data('0'+ min);
   434  000158  5007               	movf	_min^0,w,c
   435  00015A  0F30               	addlw	48
   436  00015C  EC3A  F001         	call	_LCD_Data
   437  000160                     
   438                           ;Programa_principal.c: 53:         LCD_Data(':');
   439  000160  0E3A               	movlw	58
   440  000162  EC3A  F001         	call	_LCD_Data
   441  000166                     
   442                           ;Programa_principal.c: 54:         LCD_Data('0'+ sec_d);
   443  000166  5009               	movf	_sec_d^0,w,c
   444  000168  0F30               	addlw	48
   445  00016A  EC3A  F001         	call	_LCD_Data
   446  00016E                     
   447                           ;Programa_principal.c: 55:         LCD_Data('0'+ sec);
   448  00016E  500B               	movf	_sec^0,w,c
   449  000170  0F30               	addlw	48
   450  000172  EC3A  F001         	call	_LCD_Data
   451  000176                     
   452                           ;Programa_principal.c: 56:         _delay((unsigned long)((250)*(20000000UL/4000.0)));
   453  000176  0E07               	movlw	7
   454  000178  6E16               	movwf	(??_main+1)^0,c
   455  00017A  0E58               	movlw	88
   456  00017C  6E15               	movwf	??_main^0,c
   457  00017E  0E5A               	movlw	90
   458  000180                     u217:
   459  000180  2EE8               	decfsz	wreg,f,c
   460  000182  D7FE               	bra	u217
   461  000184  2E15               	decfsz	??_main^0,f,c
   462  000186  D7FC               	bra	u217
   463  000188  2E16               	decfsz	(??_main+1)^0,f,c
   464  00018A  D7FA               	bra	u217
   465  00018C  EF1D  F000         	goto	l1055
   466  000190  EF13  F000         	goto	start
   467  000194                     __end_of_main:
   468                           	callstack 0
   469                           
   470 ;; *************** function _Timer1_Init *****************
   471 ;; Defined at:
   472 ;;		line 8 in file "Timer1_Libreria.c"
   473 ;; Parameters:    Size  Location     Type
   474 ;;		None
   475 ;; Auto vars:     Size  Location     Type
   476 ;;		None
   477 ;; Return value:  Size  Location     Type
   478 ;;                  1    wreg      void 
   479 ;; Registers used:
   480 ;;		wreg, status,2
   481 ;; Tracked objects:
   482 ;;		On entry : 0/0
   483 ;;		On exit  : 0/0
   484 ;;		Unchanged: 0/0
   485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   486 ;;      Params:         0       0       0       0       0       0       0       0       0
   487 ;;      Locals:         0       0       0       0       0       0       0       0       0
   488 ;;      Temps:          0       0       0       0       0       0       0       0       0
   489 ;;      Totals:         0       0       0       0       0       0       0       0       0
   490 ;;Total ram usage:        0 bytes
   491 ;; Hardware stack levels used:    1
   492 ;; Hardware stack levels required when called:    2
   493 ;; This function calls:
   494 ;;		Nothing
   495 ;; This function is called by:
   496 ;;		_main
   497 ;; This function uses a non-reentrant model
   498 ;;
   499                           
   500                           	psect	text1
   501  000380                     __ptext1:
   502                           	callstack 0
   503  000380                     _Timer1_Init:
   504                           	callstack 28
   505  000380                     
   506                           ;Timer1_Libreria.c: 9:     TMR1H = 0x80;
   507  000380  0E80               	movlw	128
   508  000382  6ECF               	movwf	207,c	;volatile
   509                           
   510                           ;Timer1_Libreria.c: 10:     TMR1L = 0x00;
   511  000384  0E00               	movlw	0
   512  000386  6ECE               	movwf	206,c	;volatile
   513                           
   514                           ;Timer1_Libreria.c: 11:     T1CON = 0x0F;
   515  000388  0E0F               	movlw	15
   516  00038A  6ECD               	movwf	205,c	;volatile
   517  00038C                     
   518                           ;Timer1_Libreria.c: 12:     PIE1bits.TMR1IE = 1;
   519  00038C  809D               	bsf	157,0,c	;volatile
   520  00038E                     
   521                           ;Timer1_Libreria.c: 13:     PIR1bits.TMR1IF = 0;
   522  00038E  909E               	bcf	158,0,c	;volatile
   523  000390                     
   524                           ;Timer1_Libreria.c: 14:     IPR1bits.TMR1IP = 1;
   525  000390  809F               	bsf	159,0,c	;volatile
   526  000392  0012               	return		;funcret
   527  000394                     __end_of_Timer1_Init:
   528                           	callstack 0
   529                           
   530 ;; *************** function _LCD_XY *****************
   531 ;; Defined at:
   532 ;;		line 87 in file "LCD_Libreria.c"
   533 ;; Parameters:    Size  Location     Type
   534 ;;  x               2    4[COMRAM] int 
   535 ;;  y               2    6[COMRAM] int 
   536 ;; Auto vars:     Size  Location     Type
   537 ;;		None
   538 ;; Return value:  Size  Location     Type
   539 ;;                  1    wreg      void 
   540 ;; Registers used:
   541 ;;		wreg, status,2, status,0, cstack
   542 ;; Tracked objects:
   543 ;;		On entry : 0/0
   544 ;;		On exit  : 0/0
   545 ;;		Unchanged: 0/0
   546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   547 ;;      Params:         4       0       0       0       0       0       0       0       0
   548 ;;      Locals:         0       0       0       0       0       0       0       0       0
   549 ;;      Temps:          0       0       0       0       0       0       0       0       0
   550 ;;      Totals:         4       0       0       0       0       0       0       0       0
   551 ;;Total ram usage:        4 bytes
   552 ;; Hardware stack levels used:    1
   553 ;; Hardware stack levels required when called:    3
   554 ;; This function calls:
   555 ;;		_LCD_Comando
   556 ;; This function is called by:
   557 ;;		_main
   558 ;; This function uses a non-reentrant model
   559 ;;
   560                           
   561                           	psect	text2
   562  000322                     __ptext2:
   563                           	callstack 0
   564  000322                     _LCD_XY:
   565                           	callstack 27
   566  000322                     
   567                           ;LCD_Libreria.c: 88:     if(x>0){
   568  000322  BE12               	btfsc	(LCD_XY@x+1)^0,7,c
   569  000324  EF9C  F001         	goto	u111
   570  000328  5012               	movf	(LCD_XY@x+1)^0,w,c
   571  00032A  E108               	bnz	u110
   572  00032C  0411               	decf	LCD_XY@x^0,w,c
   573  00032E  A0D8               	btfss	status,0,c
   574  000330  EF9C  F001         	goto	u111
   575  000334  EF9E  F001         	goto	u110
   576  000338                     u111:
   577  000338  EFA4  F001         	goto	l1015
   578  00033C                     u110:
   579  00033C                     
   580                           ;LCD_Libreria.c: 89:         LCD_Comando(0xC0+y);
   581  00033C  5013               	movf	LCD_XY@y^0,w,c
   582  00033E  0FC0               	addlw	192
   583  000340  EC05  F001         	call	_LCD_Comando
   584                           
   585                           ;LCD_Libreria.c: 90:     }
   586  000344  EFA8  F001         	goto	l54
   587  000348                     l1015:
   588                           
   589                           ;LCD_Libreria.c: 92:         LCD_Comando(0x80+y);
   590  000348  5013               	movf	LCD_XY@y^0,w,c
   591  00034A  0F80               	addlw	128
   592  00034C  EC05  F001         	call	_LCD_Comando
   593  000350                     l54:
   594  000350  0012               	return		;funcret
   595  000352                     __end_of_LCD_XY:
   596                           	callstack 0
   597                           
   598 ;; *************** function _LCD_Init *****************
   599 ;; Defined at:
   600 ;;		line 6 in file "LCD_Libreria.c"
   601 ;; Parameters:    Size  Location     Type
   602 ;;		None
   603 ;; Auto vars:     Size  Location     Type
   604 ;;		None
   605 ;; Return value:  Size  Location     Type
   606 ;;                  1    wreg      void 
   607 ;; Registers used:
   608 ;;		wreg, status,2, status,0, cstack
   609 ;; Tracked objects:
   610 ;;		On entry : 0/0
   611 ;;		On exit  : 0/0
   612 ;;		Unchanged: 0/0
   613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   614 ;;      Params:         0       0       0       0       0       0       0       0       0
   615 ;;      Locals:         0       0       0       0       0       0       0       0       0
   616 ;;      Temps:          2       0       0       0       0       0       0       0       0
   617 ;;      Totals:         2       0       0       0       0       0       0       0       0
   618 ;;Total ram usage:        2 bytes
   619 ;; Hardware stack levels used:    1
   620 ;; Hardware stack levels required when called:    3
   621 ;; This function calls:
   622 ;;		_LCD_Comando
   623 ;; This function is called by:
   624 ;;		_main
   625 ;; This function uses a non-reentrant model
   626 ;;
   627                           
   628                           	psect	text3
   629  000194                     __ptext3:
   630                           	callstack 0
   631  000194                     _LCD_Init:
   632                           	callstack 27
   633  000194                     
   634                           ;LCD_Libreria.c: 7:     TRISD = 0x00;
   635  000194  0E00               	movlw	0
   636  000196  6E95               	movwf	149,c	;volatile
   637                           
   638                           ;LCD_Libreria.c: 8:     LATD = 0x00;
   639  000198  0E00               	movlw	0
   640  00019A  6E8C               	movwf	140,c	;volatile
   641  00019C                     
   642                           ;LCD_Libreria.c: 11:     LCD_Comando(0x30);
   643  00019C  0E30               	movlw	48
   644  00019E  EC05  F001         	call	_LCD_Comando
   645  0001A2                     
   646                           ;LCD_Libreria.c: 12:     _delay((unsigned long)((100)*(20000000UL/4000.0)));
   647  0001A2  0E03               	movlw	3
   648  0001A4  6E12               	movwf	(??_LCD_Init+1)^0,c
   649  0001A6  0E8A               	movlw	138
   650  0001A8  6E11               	movwf	??_LCD_Init^0,c
   651  0001AA  0E56               	movlw	86
   652  0001AC                     u227:
   653  0001AC  2EE8               	decfsz	wreg,f,c
   654  0001AE  D7FE               	bra	u227
   655  0001B0  2E11               	decfsz	??_LCD_Init^0,f,c
   656  0001B2  D7FC               	bra	u227
   657  0001B4  2E12               	decfsz	(??_LCD_Init+1)^0,f,c
   658  0001B6  D7FA               	bra	u227
   659  0001B8                     
   660                           ;LCD_Libreria.c: 13:     LCD_Comando(0x30);
   661  0001B8  0E30               	movlw	48
   662  0001BA  EC05  F001         	call	_LCD_Comando
   663  0001BE                     
   664                           ;LCD_Libreria.c: 14:     _delay((unsigned long)((100)*(20000000UL/4000.0)));
   665  0001BE  0E03               	movlw	3
   666  0001C0  6E12               	movwf	(??_LCD_Init+1)^0,c
   667  0001C2  0E8A               	movlw	138
   668  0001C4  6E11               	movwf	??_LCD_Init^0,c
   669  0001C6  0E56               	movlw	86
   670  0001C8                     u237:
   671  0001C8  2EE8               	decfsz	wreg,f,c
   672  0001CA  D7FE               	bra	u237
   673  0001CC  2E11               	decfsz	??_LCD_Init^0,f,c
   674  0001CE  D7FC               	bra	u237
   675  0001D0  2E12               	decfsz	(??_LCD_Init+1)^0,f,c
   676  0001D2  D7FA               	bra	u237
   677  0001D4                     
   678                           ;LCD_Libreria.c: 15:     LCD_Comando(0x32);
   679  0001D4  0E32               	movlw	50
   680  0001D6  EC05  F001         	call	_LCD_Comando
   681  0001DA                     
   682                           ;LCD_Libreria.c: 16:     LCD_Comando(0x28);
   683  0001DA  0E28               	movlw	40
   684  0001DC  EC05  F001         	call	_LCD_Comando
   685  0001E0                     
   686                           ;LCD_Libreria.c: 17:     LCD_Comando(0x0C);
   687  0001E0  0E0C               	movlw	12
   688  0001E2  EC05  F001         	call	_LCD_Comando
   689  0001E6                     
   690                           ;LCD_Libreria.c: 18:     LCD_Comando(0x01);
   691  0001E6  0E01               	movlw	1
   692  0001E8  EC05  F001         	call	_LCD_Comando
   693  0001EC                     
   694                           ;LCD_Libreria.c: 19:     LCD_Comando(0x06);
   695  0001EC  0E06               	movlw	6
   696  0001EE  EC05  F001         	call	_LCD_Comando
   697  0001F2                     
   698                           ;LCD_Libreria.c: 20:     _delay((unsigned long)((100)*(20000000UL/4000.0)));
   699  0001F2  0E03               	movlw	3
   700  0001F4  6E12               	movwf	(??_LCD_Init+1)^0,c
   701  0001F6  0E8A               	movlw	138
   702  0001F8  6E11               	movwf	??_LCD_Init^0,c
   703  0001FA  0E56               	movlw	86
   704  0001FC                     u247:
   705  0001FC  2EE8               	decfsz	wreg,f,c
   706  0001FE  D7FE               	bra	u247
   707  000200  2E11               	decfsz	??_LCD_Init^0,f,c
   708  000202  D7FC               	bra	u247
   709  000204  2E12               	decfsz	(??_LCD_Init+1)^0,f,c
   710  000206  D7FA               	bra	u247
   711  000208  0012               	return		;funcret
   712  00020A                     __end_of_LCD_Init:
   713                           	callstack 0
   714                           
   715 ;; *************** function _LCD_Comando *****************
   716 ;; Defined at:
   717 ;;		line 23 in file "LCD_Libreria.c"
   718 ;; Parameters:    Size  Location     Type
   719 ;;  cmd             1    wreg     unsigned char 
   720 ;; Auto vars:     Size  Location     Type
   721 ;;  cmd             1    3[COMRAM] unsigned char 
   722 ;; Return value:  Size  Location     Type
   723 ;;                  1    wreg      void 
   724 ;; Registers used:
   725 ;;		wreg, status,2, status,0
   726 ;; Tracked objects:
   727 ;;		On entry : 0/0
   728 ;;		On exit  : 0/0
   729 ;;		Unchanged: 0/0
   730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   731 ;;      Params:         0       0       0       0       0       0       0       0       0
   732 ;;      Locals:         1       0       0       0       0       0       0       0       0
   733 ;;      Temps:          1       0       0       0       0       0       0       0       0
   734 ;;      Totals:         2       0       0       0       0       0       0       0       0
   735 ;;Total ram usage:        2 bytes
   736 ;; Hardware stack levels used:    1
   737 ;; Hardware stack levels required when called:    2
   738 ;; This function calls:
   739 ;;		Nothing
   740 ;; This function is called by:
   741 ;;		_LCD_Init
   742 ;;		_LCD_XY
   743 ;; This function uses a non-reentrant model
   744 ;;
   745                           
   746                           	psect	text4
   747  00020A                     __ptext4:
   748                           	callstack 0
   749  00020A                     _LCD_Comando:
   750                           	callstack 27
   751                           
   752                           ;incstack = 0
   753                           ;LCD_Comando@cmd stored from wreg
   754  00020A  6E10               	movwf	LCD_Comando@cmd^0,c
   755  00020C                     
   756                           ;LCD_Libreria.c: 27:     LATD = LATD & 0x0f;
   757  00020C  508C               	movf	140,w,c	;volatile
   758  00020E  0B0F               	andlw	15
   759  000210  6E8C               	movwf	140,c	;volatile
   760                           
   761                           ;LCD_Libreria.c: 33:     LATD = LATD | (cmd & 0xf0);
   762  000212  5010               	movf	LCD_Comando@cmd^0,w,c
   763  000214  0BF0               	andlw	240
   764  000216  108C               	iorwf	140,w,c	;volatile
   765  000218  6E8C               	movwf	140,c	;volatile
   766  00021A                     
   767                           ;LCD_Libreria.c: 42:     LATDbits.LATD2 = 0;
   768  00021A  948C               	bcf	140,2,c	;volatile
   769  00021C                     
   770                           ;LCD_Libreria.c: 43:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   771  00021C  0E07               	movlw	7
   772  00021E  6E0F               	movwf	??_LCD_Comando^0,c
   773  000220  0E7D               	movlw	125
   774  000222                     u257:
   775  000222  2EE8               	decfsz	wreg,f,c
   776  000224  D7FE               	bra	u257
   777  000226  2E0F               	decfsz	??_LCD_Comando^0,f,c
   778  000228  D7FC               	bra	u257
   779  00022A  F000               	nop	
   780  00022C                     
   781                           ;LCD_Libreria.c: 44:     LATDbits.LATD3 = 1;
   782  00022C  868C               	bsf	140,3,c	;volatile
   783  00022E                     
   784                           ;LCD_Libreria.c: 45:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   785  00022E  0E07               	movlw	7
   786  000230  6E0F               	movwf	??_LCD_Comando^0,c
   787  000232  0E7D               	movlw	125
   788  000234                     u267:
   789  000234  2EE8               	decfsz	wreg,f,c
   790  000236  D7FE               	bra	u267
   791  000238  2E0F               	decfsz	??_LCD_Comando^0,f,c
   792  00023A  D7FC               	bra	u267
   793  00023C  F000               	nop	
   794  00023E                     
   795                           ;LCD_Libreria.c: 46:     LATDbits.LATD3 = 0;
   796  00023E  968C               	bcf	140,3,c	;volatile
   797                           
   798                           ;LCD_Libreria.c: 48:     LATD &= 0x0f;
   799  000240  0E0F               	movlw	15
   800  000242  168C               	andwf	140,f,c	;volatile
   801                           
   802                           ;LCD_Libreria.c: 49:     LATD |= ((cmd<<4) & 0xf0);
   803  000244  3810               	swapf	LCD_Comando@cmd^0,w,c
   804  000246  0BF0               	andlw	240
   805  000248  0BF0               	andlw	240
   806  00024A  128C               	iorwf	140,f,c	;volatile
   807  00024C                     
   808                           ;LCD_Libreria.c: 57:     LATDbits.LATD2 = 0;
   809  00024C  948C               	bcf	140,2,c	;volatile
   810  00024E                     
   811                           ;LCD_Libreria.c: 58:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   812  00024E  0E07               	movlw	7
   813  000250  6E0F               	movwf	??_LCD_Comando^0,c
   814  000252  0E7D               	movlw	125
   815  000254                     u277:
   816  000254  2EE8               	decfsz	wreg,f,c
   817  000256  D7FE               	bra	u277
   818  000258  2E0F               	decfsz	??_LCD_Comando^0,f,c
   819  00025A  D7FC               	bra	u277
   820  00025C  F000               	nop	
   821  00025E                     
   822                           ;LCD_Libreria.c: 59:     LATDbits.LATD3 = 1;
   823  00025E  868C               	bsf	140,3,c	;volatile
   824  000260                     
   825                           ;LCD_Libreria.c: 60:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   826  000260  0E07               	movlw	7
   827  000262  6E0F               	movwf	??_LCD_Comando^0,c
   828  000264  0E7D               	movlw	125
   829  000266                     u287:
   830  000266  2EE8               	decfsz	wreg,f,c
   831  000268  D7FE               	bra	u287
   832  00026A  2E0F               	decfsz	??_LCD_Comando^0,f,c
   833  00026C  D7FC               	bra	u287
   834  00026E  F000               	nop	
   835  000270                     
   836                           ;LCD_Libreria.c: 61:     LATDbits.LATD3 = 0;
   837  000270  968C               	bcf	140,3,c	;volatile
   838  000272  0012               	return		;funcret
   839  000274                     __end_of_LCD_Comando:
   840                           	callstack 0
   841                           
   842 ;; *************** function _LCD_Data *****************
   843 ;; Defined at:
   844 ;;		line 64 in file "LCD_Libreria.c"
   845 ;; Parameters:    Size  Location     Type
   846 ;;  data            1    wreg     unsigned char 
   847 ;; Auto vars:     Size  Location     Type
   848 ;;  data            1    3[COMRAM] unsigned char 
   849 ;; Return value:  Size  Location     Type
   850 ;;                  1    wreg      void 
   851 ;; Registers used:
   852 ;;		wreg, status,2, status,0
   853 ;; Tracked objects:
   854 ;;		On entry : 0/0
   855 ;;		On exit  : 0/0
   856 ;;		Unchanged: 0/0
   857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   858 ;;      Params:         0       0       0       0       0       0       0       0       0
   859 ;;      Locals:         1       0       0       0       0       0       0       0       0
   860 ;;      Temps:          1       0       0       0       0       0       0       0       0
   861 ;;      Totals:         2       0       0       0       0       0       0       0       0
   862 ;;Total ram usage:        2 bytes
   863 ;; Hardware stack levels used:    1
   864 ;; Hardware stack levels required when called:    2
   865 ;; This function calls:
   866 ;;		Nothing
   867 ;; This function is called by:
   868 ;;		_main
   869 ;;		_LDC_Cadena
   870 ;; This function uses a non-reentrant model
   871 ;;
   872                           
   873                           	psect	text5
   874  000274                     __ptext5:
   875                           	callstack 0
   876  000274                     _LCD_Data:
   877                           	callstack 28
   878                           
   879                           ;incstack = 0
   880                           ;LCD_Data@data stored from wreg
   881  000274  6E10               	movwf	LCD_Data@data^0,c
   882  000276                     
   883                           ;LCD_Libreria.c: 68:     LATD = LATD & 0x0f;
   884  000276  508C               	movf	140,w,c	;volatile
   885  000278  0B0F               	andlw	15
   886  00027A  6E8C               	movwf	140,c	;volatile
   887                           
   888                           ;LCD_Libreria.c: 69:     LATD = LATD | (data & 0xf0);
   889  00027C  5010               	movf	LCD_Data@data^0,w,c
   890  00027E  0BF0               	andlw	240
   891  000280  108C               	iorwf	140,w,c	;volatile
   892  000282  6E8C               	movwf	140,c	;volatile
   893  000284                     
   894                           ;LCD_Libreria.c: 71:     LATDbits.LATD2 = 1;
   895  000284  848C               	bsf	140,2,c	;volatile
   896  000286                     
   897                           ;LCD_Libreria.c: 72:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   898  000286  0E07               	movlw	7
   899  000288  6E0F               	movwf	??_LCD_Data^0,c
   900  00028A  0E7D               	movlw	125
   901  00028C                     u297:
   902  00028C  2EE8               	decfsz	wreg,f,c
   903  00028E  D7FE               	bra	u297
   904  000290  2E0F               	decfsz	??_LCD_Data^0,f,c
   905  000292  D7FC               	bra	u297
   906  000294  F000               	nop	
   907  000296                     
   908                           ;LCD_Libreria.c: 73:     LATDbits.LATD3 = 1;
   909  000296  868C               	bsf	140,3,c	;volatile
   910  000298                     
   911                           ;LCD_Libreria.c: 74:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   912  000298  0E07               	movlw	7
   913  00029A  6E0F               	movwf	??_LCD_Data^0,c
   914  00029C  0E7D               	movlw	125
   915  00029E                     u307:
   916  00029E  2EE8               	decfsz	wreg,f,c
   917  0002A0  D7FE               	bra	u307
   918  0002A2  2E0F               	decfsz	??_LCD_Data^0,f,c
   919  0002A4  D7FC               	bra	u307
   920  0002A6  F000               	nop	
   921  0002A8                     
   922                           ;LCD_Libreria.c: 75:     LATDbits.LATD3 = 0;
   923  0002A8  968C               	bcf	140,3,c	;volatile
   924                           
   925                           ;LCD_Libreria.c: 77:     LATD &= 0x0f;
   926  0002AA  0E0F               	movlw	15
   927  0002AC  168C               	andwf	140,f,c	;volatile
   928                           
   929                           ;LCD_Libreria.c: 78:     LATD |= ((data<<4) & 0xf0);
   930  0002AE  3810               	swapf	LCD_Data@data^0,w,c
   931  0002B0  0BF0               	andlw	240
   932  0002B2  0BF0               	andlw	240
   933  0002B4  128C               	iorwf	140,f,c	;volatile
   934  0002B6                     
   935                           ;LCD_Libreria.c: 80:     LATDbits.LATD2 = 1;
   936  0002B6  848C               	bsf	140,2,c	;volatile
   937  0002B8                     
   938                           ;LCD_Libreria.c: 81:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   939  0002B8  0E07               	movlw	7
   940  0002BA  6E0F               	movwf	??_LCD_Data^0,c
   941  0002BC  0E7D               	movlw	125
   942  0002BE                     u317:
   943  0002BE  2EE8               	decfsz	wreg,f,c
   944  0002C0  D7FE               	bra	u317
   945  0002C2  2E0F               	decfsz	??_LCD_Data^0,f,c
   946  0002C4  D7FC               	bra	u317
   947  0002C6  F000               	nop	
   948  0002C8                     
   949                           ;LCD_Libreria.c: 82:     LATDbits.LATD3 = 1;
   950  0002C8  868C               	bsf	140,3,c	;volatile
   951  0002CA                     
   952                           ;LCD_Libreria.c: 83:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   953  0002CA  0E07               	movlw	7
   954  0002CC  6E0F               	movwf	??_LCD_Data^0,c
   955  0002CE  0E7D               	movlw	125
   956  0002D0                     u327:
   957  0002D0  2EE8               	decfsz	wreg,f,c
   958  0002D2  D7FE               	bra	u327
   959  0002D4  2E0F               	decfsz	??_LCD_Data^0,f,c
   960  0002D6  D7FC               	bra	u327
   961  0002D8  F000               	nop	
   962  0002DA                     
   963                           ;LCD_Libreria.c: 84:     LATDbits.LATD3 = 0;
   964  0002DA  968C               	bcf	140,3,c	;volatile
   965  0002DC  0012               	return		;funcret
   966  0002DE                     __end_of_LCD_Data:
   967                           	callstack 0
   968                           
   969 ;; *************** function _Int_Ext *****************
   970 ;; Defined at:
   971 ;;		line 9 in file "Interrupt.c"
   972 ;; Parameters:    Size  Location     Type
   973 ;;		None
   974 ;; Auto vars:     Size  Location     Type
   975 ;;		None
   976 ;; Return value:  Size  Location     Type
   977 ;;                  1    wreg      void 
   978 ;; Registers used:
   979 ;;		None
   980 ;; Tracked objects:
   981 ;;		On entry : 0/0
   982 ;;		On exit  : 0/0
   983 ;;		Unchanged: 0/0
   984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   985 ;;      Params:         0       0       0       0       0       0       0       0       0
   986 ;;      Locals:         0       0       0       0       0       0       0       0       0
   987 ;;      Temps:          0       0       0       0       0       0       0       0       0
   988 ;;      Totals:         0       0       0       0       0       0       0       0       0
   989 ;;Total ram usage:        0 bytes
   990 ;; Hardware stack levels used:    1
   991 ;; Hardware stack levels required when called:    2
   992 ;; This function calls:
   993 ;;		Nothing
   994 ;; This function is called by:
   995 ;;		_main
   996 ;; This function uses a non-reentrant model
   997 ;;
   998                           
   999                           	psect	text6
  1000  0003A0                     __ptext6:
  1001                           	callstack 0
  1002  0003A0                     _Int_Ext:
  1003                           	callstack 28
  1004  0003A0                     
  1005                           ;Interrupt.c: 24:     RCONbits.IPEN = 1;
  1006  0003A0  8ED0               	bsf	208,7,c	;volatile
  1007                           
  1008                           ;Interrupt.c: 25:     INTCONbits.GIEH = 1;
  1009  0003A2  8EF2               	bsf	242,7,c	;volatile
  1010                           
  1011                           ;Interrupt.c: 26:     INTCONbits.GIEL = 1;
  1012  0003A4  8CF2               	bsf	242,6,c	;volatile
  1013  0003A6  0012               	return		;funcret
  1014  0003A8                     __end_of_Int_Ext:
  1015                           	callstack 0
  1016                           
  1017 ;; *************** function _TMR0_Ext *****************
  1018 ;; Defined at:
  1019 ;;		line 41 in file "Interrupt.c"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;		None
  1022 ;; Auto vars:     Size  Location     Type
  1023 ;;		None
  1024 ;; Return value:  Size  Location     Type
  1025 ;;                  1    wreg      void 
  1026 ;; Registers used:
  1027 ;;		None
  1028 ;; Tracked objects:
  1029 ;;		On entry : 0/0
  1030 ;;		On exit  : 0/0
  1031 ;;		Unchanged: 0/0
  1032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1033 ;;      Params:         0       0       0       0       0       0       0       0       0
  1034 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1035 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1036 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1037 ;;Total ram usage:        1 bytes
  1038 ;; Hardware stack levels used:    1
  1039 ;; Hardware stack levels required when called:    1
  1040 ;; This function calls:
  1041 ;;		Nothing
  1042 ;; This function is called by:
  1043 ;;		Interrupt level 1
  1044 ;; This function uses a non-reentrant model
  1045 ;;
  1046                           
  1047                           	psect	intcodelo
  1048  000018                     __pintcodelo:
  1049                           	callstack 0
  1050  000018                     _TMR0_Ext:
  1051                           	callstack 27
  1052                           
  1053                           ;incstack = 0
  1054  000018  8019               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  1055  00001A  CFE0 F00E          	movff	bsr,??_TMR0_Ext
  1056  00001E  C00E  FFE0         	movff	??_TMR0_Ext,bsr
  1057  000022  9019               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1058  000024  0010               	retfie	
  1059  000026                     __end_of_TMR0_Ext:
  1060                           	callstack 0
  1061                           
  1062 ;; *************** function _INT02_Ext *****************
  1063 ;; Defined at:
  1064 ;;		line 29 in file "Interrupt.c"
  1065 ;; Parameters:    Size  Location     Type
  1066 ;;		None
  1067 ;; Auto vars:     Size  Location     Type
  1068 ;;		None
  1069 ;; Return value:  Size  Location     Type
  1070 ;;                  1    wreg      void 
  1071 ;; Registers used:
  1072 ;;		wreg, status,2, status,0
  1073 ;; Tracked objects:
  1074 ;;		On entry : 0/0
  1075 ;;		On exit  : 0/0
  1076 ;;		Unchanged: 0/0
  1077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1078 ;;      Params:         0       0       0       0       0       0       0       0       0
  1079 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1080 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1081 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1082 ;;Total ram usage:        1 bytes
  1083 ;; Hardware stack levels used:    1
  1084 ;; This function calls:
  1085 ;;		Nothing
  1086 ;; This function is called by:
  1087 ;;		Interrupt level 2
  1088 ;; This function uses a non-reentrant model
  1089 ;;
  1090                           
  1091                           	psect	intcode
  1092  000008                     __pintcode:
  1093                           	callstack 0
  1094  000008                     _INT02_Ext:
  1095                           	callstack 27
  1096                           
  1097                           ;incstack = 0
  1098  000008  8219               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1099  00000A  ED6F  F001         	call	int_func,f	;refresh shadow registers
  1100                           
  1101                           	psect	intcode_body
  1102  0002DE                     __pintcode_body:
  1103                           	callstack 27
  1104  0002DE                     int_func:
  1105                           	callstack 27
  1106  0002DE  0006               	pop		; remove dummy address from shadow register refresh
  1107  0002E0                     
  1108                           ;Interrupt.c: 30:     if(TMR1L == 0x00){
  1109  0002E0  50CE               	movf	206,w,c	;volatile
  1110  0002E2  A4D8               	btfss	status,2,c
  1111  0002E4  EF76  F001         	goto	i2u12_41
  1112  0002E8  EF78  F001         	goto	i2u12_40
  1113  0002EC                     i2u12_41:
  1114  0002EC  EF8E  F001         	goto	i2l1035
  1115  0002F0                     i2u12_40:
  1116  0002F0                     
  1117                           ;Interrupt.c: 31:         LATDbits.LATD0 = ~LATDbits.LATD0;
  1118  0002F0  B08C               	btfsc	140,0,c	;volatile
  1119  0002F2  EF7D  F001         	goto	i2u13_41
  1120  0002F6  EF80  F001         	goto	i2u13_40
  1121  0002FA                     i2u13_41:
  1122  0002FA  0E01               	movlw	1
  1123  0002FC  EF81  F001         	goto	i2u13_46
  1124  000300                     i2u13_40:
  1125  000300  0E00               	movlw	0
  1126  000302                     i2u13_46:
  1127  000302  0AFF               	xorlw	255
  1128  000304  6E0D               	movwf	??_INT02_Ext^0,c
  1129  000306  508C               	movf	140,w,c	;volatile
  1130  000308  180D               	xorwf	??_INT02_Ext^0,w,c
  1131  00030A  0BFE               	andlw	-2
  1132  00030C  180D               	xorwf	??_INT02_Ext^0,w,c
  1133  00030E  6E8C               	movwf	140,c	;volatile
  1134  000310                     
  1135                           ;Interrupt.c: 32:         TMR1H = 0x80;
  1136  000310  0E80               	movlw	128
  1137  000312  6ECF               	movwf	207,c	;volatile
  1138  000314                     
  1139                           ;Interrupt.c: 33:         TMR1L = 0x00;
  1140  000314  0E00               	movlw	0
  1141  000316  6ECE               	movwf	206,c	;volatile
  1142  000318                     
  1143                           ;Interrupt.c: 34:         sec++;
  1144  000318  4A0B               	infsnz	_sec^0,f,c
  1145  00031A  2A0C               	incf	(_sec+1)^0,f,c
  1146  00031C                     i2l1035:
  1147                           
  1148                           ;Interrupt.c: 37:     PIR1bits.TMR1IF = 0;
  1149  00031C  909E               	bcf	158,0,c	;volatile
  1150  00031E  9219               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1151  000320  0011               	retfie		f
  1152  000322                     __end_of_INT02_Ext:
  1153                           	callstack 0
  1154  0000                     
  1155                           	psect	rparam
  1156  0000                     
  1157                           	psect	temp
  1158  000019                     btemp:
  1159                           	callstack 0
  1160  000019                     	ds	1
  1161  0000                     int$flags	set	btemp
  1162  0000                     wtemp8	set	btemp+1
  1163  0000                     ttemp5	set	btemp+1
  1164  0000                     ttemp6	set	btemp+4
  1165  0000                     ttemp7	set	btemp+8
  1166                           
  1167                           	psect	idloc
  1168                           
  1169                           ;Config register IDLOC0 @ 0x200000
  1170                           ;	unspecified, using default values
  1171  200000                     	org	2097152
  1172  200000  FF                 	db	255
  1173                           
  1174                           ;Config register IDLOC1 @ 0x200001
  1175                           ;	unspecified, using default values
  1176  200001                     	org	2097153
  1177  200001  FF                 	db	255
  1178                           
  1179                           ;Config register IDLOC2 @ 0x200002
  1180                           ;	unspecified, using default values
  1181  200002                     	org	2097154
  1182  200002  FF                 	db	255
  1183                           
  1184                           ;Config register IDLOC3 @ 0x200003
  1185                           ;	unspecified, using default values
  1186  200003                     	org	2097155
  1187  200003  FF                 	db	255
  1188                           
  1189                           ;Config register IDLOC4 @ 0x200004
  1190                           ;	unspecified, using default values
  1191  200004                     	org	2097156
  1192  200004  FF                 	db	255
  1193                           
  1194                           ;Config register IDLOC5 @ 0x200005
  1195                           ;	unspecified, using default values
  1196  200005                     	org	2097157
  1197  200005  FF                 	db	255
  1198                           
  1199                           ;Config register IDLOC6 @ 0x200006
  1200                           ;	unspecified, using default values
  1201  200006                     	org	2097158
  1202  200006  FF                 	db	255
  1203                           
  1204                           ;Config register IDLOC7 @ 0x200007
  1205                           ;	unspecified, using default values
  1206  200007                     	org	2097159
  1207  200007  FF                 	db	255
  1208                           
  1209                           	psect	config
  1210                           
  1211                           ;Config register CONFIG1L @ 0x300000
  1212                           ;	PLL Prescaler Selection bits
  1213                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  1214                           ;	System Clock Postscaler Selection bits
  1215                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1216                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1217                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  1218  300000                     	org	3145728
  1219  300000  00                 	db	0
  1220                           
  1221                           ;Config register CONFIG1H @ 0x300001
  1222                           ;	Oscillator Selection bits
  1223                           ;	FOSC = HS, HS oscillator (HS)
  1224                           ;	Fail-Safe Clock Monitor Enable bit
  1225                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1226                           ;	Internal/External Oscillator Switchover bit
  1227                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1228  300001                     	org	3145729
  1229  300001  0C                 	db	12
  1230                           
  1231                           ;Config register CONFIG2L @ 0x300002
  1232                           ;	Power-up Timer Enable bit
  1233                           ;	PWRT = ON, PWRT enabled
  1234                           ;	Brown-out Reset Enable bits
  1235                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  1236                           ;	Brown-out Reset Voltage bits
  1237                           ;	BORV = 3, Minimum setting 2.05V
  1238                           ;	USB Voltage Regulator Enable bit
  1239                           ;	VREGEN = OFF, USB voltage regulator disabled
  1240  300002                     	org	3145730
  1241  300002  18                 	db	24
  1242                           
  1243                           ;Config register CONFIG2H @ 0x300003
  1244                           ;	Watchdog Timer Enable bit
  1245                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1246                           ;	Watchdog Timer Postscale Select bits
  1247                           ;	WDTPS = 32768, 1:32768
  1248  300003                     	org	3145731
  1249  300003  1E                 	db	30
  1250                           
  1251                           ; Padding undefined space
  1252  300004                     	org	3145732
  1253  300004  FF                 	db	255
  1254                           
  1255                           ;Config register CONFIG3H @ 0x300005
  1256                           ;	CCP2 MUX bit
  1257                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1258                           ;	PORTB A/D Enable bit
  1259                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1260                           ;	Low-Power Timer 1 Oscillator Enable bit
  1261                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1262                           ;	MCLR Pin Enable bit
  1263                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1264  300005                     	org	3145733
  1265  300005  81                 	db	129
  1266                           
  1267                           ;Config register CONFIG4L @ 0x300006
  1268                           ;	Stack Full/Underflow Reset Enable bit
  1269                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  1270                           ;	Single-Supply ICSP Enable bit
  1271                           ;	LVP = OFF, Single-Supply ICSP disabled
  1272                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1273                           ;	ICPRT = OFF, ICPORT disabled
  1274                           ;	Extended Instruction Set Enable bit
  1275                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1276                           ;	Background Debugger Enable bit
  1277                           ;	DEBUG = 0x1, unprogrammed default
  1278  300006                     	org	3145734
  1279  300006  80                 	db	128
  1280                           
  1281                           ; Padding undefined space
  1282  300007                     	org	3145735
  1283  300007  FF                 	db	255
  1284                           
  1285                           ;Config register CONFIG5L @ 0x300008
  1286                           ;	Code Protection bit
  1287                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1288                           ;	Code Protection bit
  1289                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1290                           ;	Code Protection bit
  1291                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1292                           ;	Code Protection bit
  1293                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1294  300008                     	org	3145736
  1295  300008  0F                 	db	15
  1296                           
  1297                           ;Config register CONFIG5H @ 0x300009
  1298                           ;	Boot Block Code Protection bit
  1299                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1300                           ;	Data EEPROM Code Protection bit
  1301                           ;	CPD = OFF, Data EEPROM is not code-protected
  1302  300009                     	org	3145737
  1303  300009  C0                 	db	192
  1304                           
  1305                           ;Config register CONFIG6L @ 0x30000A
  1306                           ;	Write Protection bit
  1307                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1308                           ;	Write Protection bit
  1309                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1310                           ;	Write Protection bit
  1311                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1312                           ;	Write Protection bit
  1313                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1314  30000A                     	org	3145738
  1315  30000A  0F                 	db	15
  1316                           
  1317                           ;Config register CONFIG6H @ 0x30000B
  1318                           ;	Configuration Register Write Protection bit
  1319                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1320                           ;	Boot Block Write Protection bit
  1321                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1322                           ;	Data EEPROM Write Protection bit
  1323                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1324  30000B                     	org	3145739
  1325  30000B  E0                 	db	224
  1326                           
  1327                           ;Config register CONFIG7L @ 0x30000C
  1328                           ;	Table Read Protection bit
  1329                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1330                           ;	Table Read Protection bit
  1331                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1332                           ;	Table Read Protection bit
  1333                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1334                           ;	Table Read Protection bit
  1335                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1336  30000C                     	org	3145740
  1337  30000C  0F                 	db	15
  1338                           
  1339                           ;Config register CONFIG7H @ 0x30000D
  1340                           ;	Boot Block Table Read Protection bit
  1341                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1342  30000D                     	org	3145741
  1343  30000D  40                 	db	64
  1344                           tosu	equ	0xFFF
  1345                           tosh	equ	0xFFE
  1346                           tosl	equ	0xFFD
  1347                           stkptr	equ	0xFFC
  1348                           pclatu	equ	0xFFB
  1349                           pclath	equ	0xFFA
  1350                           pcl	equ	0xFF9
  1351                           tblptru	equ	0xFF8
  1352                           tblptrh	equ	0xFF7
  1353                           tblptrl	equ	0xFF6
  1354                           tablat	equ	0xFF5
  1355                           prodh	equ	0xFF4
  1356                           prodl	equ	0xFF3
  1357                           indf0	equ	0xFEF
  1358                           postinc0	equ	0xFEE
  1359                           postdec0	equ	0xFED
  1360                           preinc0	equ	0xFEC
  1361                           plusw0	equ	0xFEB
  1362                           fsr0h	equ	0xFEA
  1363                           fsr0l	equ	0xFE9
  1364                           wreg	equ	0xFE8
  1365                           indf1	equ	0xFE7
  1366                           postinc1	equ	0xFE6
  1367                           postdec1	equ	0xFE5
  1368                           preinc1	equ	0xFE4
  1369                           plusw1	equ	0xFE3
  1370                           fsr1h	equ	0xFE2
  1371                           fsr1l	equ	0xFE1
  1372                           bsr	equ	0xFE0
  1373                           indf2	equ	0xFDF
  1374                           postinc2	equ	0xFDE
  1375                           postdec2	equ	0xFDD
  1376                           preinc2	equ	0xFDC
  1377                           plusw2	equ	0xFDB
  1378                           fsr2h	equ	0xFDA
  1379                           fsr2l	equ	0xFD9
  1380                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        12
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     10      24
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_LCD_XY
    _LCD_XY->_LCD_Comando
    _LCD_Init->_LCD_Comando

Critical Paths under _TMR0_Ext in COMRAM

    None.

Critical Paths under _INT02_Ext in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _TMR0_Ext in BANK0

    None.

Critical Paths under _INT02_Ext in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TMR0_Ext in BANK1

    None.

Critical Paths under _INT02_Ext in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TMR0_Ext in BANK2

    None.

Critical Paths under _INT02_Ext in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TMR0_Ext in BANK3

    None.

Critical Paths under _INT02_Ext in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TMR0_Ext in BANK4

    None.

Critical Paths under _INT02_Ext in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TMR0_Ext in BANK5

    None.

Critical Paths under _INT02_Ext in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TMR0_Ext in BANK6

    None.

Critical Paths under _INT02_Ext in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TMR0_Ext in BANK7

    None.

Critical Paths under _INT02_Ext in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     350
                                              8 COMRAM     2     2      0
                            _Int_Ext
                           _LCD_Data
                           _LCD_Init
                             _LCD_XY
                        _Timer1_Init
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_XY                                               4     0      4     262
                                              4 COMRAM     4     0      4
                        _LCD_Comando
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      44
                                              4 COMRAM     2     2      0
                        _LCD_Comando
 ---------------------------------------------------------------------------------
 (2) _LCD_Comando                                          2     2      0      44
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Data                                             2     2      0      44
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Int_Ext                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _TMR0_Ext                                             1     1      0       0
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INT02_Ext                                            1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Int_Ext
   _LCD_Data
   _LCD_Init
     _LCD_Comando
   _LCD_XY
     _LCD_Comando
   _Timer1_Init

 _TMR0_Ext (ROOT)

 _INT02_Ext (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      A      18       1       25.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      18      20        0.0%
DATA                 0      0      18       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sun Dec 20 15:29:44 2020

                      _i 0017             ?_LCD_Comando 000D                       l19 03A6  
                     l43 0208                       l46 0272                       l54 0350  
                     l49 02DC                       bsr 000FE0                      l127 0392  
                    l951 022E                      l943 020C                      l961 0260  
                    l953 023E                      l945 021A                      l963 0270  
                    l955 024C                      l947 021C                      l971 01A2  
                    l965 03A0                      l957 024E                      l949 022C  
                    l981 01E0                      l973 01B8                      l991 0284  
                    l959 025E                      l983 01E6                      l975 01BE  
                    l967 0194                      l993 0286                      l985 01EC  
                    l977 01D4                      l969 019C                      l995 0296  
                    l987 01F2                      l979 01DA                      l997 0298  
                    l989 0276                      l999 02A8                      u110 033C  
                    u111 0338                      u200 011E                      u201 011A  
                    u150 0056                      u151 0052                      u160 007E  
                    u217 0180                      u161 007A                      u170 00A6  
                    u307 029E                      u227 01AC                      u171 00A2  
                    u180 00CE                      u317 02BE                      u237 01C8  
                    u181 00CA                      u190 00F6                      u327 02D0  
                    u247 01FC                      u191 00F2                      u257 0222  
                    u267 0234                      u277 0254                      u287 0266  
                    u297 028C                      _hor 0003                      _min 0007  
                    _sec 000B                      wreg 000FE8                     l1001 02B6  
                   l1003 02B8                     l1011 0322                     l1005 02C8  
                   l1013 033C                     l1021 038E                     l1101 0160  
                   l1007 02CA                     l1015 0348                     l1023 0390  
                   l1103 0166                     l1009 02DA                     l1017 0380  
                   l1105 016E                     l1019 038C                     l1107 0176  
                   l1051 0032                     l1061 0062                     l1053 0036  
                   l1071 00AE                     l1063 007E                     l1055 003A  
                   l1047 002A                     l1081 00F6                     l1073 00B2  
                   l1065 0086                     l1057 0056                     l1049 002E  
                   l1091 013A                     l1083 00FE                     l1075 00CE  
                   l1067 008A                     l1059 005E                     l1093 0142  
                   l1085 0102                     l1077 00D6                     l1069 00A6  
                   l1095 014A                     l1087 011E                     l1079 00DA  
                   l1097 0150                     l1089 0126                     l1099 0158  
                   _LATD 000F8C                     i1l30 001E                     i2l25 031E  
     __size_of_INT02_Ext 031A                     _main 002A                     fsr1l 000FE1  
                   btemp 0019                     start 0026             ___param_bank 000000  
        __end_of_Int_Ext 03A8         __end_of_LCD_Data 02DE         __end_of_LCD_Init 020A  
           LCD_Data@data 0010                    ?_main 000D                    _T1CON 000FCD  
                  _TMR1H 000FCF                    _TMR1L 000FCE                    _TRISD 000F95  
       __end_of_TMR0_Ext 0026                    _hor_d 0001                    _min_d 0005  
                  _sec_d 0009                    tablat 000FF5                    ttemp5 001A  
                  ttemp6 001D                    ttemp7 0021                    status 000FD8  
                  wtemp8 001A          __initialization 0352             __end_of_main 0194  
      __end_of_INT02_Ext 0322                   ??_main 0015            __activetblptr 000000  
                 _LCD_XY 0322                   i2l1031 0314                   i2l1033 0318  
                 i2l1025 02E0                   i2l1027 02F0                   i2l1035 031C  
                 i2l1029 0310                ??_Int_Ext 000F            ??_Timer1_Init 000F  
   __size_of_LCD_Comando 006A             __pdataCOMRAM 0001                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8                ?_LCD_Data 000D  
             __accesstop 0060  __end_of__initialization 0376                ?_LCD_Init 000D  
          ___rparam_used 000001           __pcstackCOMRAM 000D                ?_TMR0_Ext 000D  
    __end_of_Timer1_Init 0394                  ?_LCD_XY 0011                  LCD_XY@x 0011  
                LCD_XY@y 0013               ??_LCD_Data 000F               ??_LCD_Init 0011  
             ??_TMR0_Ext 000E                  i2u12_40 02F0                  i2u12_41 02EC  
                i2u13_40 0300                  i2u13_41 02FA                  i2u13_46 0302  
        __size_of_LCD_XY 0030                  _Int_Ext 03A0                  __Hparam 0000  
            _Timer1_Init 0380                  __Lparam 0000                  __pcinit 0352  
                __ramtop 0800                  __ptext0 002A                  __ptext1 0380  
                __ptext2 0322                  __ptext3 0194                  __ptext4 020A  
                __ptext5 0274                  __ptext6 03A0                _INT02_Ext 0008  
         LCD_Comando@cmd 0010           __pintcode_body 02DE     end_of_initialization 0376  
                int_func 02DE                  postdec1 000FE5                  postinc0 000FEE  
             ?_INT02_Ext 000D           __end_of_LCD_XY 0352        __size_of_LCD_Data 006A  
      __size_of_LCD_Init 0076            ??_LCD_Comando 000F            __pidataCOMRAM 0394  
      __size_of_TMR0_Ext 000E      start_initialization 0352                 ??_LCD_XY 0015  
    __end_of_LCD_Comando 0274              __pbssCOMRAM 0017              ??_INT02_Ext 000D  
               ?_Int_Ext 000D             ?_Timer1_Init 000D                __pintcode 0008  
            __pintcodelo 0018                 _LCD_Data 0274                 _LCD_Init 0194  
               _LATDbits 000F8C                 _IPR1bits 000F9F                 _PIE1bits 000F9D  
               _PIR1bits 000F9E                 _RCONbits 000FD0                 _TMR0_Ext 0018  
            _LCD_Comando 020A                copy_data0 0366                 __Hrparam 0000  
       __size_of_Int_Ext 0008                 __Lrparam 0000            __size_of_main 016A  
   __size_of_Timer1_Init 0014                 int$flags 0019               _INTCONbits 000FF2  
               intlevel1 0000                 intlevel2 0000  
