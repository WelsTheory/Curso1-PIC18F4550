

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sun Dec 27 16:48:00 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    21                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    22                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    23                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    25                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    27  0000                     
    28                           ; Version 2.20
    29                           ; Generated 12/02/2020 GMT
    30                           ; 
    31                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC18F4550 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     _ADRES	set	4035
    63  0000                     _TXREG	set	4013
    64  0000                     _IPR1bits	set	3999
    65  0000                     _PIE1bits	set	3997
    66  0000                     _RCSTAbits	set	4011
    67  0000                     _BAUDCONbits	set	4024
    68  0000                     _TXSTAbits	set	4012
    69  0000                     _SPBRG	set	4015
    70  0000                     _TRISCbits	set	3988
    71  0000                     _LATDbits	set	3980
    72  0000                     _LATD	set	3980
    73  0000                     _TRISD	set	3989
    74  0000                     _PIR1bits	set	3998
    75  0000                     _RCREG	set	4014
    76  0000                     _INTCONbits	set	4082
    77  0000                     _RCONbits	set	4048
    78  0000                     _ADCON0bits	set	4034
    79  0000                     _ADCON2bits	set	4032
    80  0000                     _ADCON1bits	set	4033
    81                           
    82                           	psect	smallconst
    83  000800                     __psmallconst:
    84                           	callstack 0
    85  000800  00                 	db	0
    86  000801                     STR_1:
    87  000801  48                 	db	72	;'H'
    88  000802  6F                 	db	111	;'o'
    89  000803  6C                 	db	108	;'l'
    90  000804  61                 	db	97	;'a'
    91  000805  20                 	db	32
    92  000806  3A                 	db	58	;':'
    93  000807  44                 	db	68	;'D'
    94  000808  00                 	db	0
    95  000809  00                 	db	0	; dummy byte at the end
    96  0000                     
    97                           ; #config settings
    98                           
    99                           	psect	cinit
   100  000A88                     __pcinit:
   101                           	callstack 0
   102  000A88                     start_initialization:
   103                           	callstack 0
   104  000A88                     __initialization:
   105                           	callstack 0
   106                           
   107                           ; Clear objects allocated to COMRAM (10 bytes)
   108  000A88  EE00  F00E         	lfsr	0,__pbssCOMRAM
   109  000A8C  0E0A               	movlw	10
   110  000A8E                     clear_0:
   111  000A8E  6AEE               	clrf	postinc0,c
   112  000A90  06E8               	decf	wreg,f,c
   113  000A92  E1FD               	bnz	clear_0
   114  000A94                     end_of_initialization:
   115                           	callstack 0
   116  000A94                     __end_of__initialization:
   117                           	callstack 0
   118  000A94  9018               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   119  000A96  9218               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   120  000A98  0E00               	movlw	low (__Lsmallconst shr (0+16))
   121  000A9A  6EF8               	movwf	tblptru,c
   122  000A9C  0E08               	movlw	high __Lsmallconst
   123  000A9E  6EF7               	movwf	tblptrh,c
   124  000AA0  0100               	movlb	0
   125  000AA2  EF40  F004         	goto	_main	;jump to C main() function
   126                           
   127                           	psect	bssCOMRAM
   128  00000E                     __pbssCOMRAM:
   129                           	callstack 0
   130  00000E                     _a:
   131                           	callstack 0
   132  00000E                     	ds	2
   133  000010                     _i:
   134                           	callstack 0
   135  000010                     	ds	2
   136  000012                     _valor:
   137                           	callstack 0
   138  000012                     	ds	1
   139  000013                     _datos:
   140                           	callstack 0
   141  000013                     	ds	5
   142                           
   143                           	psect	cstackCOMRAM
   144  000001                     __pcstackCOMRAM:
   145                           	callstack 0
   146  000001                     ??_Recepcion_Ext:
   147  000001                     
   148                           ; 1 bytes @ 0x0
   149  000001                     	ds	5
   150  000006                     ??_LCD_Comando:
   151  000006                     ??_LCD_Data:
   152  000006                     EUSART_Init@baud:
   153                           	callstack 0
   154  000006                     EUSART_Tx@dato_tx:
   155                           	callstack 0
   156                           
   157                           ; 1 bytes @ 0x5
   158  000006                     	ds	1
   159  000007                     LCD_Comando@cmd:
   160                           	callstack 0
   161  000007                     LCD_Data@data:
   162                           	callstack 0
   163  000007                     EUSART_Cadena@datas:
   164                           	callstack 0
   165                           
   166                           ; 2 bytes @ 0x6
   167  000007                     	ds	1
   168  000008                     ??_LCD_Init:
   169  000008                     LCD_XY@x:
   170                           	callstack 0
   171  000008                     LDC_Cadena@dato:
   172                           	callstack 0
   173                           
   174                           ; 2 bytes @ 0x7
   175  000008                     	ds	1
   176  000009                     
   177                           ; 1 bytes @ 0x8
   178  000009                     	ds	1
   179  00000A                     LCD_XY@y:
   180                           	callstack 0
   181                           
   182                           ; 2 bytes @ 0x9
   183  00000A                     	ds	2
   184  00000C                     ??_main:
   185                           
   186                           ; 1 bytes @ 0xB
   187  00000C                     	ds	2
   188                           
   189 ;;
   190 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   191 ;;
   192 ;; *************** function _main *****************
   193 ;; Defined at:
   194 ;;		line 22 in file "Programa_principal.c"
   195 ;; Parameters:    Size  Location     Type
   196 ;;		None
   197 ;; Auto vars:     Size  Location     Type
   198 ;;		None
   199 ;; Return value:  Size  Location     Type
   200 ;;                  1    wreg      void 
   201 ;; Registers used:
   202 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   203 ;; Tracked objects:
   204 ;;		On entry : 0/0
   205 ;;		On exit  : 0/0
   206 ;;		Unchanged: 0/0
   207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   208 ;;      Params:         0       0       0       0       0       0       0       0       0
   209 ;;      Locals:         0       0       0       0       0       0       0       0       0
   210 ;;      Temps:          2       0       0       0       0       0       0       0       0
   211 ;;      Totals:         2       0       0       0       0       0       0       0       0
   212 ;;Total ram usage:        2 bytes
   213 ;; Hardware stack levels required when called:    4
   214 ;; This function calls:
   215 ;;		_EUSART_Cadena
   216 ;;		_EUSART_Init
   217 ;;		_Int_Ext
   218 ;;		_LCD_Init
   219 ;;		_LCD_XY
   220 ;;		_LDC_Cadena
   221 ;; This function is called by:
   222 ;;		Startup code after reset
   223 ;; This function uses a non-reentrant model
   224 ;;
   225                           
   226                           	psect	text0
   227  000880                     __ptext0:
   228                           	callstack 0
   229  000880                     _main:
   230                           	callstack 27
   231  000880                     
   232                           ;Programa_principal.c: 23:     EUSART_Init(31);
   233  000880  0E1F               	movlw	31
   234  000882  EC33  F005         	call	_EUSART_Init
   235  000886                     
   236                           ;Programa_principal.c: 24:     LCD_Init();
   237  000886  EC05  F004         	call	_LCD_Init	;wreg free
   238  00088A                     
   239                           ;Programa_principal.c: 25:     Int_Ext();
   240  00088A  EC5E  F005         	call	_Int_Ext	;wreg free
   241  00088E                     
   242                           ;Programa_principal.c: 26:     EUSART_Cadena("Hola :D");
   243  00088E  0E01               	movlw	low STR_1
   244  000890  6E07               	movwf	EUSART_Cadena@datas^0,c
   245  000892  0E08               	movlw	high STR_1
   246  000894  6E08               	movwf	(EUSART_Cadena@datas+1)^0,c
   247  000896  ECE0  F004         	call	_EUSART_Cadena	;wreg free
   248  00089A                     l1022:
   249                           
   250                           ;Programa_principal.c: 28:         if(a == 5){
   251  00089A  0E05               	movlw	5
   252  00089C  180E               	xorwf	_a^0,w,c
   253  00089E  100F               	iorwf	(_a+1)^0,w,c
   254  0008A0  A4D8               	btfss	status,2,c
   255  0008A2  EF55  F004         	goto	u111
   256  0008A6  EF57  F004         	goto	u110
   257  0008AA                     u111:
   258  0008AA  EF4D  F004         	goto	l1022
   259  0008AE                     u110:
   260  0008AE                     
   261                           ;Programa_principal.c: 29:             LCD_XY(0,0);
   262  0008AE  0E00               	movlw	0
   263  0008B0  6E09               	movwf	(LCD_XY@x+1)^0,c
   264  0008B2  0E00               	movlw	0
   265  0008B4  6E08               	movwf	LCD_XY@x^0,c
   266  0008B6  0E00               	movlw	0
   267  0008B8  6E0B               	movwf	(LCD_XY@y+1)^0,c
   268  0008BA  0E00               	movlw	0
   269  0008BC  6E0A               	movwf	LCD_XY@y^0,c
   270  0008BE  EC1B  F005         	call	_LCD_XY	;wreg free
   271  0008C2                     
   272                           ;Programa_principal.c: 30:             LDC_Cadena(datos);
   273  0008C2  0E13               	movlw	low _datos
   274  0008C4  6E08               	movwf	LDC_Cadena@dato^0,c
   275  0008C6  0E00               	movlw	high _datos
   276  0008C8  6E09               	movwf	(LDC_Cadena@dato+1)^0,c
   277  0008CA  ECFF  F004         	call	_LDC_Cadena	;wreg free
   278  0008CE                     
   279                           ;Programa_principal.c: 31:             _delay((unsigned long)((100)*(20000000UL/4000.0))
      +                          );
   280  0008CE  0E03               	movlw	3
   281  0008D0  6E0D               	movwf	(??_main+1)^0,c
   282  0008D2  0E8A               	movlw	138
   283  0008D4  6E0C               	movwf	??_main^0,c
   284  0008D6  0E56               	movlw	86
   285  0008D8                     u127:
   286  0008D8  2EE8               	decfsz	wreg,f,c
   287  0008DA  D7FE               	bra	u127
   288  0008DC  2E0C               	decfsz	??_main^0,f,c
   289  0008DE  D7FC               	bra	u127
   290  0008E0  2E0D               	decfsz	(??_main+1)^0,f,c
   291  0008E2  D7FA               	bra	u127
   292  0008E4  EF4D  F004         	goto	l1022
   293  0008E8  EF30  F000         	goto	start
   294  0008EC                     __end_of_main:
   295                           	callstack 0
   296                           
   297 ;; *************** function _LDC_Cadena *****************
   298 ;; Defined at:
   299 ;;		line 96 in file "LCD_Libreria.c"
   300 ;; Parameters:    Size  Location     Type
   301 ;;  dato            2    7[COMRAM] PTR const unsigned char 
   302 ;;		 -> datos(5), 
   303 ;; Auto vars:     Size  Location     Type
   304 ;;		None
   305 ;; Return value:  Size  Location     Type
   306 ;;                  1    wreg      void 
   307 ;; Registers used:
   308 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   309 ;; Tracked objects:
   310 ;;		On entry : 0/0
   311 ;;		On exit  : 0/0
   312 ;;		Unchanged: 0/0
   313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   314 ;;      Params:         2       0       0       0       0       0       0       0       0
   315 ;;      Locals:         0       0       0       0       0       0       0       0       0
   316 ;;      Temps:          0       0       0       0       0       0       0       0       0
   317 ;;      Totals:         2       0       0       0       0       0       0       0       0
   318 ;;Total ram usage:        2 bytes
   319 ;; Hardware stack levels used:    1
   320 ;; Hardware stack levels required when called:    3
   321 ;; This function calls:
   322 ;;		_LCD_Data
   323 ;; This function is called by:
   324 ;;		_main
   325 ;; This function uses a non-reentrant model
   326 ;;
   327                           
   328                           	psect	text1
   329  0009FE                     __ptext1:
   330                           	callstack 0
   331  0009FE                     _LDC_Cadena:
   332                           	callstack 27
   333  0009FE                     
   334                           ;LCD_Libreria.c: 97:     while(*dato != '\0'){
   335  0009FE  EF0E  F005         	goto	l1002
   336  000A02                     l996:
   337                           
   338                           ;LCD_Libreria.c: 98:         _delay((unsigned long)((100)*(20000000UL/4000000.0)));
   339  000A02  0EA6               	movlw	166
   340  000A04                     u137:
   341  000A04  2EE8               	decfsz	wreg,f,c
   342  000A06  D7FE               	bra	u137
   343  000A08  D000               	nop2	
   344  000A0A                     
   345                           ;LCD_Libreria.c: 99:         LCD_Data(*dato);
   346  000A0A  C008  FFD9         	movff	LDC_Cadena@dato,fsr2l
   347  000A0E  C009  FFDA         	movff	LDC_Cadena@dato+1,fsr2h
   348  000A12  50DF               	movf	indf2,w,c
   349  000A14  EC76  F004         	call	_LCD_Data
   350  000A18                     
   351                           ;LCD_Libreria.c: 100:         dato++;
   352  000A18  4A08               	infsnz	LDC_Cadena@dato^0,f,c
   353  000A1A  2A09               	incf	(LDC_Cadena@dato+1)^0,f,c
   354  000A1C                     l1002:
   355                           
   356                           ;LCD_Libreria.c: 97:     while(*dato != '\0'){
   357  000A1C  C008  FFD9         	movff	LDC_Cadena@dato,fsr2l
   358  000A20  C009  FFDA         	movff	LDC_Cadena@dato+1,fsr2h
   359  000A24  50DF               	movf	indf2,w,c
   360  000A26  A4D8               	btfss	status,2,c
   361  000A28  EF18  F005         	goto	u91
   362  000A2C  EF1A  F005         	goto	u90
   363  000A30                     u91:
   364  000A30  EF01  F005         	goto	l996
   365  000A34                     u90:
   366  000A34  0012               	return		;funcret
   367  000A36                     __end_of_LDC_Cadena:
   368                           	callstack 0
   369                           
   370 ;; *************** function _LCD_Data *****************
   371 ;; Defined at:
   372 ;;		line 64 in file "LCD_Libreria.c"
   373 ;; Parameters:    Size  Location     Type
   374 ;;  data            1    wreg     unsigned char 
   375 ;; Auto vars:     Size  Location     Type
   376 ;;  data            1    6[COMRAM] unsigned char 
   377 ;; Return value:  Size  Location     Type
   378 ;;                  1    wreg      void 
   379 ;; Registers used:
   380 ;;		wreg, status,2, status,0
   381 ;; Tracked objects:
   382 ;;		On entry : 0/0
   383 ;;		On exit  : 0/0
   384 ;;		Unchanged: 0/0
   385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   386 ;;      Params:         0       0       0       0       0       0       0       0       0
   387 ;;      Locals:         1       0       0       0       0       0       0       0       0
   388 ;;      Temps:          1       0       0       0       0       0       0       0       0
   389 ;;      Totals:         2       0       0       0       0       0       0       0       0
   390 ;;Total ram usage:        2 bytes
   391 ;; Hardware stack levels used:    1
   392 ;; Hardware stack levels required when called:    2
   393 ;; This function calls:
   394 ;;		Nothing
   395 ;; This function is called by:
   396 ;;		_LDC_Cadena
   397 ;; This function uses a non-reentrant model
   398 ;;
   399                           
   400                           	psect	text2
   401  0008EC                     __ptext2:
   402                           	callstack 0
   403  0008EC                     _LCD_Data:
   404                           	callstack 27
   405                           
   406                           ;incstack = 0
   407                           ;LCD_Data@data stored from wreg
   408  0008EC  6E07               	movwf	LCD_Data@data^0,c
   409  0008EE                     
   410                           ;LCD_Libreria.c: 68:     LATD = LATD & 0x0f;
   411  0008EE  508C               	movf	140,w,c	;volatile
   412  0008F0  0B0F               	andlw	15
   413  0008F2  6E8C               	movwf	140,c	;volatile
   414                           
   415                           ;LCD_Libreria.c: 69:     LATD = LATD | (data & 0xf0);
   416  0008F4  5007               	movf	LCD_Data@data^0,w,c
   417  0008F6  0BF0               	andlw	240
   418  0008F8  108C               	iorwf	140,w,c	;volatile
   419  0008FA  6E8C               	movwf	140,c	;volatile
   420  0008FC                     
   421                           ;LCD_Libreria.c: 71:     LATDbits.LATD2 = 1;
   422  0008FC  848C               	bsf	140,2,c	;volatile
   423  0008FE                     
   424                           ;LCD_Libreria.c: 72:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   425  0008FE  0E07               	movlw	7
   426  000900  6E06               	movwf	??_LCD_Data^0,c
   427  000902  0E7D               	movlw	125
   428  000904                     u147:
   429  000904  2EE8               	decfsz	wreg,f,c
   430  000906  D7FE               	bra	u147
   431  000908  2E06               	decfsz	??_LCD_Data^0,f,c
   432  00090A  D7FC               	bra	u147
   433  00090C  F000               	nop	
   434  00090E                     
   435                           ;LCD_Libreria.c: 73:     LATDbits.LATD3 = 1;
   436  00090E  868C               	bsf	140,3,c	;volatile
   437  000910                     
   438                           ;LCD_Libreria.c: 74:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   439  000910  0E07               	movlw	7
   440  000912  6E06               	movwf	??_LCD_Data^0,c
   441  000914  0E7D               	movlw	125
   442  000916                     u157:
   443  000916  2EE8               	decfsz	wreg,f,c
   444  000918  D7FE               	bra	u157
   445  00091A  2E06               	decfsz	??_LCD_Data^0,f,c
   446  00091C  D7FC               	bra	u157
   447  00091E  F000               	nop	
   448  000920                     
   449                           ;LCD_Libreria.c: 75:     LATDbits.LATD3 = 0;
   450  000920  968C               	bcf	140,3,c	;volatile
   451                           
   452                           ;LCD_Libreria.c: 77:     LATD &= 0x0f;
   453  000922  0E0F               	movlw	15
   454  000924  168C               	andwf	140,f,c	;volatile
   455                           
   456                           ;LCD_Libreria.c: 78:     LATD |= ((data<<4) & 0xf0);
   457  000926  3807               	swapf	LCD_Data@data^0,w,c
   458  000928  0BF0               	andlw	240
   459  00092A  0BF0               	andlw	240
   460  00092C  128C               	iorwf	140,f,c	;volatile
   461  00092E                     
   462                           ;LCD_Libreria.c: 80:     LATDbits.LATD2 = 1;
   463  00092E  848C               	bsf	140,2,c	;volatile
   464  000930                     
   465                           ;LCD_Libreria.c: 81:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   466  000930  0E07               	movlw	7
   467  000932  6E06               	movwf	??_LCD_Data^0,c
   468  000934  0E7D               	movlw	125
   469  000936                     u167:
   470  000936  2EE8               	decfsz	wreg,f,c
   471  000938  D7FE               	bra	u167
   472  00093A  2E06               	decfsz	??_LCD_Data^0,f,c
   473  00093C  D7FC               	bra	u167
   474  00093E  F000               	nop	
   475  000940                     
   476                           ;LCD_Libreria.c: 82:     LATDbits.LATD3 = 1;
   477  000940  868C               	bsf	140,3,c	;volatile
   478  000942                     
   479                           ;LCD_Libreria.c: 83:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   480  000942  0E07               	movlw	7
   481  000944  6E06               	movwf	??_LCD_Data^0,c
   482  000946  0E7D               	movlw	125
   483  000948                     u177:
   484  000948  2EE8               	decfsz	wreg,f,c
   485  00094A  D7FE               	bra	u177
   486  00094C  2E06               	decfsz	??_LCD_Data^0,f,c
   487  00094E  D7FC               	bra	u177
   488  000950  F000               	nop	
   489  000952                     
   490                           ;LCD_Libreria.c: 84:     LATDbits.LATD3 = 0;
   491  000952  968C               	bcf	140,3,c	;volatile
   492  000954  0012               	return		;funcret
   493  000956                     __end_of_LCD_Data:
   494                           	callstack 0
   495                           
   496 ;; *************** function _LCD_XY *****************
   497 ;; Defined at:
   498 ;;		line 87 in file "LCD_Libreria.c"
   499 ;; Parameters:    Size  Location     Type
   500 ;;  x               2    7[COMRAM] int 
   501 ;;  y               2    9[COMRAM] int 
   502 ;; Auto vars:     Size  Location     Type
   503 ;;		None
   504 ;; Return value:  Size  Location     Type
   505 ;;                  1    wreg      void 
   506 ;; Registers used:
   507 ;;		wreg, status,2, status,0, cstack
   508 ;; Tracked objects:
   509 ;;		On entry : 0/0
   510 ;;		On exit  : 0/0
   511 ;;		Unchanged: 0/0
   512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   513 ;;      Params:         4       0       0       0       0       0       0       0       0
   514 ;;      Locals:         0       0       0       0       0       0       0       0       0
   515 ;;      Temps:          0       0       0       0       0       0       0       0       0
   516 ;;      Totals:         4       0       0       0       0       0       0       0       0
   517 ;;Total ram usage:        4 bytes
   518 ;; Hardware stack levels used:    1
   519 ;; Hardware stack levels required when called:    3
   520 ;; This function calls:
   521 ;;		_LCD_Comando
   522 ;; This function is called by:
   523 ;;		_main
   524 ;; This function uses a non-reentrant model
   525 ;;
   526                           
   527                           	psect	text3
   528  000A36                     __ptext3:
   529                           	callstack 0
   530  000A36                     _LCD_XY:
   531                           	callstack 27
   532  000A36                     
   533                           ;LCD_Libreria.c: 88:     if(x>0){
   534  000A36  BE09               	btfsc	(LCD_XY@x+1)^0,7,c
   535  000A38  EF26  F005         	goto	u81
   536  000A3C  5009               	movf	(LCD_XY@x+1)^0,w,c
   537  000A3E  E108               	bnz	u80
   538  000A40  0408               	decf	LCD_XY@x^0,w,c
   539  000A42  A0D8               	btfss	status,0,c
   540  000A44  EF26  F005         	goto	u81
   541  000A48  EF28  F005         	goto	u80
   542  000A4C                     u81:
   543  000A4C  EF2E  F005         	goto	l992
   544  000A50                     u80:
   545  000A50                     
   546                           ;LCD_Libreria.c: 89:         LCD_Comando(0xC0+y);
   547  000A50  500A               	movf	LCD_XY@y^0,w,c
   548  000A52  0FC0               	addlw	192
   549  000A54  ECAB  F004         	call	_LCD_Comando
   550                           
   551                           ;LCD_Libreria.c: 90:     }
   552  000A58  EF32  F005         	goto	l69
   553  000A5C                     l992:
   554                           
   555                           ;LCD_Libreria.c: 92:         LCD_Comando(0x80+y);
   556  000A5C  500A               	movf	LCD_XY@y^0,w,c
   557  000A5E  0F80               	addlw	128
   558  000A60  ECAB  F004         	call	_LCD_Comando
   559  000A64                     l69:
   560  000A64  0012               	return		;funcret
   561  000A66                     __end_of_LCD_XY:
   562                           	callstack 0
   563                           
   564 ;; *************** function _LCD_Init *****************
   565 ;; Defined at:
   566 ;;		line 6 in file "LCD_Libreria.c"
   567 ;; Parameters:    Size  Location     Type
   568 ;;		None
   569 ;; Auto vars:     Size  Location     Type
   570 ;;		None
   571 ;; Return value:  Size  Location     Type
   572 ;;                  1    wreg      void 
   573 ;; Registers used:
   574 ;;		wreg, status,2, status,0, cstack
   575 ;; Tracked objects:
   576 ;;		On entry : 0/0
   577 ;;		On exit  : 0/0
   578 ;;		Unchanged: 0/0
   579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   580 ;;      Params:         0       0       0       0       0       0       0       0       0
   581 ;;      Locals:         0       0       0       0       0       0       0       0       0
   582 ;;      Temps:          2       0       0       0       0       0       0       0       0
   583 ;;      Totals:         2       0       0       0       0       0       0       0       0
   584 ;;Total ram usage:        2 bytes
   585 ;; Hardware stack levels used:    1
   586 ;; Hardware stack levels required when called:    3
   587 ;; This function calls:
   588 ;;		_LCD_Comando
   589 ;; This function is called by:
   590 ;;		_main
   591 ;; This function uses a non-reentrant model
   592 ;;
   593                           
   594                           	psect	text4
   595  00080A                     __ptext4:
   596                           	callstack 0
   597  00080A                     _LCD_Init:
   598                           	callstack 27
   599  00080A                     
   600                           ;LCD_Libreria.c: 7:     TRISD = 0x00;
   601  00080A  0E00               	movlw	0
   602  00080C  6E95               	movwf	149,c	;volatile
   603                           
   604                           ;LCD_Libreria.c: 8:     LATD = 0x00;
   605  00080E  0E00               	movlw	0
   606  000810  6E8C               	movwf	140,c	;volatile
   607  000812                     
   608                           ;LCD_Libreria.c: 11:     LCD_Comando(0x30);
   609  000812  0E30               	movlw	48
   610  000814  ECAB  F004         	call	_LCD_Comando
   611  000818                     
   612                           ;LCD_Libreria.c: 12:     _delay((unsigned long)((100)*(20000000UL/4000.0)));
   613  000818  0E03               	movlw	3
   614  00081A  6E09               	movwf	(??_LCD_Init+1)^0,c
   615  00081C  0E8A               	movlw	138
   616  00081E  6E08               	movwf	??_LCD_Init^0,c
   617  000820  0E56               	movlw	86
   618  000822                     u187:
   619  000822  2EE8               	decfsz	wreg,f,c
   620  000824  D7FE               	bra	u187
   621  000826  2E08               	decfsz	??_LCD_Init^0,f,c
   622  000828  D7FC               	bra	u187
   623  00082A  2E09               	decfsz	(??_LCD_Init+1)^0,f,c
   624  00082C  D7FA               	bra	u187
   625  00082E                     
   626                           ;LCD_Libreria.c: 13:     LCD_Comando(0x30);
   627  00082E  0E30               	movlw	48
   628  000830  ECAB  F004         	call	_LCD_Comando
   629  000834                     
   630                           ;LCD_Libreria.c: 14:     _delay((unsigned long)((100)*(20000000UL/4000.0)));
   631  000834  0E03               	movlw	3
   632  000836  6E09               	movwf	(??_LCD_Init+1)^0,c
   633  000838  0E8A               	movlw	138
   634  00083A  6E08               	movwf	??_LCD_Init^0,c
   635  00083C  0E56               	movlw	86
   636  00083E                     u197:
   637  00083E  2EE8               	decfsz	wreg,f,c
   638  000840  D7FE               	bra	u197
   639  000842  2E08               	decfsz	??_LCD_Init^0,f,c
   640  000844  D7FC               	bra	u197
   641  000846  2E09               	decfsz	(??_LCD_Init+1)^0,f,c
   642  000848  D7FA               	bra	u197
   643  00084A                     
   644                           ;LCD_Libreria.c: 15:     LCD_Comando(0x32);
   645  00084A  0E32               	movlw	50
   646  00084C  ECAB  F004         	call	_LCD_Comando
   647  000850                     
   648                           ;LCD_Libreria.c: 16:     LCD_Comando(0x28);
   649  000850  0E28               	movlw	40
   650  000852  ECAB  F004         	call	_LCD_Comando
   651  000856                     
   652                           ;LCD_Libreria.c: 17:     LCD_Comando(0x0C);
   653  000856  0E0C               	movlw	12
   654  000858  ECAB  F004         	call	_LCD_Comando
   655  00085C                     
   656                           ;LCD_Libreria.c: 18:     LCD_Comando(0x01);
   657  00085C  0E01               	movlw	1
   658  00085E  ECAB  F004         	call	_LCD_Comando
   659  000862                     
   660                           ;LCD_Libreria.c: 19:     LCD_Comando(0x06);
   661  000862  0E06               	movlw	6
   662  000864  ECAB  F004         	call	_LCD_Comando
   663  000868                     
   664                           ;LCD_Libreria.c: 20:     _delay((unsigned long)((100)*(20000000UL/4000.0)));
   665  000868  0E03               	movlw	3
   666  00086A  6E09               	movwf	(??_LCD_Init+1)^0,c
   667  00086C  0E8A               	movlw	138
   668  00086E  6E08               	movwf	??_LCD_Init^0,c
   669  000870  0E56               	movlw	86
   670  000872                     u207:
   671  000872  2EE8               	decfsz	wreg,f,c
   672  000874  D7FE               	bra	u207
   673  000876  2E08               	decfsz	??_LCD_Init^0,f,c
   674  000878  D7FC               	bra	u207
   675  00087A  2E09               	decfsz	(??_LCD_Init+1)^0,f,c
   676  00087C  D7FA               	bra	u207
   677  00087E  0012               	return		;funcret
   678  000880                     __end_of_LCD_Init:
   679                           	callstack 0
   680                           
   681 ;; *************** function _LCD_Comando *****************
   682 ;; Defined at:
   683 ;;		line 23 in file "LCD_Libreria.c"
   684 ;; Parameters:    Size  Location     Type
   685 ;;  cmd             1    wreg     unsigned char 
   686 ;; Auto vars:     Size  Location     Type
   687 ;;  cmd             1    6[COMRAM] unsigned char 
   688 ;; Return value:  Size  Location     Type
   689 ;;                  1    wreg      void 
   690 ;; Registers used:
   691 ;;		wreg, status,2, status,0
   692 ;; Tracked objects:
   693 ;;		On entry : 0/0
   694 ;;		On exit  : 0/0
   695 ;;		Unchanged: 0/0
   696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   697 ;;      Params:         0       0       0       0       0       0       0       0       0
   698 ;;      Locals:         1       0       0       0       0       0       0       0       0
   699 ;;      Temps:          1       0       0       0       0       0       0       0       0
   700 ;;      Totals:         2       0       0       0       0       0       0       0       0
   701 ;;Total ram usage:        2 bytes
   702 ;; Hardware stack levels used:    1
   703 ;; Hardware stack levels required when called:    2
   704 ;; This function calls:
   705 ;;		Nothing
   706 ;; This function is called by:
   707 ;;		_LCD_Init
   708 ;;		_LCD_XY
   709 ;; This function uses a non-reentrant model
   710 ;;
   711                           
   712                           	psect	text5
   713  000956                     __ptext5:
   714                           	callstack 0
   715  000956                     _LCD_Comando:
   716                           	callstack 27
   717                           
   718                           ;incstack = 0
   719                           ;LCD_Comando@cmd stored from wreg
   720  000956  6E07               	movwf	LCD_Comando@cmd^0,c
   721  000958                     
   722                           ;LCD_Libreria.c: 27:     LATD = LATD & 0x0f;
   723  000958  508C               	movf	140,w,c	;volatile
   724  00095A  0B0F               	andlw	15
   725  00095C  6E8C               	movwf	140,c	;volatile
   726                           
   727                           ;LCD_Libreria.c: 33:     LATD = LATD | (cmd & 0xf0);
   728  00095E  5007               	movf	LCD_Comando@cmd^0,w,c
   729  000960  0BF0               	andlw	240
   730  000962  108C               	iorwf	140,w,c	;volatile
   731  000964  6E8C               	movwf	140,c	;volatile
   732  000966                     
   733                           ;LCD_Libreria.c: 42:     LATDbits.LATD2 = 0;
   734  000966  948C               	bcf	140,2,c	;volatile
   735  000968                     
   736                           ;LCD_Libreria.c: 43:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   737  000968  0E07               	movlw	7
   738  00096A  6E06               	movwf	??_LCD_Comando^0,c
   739  00096C  0E7D               	movlw	125
   740  00096E                     u217:
   741  00096E  2EE8               	decfsz	wreg,f,c
   742  000970  D7FE               	bra	u217
   743  000972  2E06               	decfsz	??_LCD_Comando^0,f,c
   744  000974  D7FC               	bra	u217
   745  000976  F000               	nop	
   746  000978                     
   747                           ;LCD_Libreria.c: 44:     LATDbits.LATD3 = 1;
   748  000978  868C               	bsf	140,3,c	;volatile
   749  00097A                     
   750                           ;LCD_Libreria.c: 45:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   751  00097A  0E07               	movlw	7
   752  00097C  6E06               	movwf	??_LCD_Comando^0,c
   753  00097E  0E7D               	movlw	125
   754  000980                     u227:
   755  000980  2EE8               	decfsz	wreg,f,c
   756  000982  D7FE               	bra	u227
   757  000984  2E06               	decfsz	??_LCD_Comando^0,f,c
   758  000986  D7FC               	bra	u227
   759  000988  F000               	nop	
   760  00098A                     
   761                           ;LCD_Libreria.c: 46:     LATDbits.LATD3 = 0;
   762  00098A  968C               	bcf	140,3,c	;volatile
   763                           
   764                           ;LCD_Libreria.c: 48:     LATD &= 0x0f;
   765  00098C  0E0F               	movlw	15
   766  00098E  168C               	andwf	140,f,c	;volatile
   767                           
   768                           ;LCD_Libreria.c: 49:     LATD |= ((cmd<<4) & 0xf0);
   769  000990  3807               	swapf	LCD_Comando@cmd^0,w,c
   770  000992  0BF0               	andlw	240
   771  000994  0BF0               	andlw	240
   772  000996  128C               	iorwf	140,f,c	;volatile
   773  000998                     
   774                           ;LCD_Libreria.c: 57:     LATDbits.LATD2 = 0;
   775  000998  948C               	bcf	140,2,c	;volatile
   776  00099A                     
   777                           ;LCD_Libreria.c: 58:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   778  00099A  0E07               	movlw	7
   779  00099C  6E06               	movwf	??_LCD_Comando^0,c
   780  00099E  0E7D               	movlw	125
   781  0009A0                     u237:
   782  0009A0  2EE8               	decfsz	wreg,f,c
   783  0009A2  D7FE               	bra	u237
   784  0009A4  2E06               	decfsz	??_LCD_Comando^0,f,c
   785  0009A6  D7FC               	bra	u237
   786  0009A8  F000               	nop	
   787  0009AA                     
   788                           ;LCD_Libreria.c: 59:     LATDbits.LATD3 = 1;
   789  0009AA  868C               	bsf	140,3,c	;volatile
   790  0009AC                     
   791                           ;LCD_Libreria.c: 60:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   792  0009AC  0E07               	movlw	7
   793  0009AE  6E06               	movwf	??_LCD_Comando^0,c
   794  0009B0  0E7D               	movlw	125
   795  0009B2                     u247:
   796  0009B2  2EE8               	decfsz	wreg,f,c
   797  0009B4  D7FE               	bra	u247
   798  0009B6  2E06               	decfsz	??_LCD_Comando^0,f,c
   799  0009B8  D7FC               	bra	u247
   800  0009BA  F000               	nop	
   801  0009BC                     
   802                           ;LCD_Libreria.c: 61:     LATDbits.LATD3 = 0;
   803  0009BC  968C               	bcf	140,3,c	;volatile
   804  0009BE  0012               	return		;funcret
   805  0009C0                     __end_of_LCD_Comando:
   806                           	callstack 0
   807                           
   808 ;; *************** function _Int_Ext *****************
   809 ;; Defined at:
   810 ;;		line 9 in file "Interrupt.c"
   811 ;; Parameters:    Size  Location     Type
   812 ;;		None
   813 ;; Auto vars:     Size  Location     Type
   814 ;;		None
   815 ;; Return value:  Size  Location     Type
   816 ;;                  1    wreg      void 
   817 ;; Registers used:
   818 ;;		None
   819 ;; Tracked objects:
   820 ;;		On entry : 0/0
   821 ;;		On exit  : 0/0
   822 ;;		Unchanged: 0/0
   823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   824 ;;      Params:         0       0       0       0       0       0       0       0       0
   825 ;;      Locals:         0       0       0       0       0       0       0       0       0
   826 ;;      Temps:          0       0       0       0       0       0       0       0       0
   827 ;;      Totals:         0       0       0       0       0       0       0       0       0
   828 ;;Total ram usage:        0 bytes
   829 ;; Hardware stack levels used:    1
   830 ;; Hardware stack levels required when called:    2
   831 ;; This function calls:
   832 ;;		Nothing
   833 ;; This function is called by:
   834 ;;		_main
   835 ;; This function uses a non-reentrant model
   836 ;;
   837                           
   838                           	psect	text6
   839  000ABC                     __ptext6:
   840                           	callstack 0
   841  000ABC                     _Int_Ext:
   842                           	callstack 28
   843  000ABC                     
   844                           ;Interrupt.c: 24:     RCONbits.IPEN = 1;
   845  000ABC  8ED0               	bsf	208,7,c	;volatile
   846                           
   847                           ;Interrupt.c: 25:     INTCONbits.GIEH = 1;
   848  000ABE  8EF2               	bsf	242,7,c	;volatile
   849                           
   850                           ;Interrupt.c: 26:     INTCONbits.GIEL = 1;
   851  000AC0  8CF2               	bsf	242,6,c	;volatile
   852  000AC2  0012               	return		;funcret
   853  000AC4                     __end_of_Int_Ext:
   854                           	callstack 0
   855                           
   856 ;; *************** function _EUSART_Init *****************
   857 ;; Defined at:
   858 ;;		line 7 in file "EUSART.c"
   859 ;; Parameters:    Size  Location     Type
   860 ;;  baud            1    wreg     unsigned char 
   861 ;; Auto vars:     Size  Location     Type
   862 ;;  baud            1    5[COMRAM] unsigned char 
   863 ;; Return value:  Size  Location     Type
   864 ;;                  1    wreg      void 
   865 ;; Registers used:
   866 ;;		wreg
   867 ;; Tracked objects:
   868 ;;		On entry : 0/0
   869 ;;		On exit  : 0/0
   870 ;;		Unchanged: 0/0
   871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   872 ;;      Params:         0       0       0       0       0       0       0       0       0
   873 ;;      Locals:         1       0       0       0       0       0       0       0       0
   874 ;;      Temps:          0       0       0       0       0       0       0       0       0
   875 ;;      Totals:         1       0       0       0       0       0       0       0       0
   876 ;;Total ram usage:        1 bytes
   877 ;; Hardware stack levels used:    1
   878 ;; Hardware stack levels required when called:    2
   879 ;; This function calls:
   880 ;;		Nothing
   881 ;; This function is called by:
   882 ;;		_main
   883 ;; This function uses a non-reentrant model
   884 ;;
   885                           
   886                           	psect	text7
   887  000A66                     __ptext7:
   888                           	callstack 0
   889  000A66                     _EUSART_Init:
   890                           	callstack 28
   891                           
   892                           ;incstack = 0
   893                           ;EUSART_Init@baud stored from wreg
   894  000A66  6E06               	movwf	EUSART_Init@baud^0,c
   895  000A68                     
   896                           ;EUSART.c: 8:     TRISCbits.RC6 = 0;
   897  000A68  9C94               	bcf	148,6,c	;volatile
   898                           
   899                           ;EUSART.c: 9:     TRISCbits.RC7 = 1;
   900  000A6A  8E94               	bsf	148,7,c	;volatile
   901  000A6C                     
   902                           ;EUSART.c: 10:     SPBRG = baud;
   903  000A6C  C006  FFAF         	movff	EUSART_Init@baud,4015	;volatile
   904  000A70                     
   905                           ;EUSART.c: 11:     TXSTAbits.SYNC = 0;
   906  000A70  98AC               	bcf	172,4,c	;volatile
   907  000A72                     
   908                           ;EUSART.c: 12:     TXSTAbits.BRGH = 0;
   909  000A72  94AC               	bcf	172,2,c	;volatile
   910  000A74                     
   911                           ;EUSART.c: 13:     BAUDCONbits.BRG16 = 0;
   912  000A74  96B8               	bcf	184,3,c	;volatile
   913  000A76                     
   914                           ;EUSART.c: 14:     RCSTAbits.SPEN = 1;
   915  000A76  8EAB               	bsf	171,7,c	;volatile
   916  000A78                     
   917                           ;EUSART.c: 16:     TXSTAbits.TX9 = 0;
   918  000A78  9CAC               	bcf	172,6,c	;volatile
   919  000A7A                     
   920                           ;EUSART.c: 17:     TXSTAbits.TXEN = 1;
   921  000A7A  8AAC               	bsf	172,5,c	;volatile
   922  000A7C                     
   923                           ;EUSART.c: 19:     RCSTAbits.RX9 = 0;
   924  000A7C  9CAB               	bcf	171,6,c	;volatile
   925  000A7E                     
   926                           ;EUSART.c: 20:     RCSTAbits.CREN = 1;
   927  000A7E  88AB               	bsf	171,4,c	;volatile
   928  000A80                     
   929                           ;EUSART.c: 21:     PIR1bits.RCIF = 0;
   930  000A80  9A9E               	bcf	158,5,c	;volatile
   931  000A82                     
   932                           ;EUSART.c: 22:     PIE1bits.RCIE = 1;
   933  000A82  8A9D               	bsf	157,5,c	;volatile
   934  000A84                     
   935                           ;EUSART.c: 23:     IPR1bits.RCIP = 0;
   936  000A84  9A9F               	bcf	159,5,c	;volatile
   937  000A86  0012               	return		;funcret
   938  000A88                     __end_of_EUSART_Init:
   939                           	callstack 0
   940                           
   941 ;; *************** function _EUSART_Cadena *****************
   942 ;; Defined at:
   943 ;;		line 31 in file "EUSART.c"
   944 ;; Parameters:    Size  Location     Type
   945 ;;  datas           2    6[COMRAM] PTR unsigned char 
   946 ;;		 -> STR_1(8), 
   947 ;; Auto vars:     Size  Location     Type
   948 ;;		None
   949 ;; Return value:  Size  Location     Type
   950 ;;                  1    wreg      void 
   951 ;; Registers used:
   952 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   953 ;; Tracked objects:
   954 ;;		On entry : 0/0
   955 ;;		On exit  : 0/0
   956 ;;		Unchanged: 0/0
   957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   958 ;;      Params:         2       0       0       0       0       0       0       0       0
   959 ;;      Locals:         0       0       0       0       0       0       0       0       0
   960 ;;      Temps:          0       0       0       0       0       0       0       0       0
   961 ;;      Totals:         2       0       0       0       0       0       0       0       0
   962 ;;Total ram usage:        2 bytes
   963 ;; Hardware stack levels used:    1
   964 ;; Hardware stack levels required when called:    3
   965 ;; This function calls:
   966 ;;		_EUSART_Tx
   967 ;; This function is called by:
   968 ;;		_main
   969 ;; This function uses a non-reentrant model
   970 ;;
   971                           
   972                           	psect	text8
   973  0009C0                     __ptext8:
   974                           	callstack 0
   975  0009C0                     _EUSART_Cadena:
   976                           	callstack 27
   977  0009C0                     
   978                           ;EUSART.c: 32:     while(*datas != '\0'){
   979  0009C0  EFF0  F004         	goto	l1012
   980  0009C4                     l1006:
   981                           
   982                           ;EUSART.c: 33:         _delay((unsigned long)((100)*(20000000UL/4000000.0)));
   983  0009C4  0EA6               	movlw	166
   984  0009C6                     u257:
   985  0009C6  2EE8               	decfsz	wreg,f,c
   986  0009C8  D7FE               	bra	u257
   987  0009CA  D000               	nop2	
   988  0009CC                     
   989                           ;EUSART.c: 34:         EUSART_Tx(*datas);
   990  0009CC  C007  FFF6         	movff	EUSART_Cadena@datas,tblptrl
   991  0009D0  C008  FFF7         	movff	EUSART_Cadena@datas+1,tblptrh
   992  0009D4                     	if	0	;tblptru may be non-zero
   993  0009D4                     	endif
   994  0009D4                     	if	0	;tblptru may be non-zero
   995  0009D4                     	endif
   996  0009D4  0008               	tblrd		*
   997  0009D6  50F5               	movf	tablat,w,c
   998  0009D8  EC53  F005         	call	_EUSART_Tx
   999  0009DC                     
  1000                           ;EUSART.c: 35:         datas++;
  1001  0009DC  4A07               	infsnz	EUSART_Cadena@datas^0,f,c
  1002  0009DE  2A08               	incf	(EUSART_Cadena@datas+1)^0,f,c
  1003  0009E0                     l1012:
  1004                           
  1005                           ;EUSART.c: 32:     while(*datas != '\0'){
  1006  0009E0  C007  FFF6         	movff	EUSART_Cadena@datas,tblptrl
  1007  0009E4  C008  FFF7         	movff	EUSART_Cadena@datas+1,tblptrh
  1008  0009E8                     	if	0	;tblptru may be non-zero
  1009  0009E8                     	endif
  1010  0009E8                     	if	0	;tblptru may be non-zero
  1011  0009E8                     	endif
  1012  0009E8  0008               	tblrd		*
  1013  0009EA  50F5               	movf	tablat,w,c
  1014  0009EC  0900               	iorlw	0
  1015  0009EE  A4D8               	btfss	status,2,c
  1016  0009F0  EFFC  F004         	goto	u101
  1017  0009F4  EFFE  F004         	goto	u100
  1018  0009F8                     u101:
  1019  0009F8  EFE2  F004         	goto	l1006
  1020  0009FC                     u100:
  1021  0009FC  0012               	return		;funcret
  1022  0009FE                     __end_of_EUSART_Cadena:
  1023                           	callstack 0
  1024                           
  1025 ;; *************** function _EUSART_Tx *****************
  1026 ;; Defined at:
  1027 ;;		line 26 in file "EUSART.c"
  1028 ;; Parameters:    Size  Location     Type
  1029 ;;  dato_tx         1    wreg     unsigned char 
  1030 ;; Auto vars:     Size  Location     Type
  1031 ;;  dato_tx         1    5[COMRAM] unsigned char 
  1032 ;; Return value:  Size  Location     Type
  1033 ;;                  1    wreg      void 
  1034 ;; Registers used:
  1035 ;;		wreg
  1036 ;; Tracked objects:
  1037 ;;		On entry : 0/0
  1038 ;;		On exit  : 0/0
  1039 ;;		Unchanged: 0/0
  1040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1041 ;;      Params:         0       0       0       0       0       0       0       0       0
  1042 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1043 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1044 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1045 ;;Total ram usage:        1 bytes
  1046 ;; Hardware stack levels used:    1
  1047 ;; Hardware stack levels required when called:    2
  1048 ;; This function calls:
  1049 ;;		Nothing
  1050 ;; This function is called by:
  1051 ;;		_EUSART_Cadena
  1052 ;; This function uses a non-reentrant model
  1053 ;;
  1054                           
  1055                           	psect	text9
  1056  000AA6                     __ptext9:
  1057                           	callstack 0
  1058  000AA6                     _EUSART_Tx:
  1059                           	callstack 27
  1060                           
  1061                           ;incstack = 0
  1062                           ;EUSART_Tx@dato_tx stored from wreg
  1063  000AA6  6E06               	movwf	EUSART_Tx@dato_tx^0,c
  1064  000AA8                     l132:
  1065  000AA8  A2AC               	btfss	172,1,c	;volatile
  1066  000AAA  EF59  F005         	goto	u11
  1067  000AAE  EF5B  F005         	goto	u10
  1068  000AB2                     u11:
  1069  000AB2  EF54  F005         	goto	l132
  1070  000AB6                     u10:
  1071  000AB6                     
  1072                           ;EUSART.c: 28:     TXREG = dato_tx;
  1073  000AB6  C006  FFAD         	movff	EUSART_Tx@dato_tx,4013	;volatile
  1074  000ABA  0012               	return		;funcret
  1075  000ABC                     __end_of_EUSART_Tx:
  1076                           	callstack 0
  1077                           
  1078 ;; *************** function _Recepcion_Ext *****************
  1079 ;; Defined at:
  1080 ;;		line 34 in file "Interrupt.c"
  1081 ;; Parameters:    Size  Location     Type
  1082 ;;		None
  1083 ;; Auto vars:     Size  Location     Type
  1084 ;;		None
  1085 ;; Return value:  Size  Location     Type
  1086 ;;                  1    wreg      void 
  1087 ;; Registers used:
  1088 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1089 ;; Tracked objects:
  1090 ;;		On entry : 0/0
  1091 ;;		On exit  : 0/0
  1092 ;;		Unchanged: 0/0
  1093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1094 ;;      Params:         0       0       0       0       0       0       0       0       0
  1095 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1096 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1097 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1098 ;;Total ram usage:        5 bytes
  1099 ;; Hardware stack levels used:    1
  1100 ;; Hardware stack levels required when called:    1
  1101 ;; This function calls:
  1102 ;;		Nothing
  1103 ;; This function is called by:
  1104 ;;		Interrupt level 1
  1105 ;; This function uses a non-reentrant model
  1106 ;;
  1107                           
  1108                           	psect	intcodelo
  1109  000018                     __pintcodelo:
  1110                           	callstack 0
  1111  000018                     _Recepcion_Ext:
  1112                           	callstack 27
  1113                           
  1114                           ;incstack = 0
  1115  000018  8018               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  1116  00001A  CFD8 F001          	movff	status,??_Recepcion_Ext
  1117  00001E  CFE8 F002          	movff	wreg,??_Recepcion_Ext+1
  1118  000022  CFE0 F003          	movff	bsr,??_Recepcion_Ext+2
  1119  000026  CFD9 F004          	movff	fsr2l,??_Recepcion_Ext+3
  1120  00002A  CFDA F005          	movff	fsr2h,??_Recepcion_Ext+4
  1121  00002E                     
  1122                           ;Interrupt.c: 35:     datos[i] = RCREG;
  1123  00002E  0E13               	movlw	low _datos
  1124  000030  2410               	addwf	_i^0,w,c
  1125  000032  6ED9               	movwf	fsr2l,c
  1126  000034  0E00               	movlw	high _datos
  1127  000036  2011               	addwfc	(_i+1)^0,w,c
  1128  000038  6EDA               	movwf	fsr2h,c
  1129  00003A  CFAE FFDF          	movff	4014,indf2	;volatile
  1130  00003E                     
  1131                           ;Interrupt.c: 36:     i++;
  1132  00003E  4A10               	infsnz	_i^0,f,c
  1133  000040  2A11               	incf	(_i+1)^0,f,c
  1134  000042                     
  1135                           ;Interrupt.c: 37:     a++;
  1136  000042  4A0E               	infsnz	_a^0,f,c
  1137  000044  2A0F               	incf	(_a+1)^0,f,c
  1138  000046                     
  1139                           ;Interrupt.c: 38:     PIR1bits.RCIF = 0;
  1140  000046  9A9E               	bcf	158,5,c	;volatile
  1141  000048  C005  FFDA         	movff	??_Recepcion_Ext+4,fsr2h
  1142  00004C  C004  FFD9         	movff	??_Recepcion_Ext+3,fsr2l
  1143  000050  C003  FFE0         	movff	??_Recepcion_Ext+2,bsr
  1144  000054  C002  FFE8         	movff	??_Recepcion_Ext+1,wreg
  1145  000058  C001  FFD8         	movff	??_Recepcion_Ext,status
  1146  00005C  9018               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1147  00005E  0010               	retfie	
  1148  000060                     __end_of_Recepcion_Ext:
  1149                           	callstack 0
  1150                           
  1151 ;; *************** function _INT0_Ext *****************
  1152 ;; Defined at:
  1153 ;;		line 29 in file "Interrupt.c"
  1154 ;; Parameters:    Size  Location     Type
  1155 ;;		None
  1156 ;; Auto vars:     Size  Location     Type
  1157 ;;		None
  1158 ;; Return value:  Size  Location     Type
  1159 ;;                  1    wreg      void 
  1160 ;; Registers used:
  1161 ;;		None
  1162 ;; Tracked objects:
  1163 ;;		On entry : 0/0
  1164 ;;		On exit  : 0/0
  1165 ;;		Unchanged: 0/0
  1166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1167 ;;      Params:         0       0       0       0       0       0       0       0       0
  1168 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1169 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1170 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1171 ;;Total ram usage:        0 bytes
  1172 ;; Hardware stack levels used:    1
  1173 ;; This function calls:
  1174 ;;		Nothing
  1175 ;; This function is called by:
  1176 ;;		Interrupt level 2
  1177 ;; This function uses a non-reentrant model
  1178 ;;
  1179                           
  1180                           	psect	intcode
  1181  000008                     __pintcode:
  1182                           	callstack 0
  1183  000008                     _INT0_Ext:
  1184                           	callstack 27
  1185                           
  1186                           ;incstack = 0
  1187  000008  8218               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1188  00000A  ED62  F005         	call	int_func,f	;refresh shadow registers
  1189                           
  1190                           	psect	intcode_body
  1191  000AC4                     __pintcode_body:
  1192                           	callstack 27
  1193  000AC4                     int_func:
  1194                           	callstack 27
  1195  000AC4  0006               	pop		; remove dummy address from shadow register refresh
  1196  000AC6                     
  1197                           ;Interrupt.c: 31:     INTCONbits.INT0F = 0;
  1198  000AC6  92F2               	bcf	242,1,c	;volatile
  1199  000AC8  9218               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1200  000ACA  0011               	retfie		f
  1201  000ACC                     __end_of_INT0_Ext:
  1202                           	callstack 0
  1203                           
  1204                           	psect	rparam
  1205  0000                     
  1206                           	psect	temp
  1207  000018                     btemp:
  1208                           	callstack 0
  1209  000018                     	ds	1
  1210  0000                     int$flags	set	btemp
  1211  0000                     wtemp8	set	btemp+1
  1212  0000                     ttemp5	set	btemp+1
  1213  0000                     ttemp6	set	btemp+4
  1214  0000                     ttemp7	set	btemp+8
  1215                           
  1216                           	psect	idloc
  1217                           
  1218                           ;Config register IDLOC0 @ 0x200000
  1219                           ;	unspecified, using default values
  1220  200000                     	org	2097152
  1221  200000  FF                 	db	255
  1222                           
  1223                           ;Config register IDLOC1 @ 0x200001
  1224                           ;	unspecified, using default values
  1225  200001                     	org	2097153
  1226  200001  FF                 	db	255
  1227                           
  1228                           ;Config register IDLOC2 @ 0x200002
  1229                           ;	unspecified, using default values
  1230  200002                     	org	2097154
  1231  200002  FF                 	db	255
  1232                           
  1233                           ;Config register IDLOC3 @ 0x200003
  1234                           ;	unspecified, using default values
  1235  200003                     	org	2097155
  1236  200003  FF                 	db	255
  1237                           
  1238                           ;Config register IDLOC4 @ 0x200004
  1239                           ;	unspecified, using default values
  1240  200004                     	org	2097156
  1241  200004  FF                 	db	255
  1242                           
  1243                           ;Config register IDLOC5 @ 0x200005
  1244                           ;	unspecified, using default values
  1245  200005                     	org	2097157
  1246  200005  FF                 	db	255
  1247                           
  1248                           ;Config register IDLOC6 @ 0x200006
  1249                           ;	unspecified, using default values
  1250  200006                     	org	2097158
  1251  200006  FF                 	db	255
  1252                           
  1253                           ;Config register IDLOC7 @ 0x200007
  1254                           ;	unspecified, using default values
  1255  200007                     	org	2097159
  1256  200007  FF                 	db	255
  1257                           
  1258                           	psect	config
  1259                           
  1260                           ;Config register CONFIG1L @ 0x300000
  1261                           ;	PLL Prescaler Selection bits
  1262                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  1263                           ;	System Clock Postscaler Selection bits
  1264                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1265                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1266                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  1267  300000                     	org	3145728
  1268  300000  00                 	db	0
  1269                           
  1270                           ;Config register CONFIG1H @ 0x300001
  1271                           ;	Oscillator Selection bits
  1272                           ;	FOSC = HS, HS oscillator (HS)
  1273                           ;	Fail-Safe Clock Monitor Enable bit
  1274                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1275                           ;	Internal/External Oscillator Switchover bit
  1276                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1277  300001                     	org	3145729
  1278  300001  0C                 	db	12
  1279                           
  1280                           ;Config register CONFIG2L @ 0x300002
  1281                           ;	Power-up Timer Enable bit
  1282                           ;	PWRT = ON, PWRT enabled
  1283                           ;	Brown-out Reset Enable bits
  1284                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  1285                           ;	Brown-out Reset Voltage bits
  1286                           ;	BORV = 3, Minimum setting 2.05V
  1287                           ;	USB Voltage Regulator Enable bit
  1288                           ;	VREGEN = OFF, USB voltage regulator disabled
  1289  300002                     	org	3145730
  1290  300002  18                 	db	24
  1291                           
  1292                           ;Config register CONFIG2H @ 0x300003
  1293                           ;	Watchdog Timer Enable bit
  1294                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1295                           ;	Watchdog Timer Postscale Select bits
  1296                           ;	WDTPS = 32768, 1:32768
  1297  300003                     	org	3145731
  1298  300003  1E                 	db	30
  1299                           
  1300                           ; Padding undefined space
  1301  300004                     	org	3145732
  1302  300004  FF                 	db	255
  1303                           
  1304                           ;Config register CONFIG3H @ 0x300005
  1305                           ;	CCP2 MUX bit
  1306                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1307                           ;	PORTB A/D Enable bit
  1308                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1309                           ;	Low-Power Timer 1 Oscillator Enable bit
  1310                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1311                           ;	MCLR Pin Enable bit
  1312                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1313  300005                     	org	3145733
  1314  300005  81                 	db	129
  1315                           
  1316                           ;Config register CONFIG4L @ 0x300006
  1317                           ;	Stack Full/Underflow Reset Enable bit
  1318                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  1319                           ;	Single-Supply ICSP Enable bit
  1320                           ;	LVP = OFF, Single-Supply ICSP disabled
  1321                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1322                           ;	ICPRT = OFF, ICPORT disabled
  1323                           ;	Extended Instruction Set Enable bit
  1324                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1325                           ;	Background Debugger Enable bit
  1326                           ;	DEBUG = 0x1, unprogrammed default
  1327  300006                     	org	3145734
  1328  300006  80                 	db	128
  1329                           
  1330                           ; Padding undefined space
  1331  300007                     	org	3145735
  1332  300007  FF                 	db	255
  1333                           
  1334                           ;Config register CONFIG5L @ 0x300008
  1335                           ;	Code Protection bit
  1336                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1337                           ;	Code Protection bit
  1338                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1339                           ;	Code Protection bit
  1340                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1341                           ;	Code Protection bit
  1342                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1343  300008                     	org	3145736
  1344  300008  0F                 	db	15
  1345                           
  1346                           ;Config register CONFIG5H @ 0x300009
  1347                           ;	Boot Block Code Protection bit
  1348                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1349                           ;	Data EEPROM Code Protection bit
  1350                           ;	CPD = OFF, Data EEPROM is not code-protected
  1351  300009                     	org	3145737
  1352  300009  C0                 	db	192
  1353                           
  1354                           ;Config register CONFIG6L @ 0x30000A
  1355                           ;	Write Protection bit
  1356                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1357                           ;	Write Protection bit
  1358                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1359                           ;	Write Protection bit
  1360                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1361                           ;	Write Protection bit
  1362                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1363  30000A                     	org	3145738
  1364  30000A  0F                 	db	15
  1365                           
  1366                           ;Config register CONFIG6H @ 0x30000B
  1367                           ;	Configuration Register Write Protection bit
  1368                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1369                           ;	Boot Block Write Protection bit
  1370                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1371                           ;	Data EEPROM Write Protection bit
  1372                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1373  30000B                     	org	3145739
  1374  30000B  E0                 	db	224
  1375                           
  1376                           ;Config register CONFIG7L @ 0x30000C
  1377                           ;	Table Read Protection bit
  1378                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1379                           ;	Table Read Protection bit
  1380                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1381                           ;	Table Read Protection bit
  1382                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1383                           ;	Table Read Protection bit
  1384                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1385  30000C                     	org	3145740
  1386  30000C  0F                 	db	15
  1387                           
  1388                           ;Config register CONFIG7H @ 0x30000D
  1389                           ;	Boot Block Table Read Protection bit
  1390                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1391  30000D                     	org	3145741
  1392  30000D  40                 	db	64
  1393                           tosu	equ	0xFFF
  1394                           tosh	equ	0xFFE
  1395                           tosl	equ	0xFFD
  1396                           stkptr	equ	0xFFC
  1397                           pclatu	equ	0xFFB
  1398                           pclath	equ	0xFFA
  1399                           pcl	equ	0xFF9
  1400                           tblptru	equ	0xFF8
  1401                           tblptrh	equ	0xFF7
  1402                           tblptrl	equ	0xFF6
  1403                           tablat	equ	0xFF5
  1404                           prodh	equ	0xFF4
  1405                           prodl	equ	0xFF3
  1406                           indf0	equ	0xFEF
  1407                           postinc0	equ	0xFEE
  1408                           postdec0	equ	0xFED
  1409                           preinc0	equ	0xFEC
  1410                           plusw0	equ	0xFEB
  1411                           fsr0h	equ	0xFEA
  1412                           fsr0l	equ	0xFE9
  1413                           wreg	equ	0xFE8
  1414                           indf1	equ	0xFE7
  1415                           postinc1	equ	0xFE6
  1416                           postdec1	equ	0xFE5
  1417                           preinc1	equ	0xFE4
  1418                           plusw1	equ	0xFE3
  1419                           fsr1h	equ	0xFE2
  1420                           fsr1l	equ	0xFE1
  1421                           bsr	equ	0xFE0
  1422                           indf2	equ	0xFDF
  1423                           postinc2	equ	0xFDE
  1424                           postdec2	equ	0xFDD
  1425                           preinc2	equ	0xFDC
  1426                           plusw2	equ	0xFDB
  1427                           fsr2h	equ	0xFDA
  1428                           fsr2l	equ	0xFD9
  1429                           status	equ	0xFD8

Data Sizes:
    Strings     8
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     13      23
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    EUSART_Cadena@datas	PTR unsigned char  size(2) Largest target is 8
		 -> STR_1(CODE[8]), 

    LDC_Cadena@dato	PTR const unsigned char  size(2) Largest target is 5
		 -> datos(COMRAM[5]), 


Critical Paths under _main in COMRAM

    _main->_LCD_XY
    _LDC_Cadena->_LCD_Data
    _LCD_XY->_LCD_Comando
    _LCD_Init->_LCD_Comando
    _EUSART_Cadena->_EUSART_Tx

Critical Paths under _Recepcion_Ext in COMRAM

    None.

Critical Paths under _INT0_Ext in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _Recepcion_Ext in BANK0

    None.

Critical Paths under _INT0_Ext in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Recepcion_Ext in BANK1

    None.

Critical Paths under _INT0_Ext in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Recepcion_Ext in BANK2

    None.

Critical Paths under _INT0_Ext in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Recepcion_Ext in BANK3

    None.

Critical Paths under _INT0_Ext in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Recepcion_Ext in BANK4

    None.

Critical Paths under _INT0_Ext in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Recepcion_Ext in BANK5

    None.

Critical Paths under _INT0_Ext in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Recepcion_Ext in BANK6

    None.

Critical Paths under _INT0_Ext in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Recepcion_Ext in BANK7

    None.

Critical Paths under _INT0_Ext in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     580
                                             11 COMRAM     2     2      0
                      _EUSART_Cadena
                        _EUSART_Init
                            _Int_Ext
                           _LCD_Init
                             _LCD_XY
                         _LDC_Cadena
 ---------------------------------------------------------------------------------
 (1) _LDC_Cadena                                           2     0      2     151
                                              7 COMRAM     2     0      2
                           _LCD_Data
 ---------------------------------------------------------------------------------
 (2) _LCD_Data                                             2     2      0      30
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_XY                                               4     0      4     248
                                              7 COMRAM     4     0      4
                        _LCD_Comando
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      30
                                              7 COMRAM     2     2      0
                        _LCD_Comando
 ---------------------------------------------------------------------------------
 (2) _LCD_Comando                                          2     2      0      30
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Int_Ext                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Init                                          1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Cadena                                        2     0      2     136
                                              6 COMRAM     2     0      2
                          _EUSART_Tx
 ---------------------------------------------------------------------------------
 (2) _EUSART_Tx                                            1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Recepcion_Ext                                        5     5      0       0
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INT0_Ext                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Cadena
     _EUSART_Tx
   _EUSART_Init
   _Int_Ext
   _LCD_Init
     _LCD_Comando
   _LCD_XY
     _LCD_Comando
   _LDC_Cadena
     _LCD_Data

 _Recepcion_Ext (ROOT)

 _INT0_Ext (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      D      17       1       24.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      17      20        0.0%
DATA                 0      0      17       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sun Dec 27 16:48:00 2020

            ?_LDC_Cadena 0008                        _a 000E                        _i 0010  
           ?_LCD_Comando 0001                       l35 0AC2                       l61 09BE  
                     l64 0954                       l58 087E                       l75 0A34  
                     l69 0A64                       u10 0AB6                       u11 0AB2  
                     u80 0A50                       u81 0A4C                       u90 0A34  
                     u91 0A30                       bsr 000FE0                      l132 0AA8  
                    l141 09FC                      l135 0ABA                      l129 0A86  
                    l820 0958                      l910 0A6C                      l830 098A  
                    l822 0966                      l920 0A78                      l912 0A70  
                    l840 09BC                      l832 0998                      l824 0968  
                    l930 0A82                      l922 0A7A                      l914 0A72  
                    l834 099A                      l826 0978                      l850 0910  
                    l842 08EE                      l932 0A84                      l924 0A7C  
                    l916 0A74                      l908 0A68                      l836 09AA  
                    l828 097A                      l860 0942                      l852 0920  
                    l844 08FC                      l926 0A7E                      l918 0A76  
                    l838 09AC                      l870 080A                      l862 0952  
                    l854 092E                      l846 08FE                      l864 0AA8  
                    l928 0A80                      l880 084A                      l872 0812  
                    l856 0930                      l848 090E                      l866 0AB6  
                    l890 0868                      l882 0850                      l874 0818  
                    l858 0940                      l868 0ABC                      l884 0856  
                    l876 082E                      l886 085C                      l878 0834  
                    l990 0A50                      l888 0862                      l992 0A5C  
                    l994 09FE                      l988 0A36                      l996 0A02  
                    l998 0A0A                      u100 09FC                      u101 09F8  
                    u110 08AE                      u111 08AA                      u207 0872  
                    u127 08D8                      u217 096E                      u137 0A04  
                    u227 0980                      u147 0904                      u237 09A0  
                    u157 0916                      u247 09B2                      u167 0936  
                    u257 09C6                      u177 0948                      u187 0822  
                    u197 083E                      wreg 000FE8             ?_EUSART_Init 0001  
                   l1000 0A18                     l1010 09DC                     l1002 0A1C  
                   l1012 09E0                     l1004 09C0                     l1020 088E  
                   l1006 09C4                     l1022 089A                     l1014 0880  
                   l1008 09CC                     l1024 08AE                     l1016 0886  
                   l1026 08C2                     l1018 088A                     l1028 08CE  
                   STR_1 0801                     _LATD 000F8C                     i1l45 0048  
                   i2l40 0AC8                     _main 0880                     fsr2h 000FDA  
                   indf2 000FDF                     fsr2l 000FD9                     btemp 0018  
                   start 0060       __size_of_EUSART_Tx 0016             ___param_bank 000000  
        __end_of_Int_Ext 0AC4         __end_of_LCD_Data 0956         __end_of_LCD_Init 0880  
           LCD_Data@data 0007         __end_of_INT0_Ext 0ACC            _EUSART_Cadena 09C0  
                  ?_main 0001                    _ADRES 000FC3                    i1l960 002E  
                  i1l962 003E                    i1l964 0042                    i1l966 0046  
                  i2l958 0AC6                    _RCREG 000FAE                    _SPBRG 000FAF  
                  _TRISD 000F95                    _TXREG 000FAD                    _datos 0013  
    __size_of_LDC_Cadena 0038                    _valor 0012                    tablat 000FF5  
                  ttemp5 0019                    ttemp6 001C                    ttemp7 0020  
                  status 000FD8                    wtemp8 0019          __initialization 0A88  
           __end_of_main 08EC           ?_EUSART_Cadena 0007                   ??_main 000C  
          __activetblptr 000001        __end_of_EUSART_Tx 0ABC   __size_of_Recepcion_Ext 0048  
                 _LCD_XY 0A36                ??_Int_Ext 0006                   clear_0 0A8E  
   __size_of_LCD_Comando 006A             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8     __size_of_EUSART_Init 0022  
              ?_LCD_Data 0001               __accesstop 0060  __end_of__initialization 0A94  
              ?_LCD_Init 0001                ?_INT0_Ext 0001            ___rparam_used 000001  
           ??_LDC_Cadena 000A           __pcstackCOMRAM 0001          ??_EUSART_Cadena 0009  
          _Recepcion_Ext 0018       __end_of_LDC_Cadena 0A36                  ?_LCD_XY 0008  
                LCD_XY@x 0008                  LCD_XY@y 000A               ??_LCD_Data 0006  
             ??_LCD_Init 0008               ??_INT0_Ext 0001           ?_Recepcion_Ext 0001  
         LDC_Cadena@dato 0008          __size_of_LCD_XY 0030                  _Int_Ext 0ABC  
                __Hparam 0000                  __Lparam 0000             __psmallconst 0800  
                __pcinit 0A88                  __ramtop 0800                  __ptext0 0880  
                __ptext1 09FE                  __ptext2 08EC                  __ptext3 0A36  
                __ptext4 080A                  __ptext5 0956                  __ptext6 0ABC  
                __ptext7 0A66                  __ptext8 09C0                  __ptext9 0AA6  
         LCD_Comando@cmd 0007           __pintcode_body 0AC4     end_of_initialization 0A94  
              _EUSART_Tx 0AA6                  int_func 0AC4          ??_Recepcion_Ext 0001  
              _RCSTAbits 000FAB                  postinc0 000FEE                _TRISCbits 000F94  
             ?_EUSART_Tx 0001           __end_of_LCD_XY 0A66                _TXSTAbits 000FAC  
      __size_of_LCD_Data 006A        __size_of_LCD_Init 0076        __size_of_INT0_Ext 0AC4  
          ??_LCD_Comando 0006              _BAUDCONbits 000FB8      start_initialization 0A88  
          ??_EUSART_Init 0006                 ??_LCD_XY 000C    __end_of_EUSART_Cadena 09FE  
    __end_of_LCD_Comando 09C0              __pbssCOMRAM 000E              ??_EUSART_Tx 0006  
       EUSART_Tx@dato_tx 0006      __end_of_EUSART_Init 0A88                 ?_Int_Ext 0001  
              __pintcode 0008              __pintcodelo 0018              __smallconst 0800  
               _LCD_Data 08EC                 _LCD_Init 080A                 _INT0_Ext 0008  
               _LATDbits 000F8C                 _IPR1bits 000F9F                 _PIE1bits 000F9D  
               _PIR1bits 000F9E                 _RCONbits 000FD0              _LCD_Comando 0956  
             _ADCON0bits 000FC2               _ADCON1bits 000FC1               _ADCON2bits 000FC0  
            _EUSART_Init 0A66                 __Hrparam 0000         __size_of_Int_Ext 0008  
        EUSART_Init@baud 0006                 __Lrparam 0000             __Lsmallconst 0800  
  __end_of_Recepcion_Ext 0060            __size_of_main 006C               _LDC_Cadena 09FE  
               int$flags 0018               _INTCONbits 000FF2                 intlevel1 0000  
               intlevel2 0000       EUSART_Cadena@datas 0007   __size_of_EUSART_Cadena 003E  
