

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sat Dec 26 17:08:08 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    58                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    59                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    60                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    61  0000                     
    62                           ; Version 2.20
    63                           ; Generated 12/02/2020 GMT
    64                           ; 
    65                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    66                           ; All rights reserved.
    67                           ; 
    68                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    69                           ; 
    70                           ; Redistribution and use in source and binary forms, with or without modification, are
    71                           ; permitted provided that the following conditions are met:
    72                           ; 
    73                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    74                           ;        conditions and the following disclaimer.
    75                           ; 
    76                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    77                           ;        of conditions and the following disclaimer in the documentation and/or other
    78                           ;        materials provided with the distribution.
    79                           ; 
    80                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    81                           ;        software without specific prior written permission.
    82                           ; 
    83                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    84                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    85                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    86                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    87                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    88                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    89                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    90                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    91                           ; 
    92                           ; 
    93                           ; Code-generator required, PIC18F4550 Definitions
    94                           ; 
    95                           ; SFR Addresses
    96  0000                     _ADRES	set	4035
    97  0000                     _RCONbits	set	4048
    98  0000                     _INTCON2bits	set	4081
    99  0000                     _INTCON3bits	set	4080
   100  0000                     _INTCONbits	set	4082
   101  0000                     _TRISBbits	set	3987
   102  0000                     _LATDbits	set	3980
   103  0000                     _LATD	set	3980
   104  0000                     _ADCON0bits	set	4034
   105  0000                     _ADCON2bits	set	4032
   106  0000                     _ADCON1bits	set	4033
   107  0000                     _LATCbits	set	3979
   108  0000                     _TRISC	set	3988
   109  0000                     _TRISD	set	3989
   110                           
   111                           	psect	smallconst
   112  000800                     __psmallconst:
   113                           	callstack 0
   114  000800  00                 	db	0
   115  000801                     STR_2:
   116                           
   117                           ; BSR set to: 0
   118  000801  49                 	db	73	;'I'
   119  000802  53                 	db	83	;'S'
   120  000803  20                 	db	32
   121  000804  3D                 	db	61	;'='
   122  000805  20                 	db	32
   123  000806  25                 	db	37
   124  000807  2E                 	db	46
   125  000808  32                 	db	50	;'2'
   126  000809  66                 	db	102	;'f'
   127  00080A  00                 	db	0
   128  00080B                     STR_1:
   129                           
   130                           ; BSR set to: 0
   131  00080B  65                 	db	101	;'e'
   132  00080C  73                 	db	115	;'s'
   133  00080D  20                 	db	32
   134  00080E  3D                 	db	61	;'='
   135  00080F  20                 	db	32
   136  000810  25                 	db	37
   137  000811  2E                 	db	46
   138  000812  32                 	db	50	;'2'
   139  000813  66                 	db	102	;'f'
   140  000814  00                 	db	0
   141  000815                     STR_5:
   142                           
   143                           ; BSR set to: 0
   144  000815  49                 	db	73	;'I'
   145  000816  4E                 	db	78	;'N'
   146  000817  46                 	db	70	;'F'
   147  000818  00                 	db	0
   148  000819                     STR_9:
   149                           
   150                           ; BSR set to: 0
   151  000819  4E                 	db	78	;'N'
   152  00081A  41                 	db	65	;'A'
   153  00081B  4E                 	db	78	;'N'
   154  00081C  00                 	db	0
   155  00081D                     STR_6:
   156                           
   157                           ; BSR set to: 0
   158  00081D  69                 	db	105	;'i'
   159  00081E  6E                 	db	110	;'n'
   160  00081F  66                 	db	102	;'f'
   161  000820  00                 	db	0
   162  000821                     STR_10:
   163                           
   164                           ; BSR set to: 0
   165  000821  6E                 	db	110	;'n'
   166  000822  61                 	db	97	;'a'
   167  000823  6E                 	db	110	;'n'
   168  000824  00                 	db	0
   169  000825                     STR_13:
   170                           
   171                           ; BSR set to: 0
   172  000825  6C                 	db	108	;'l'
   173  000826  66                 	db	102	;'f'
   174  000827  00                 	db	0
   175  000828  00                 	db	0	; dummy byte at the end
   176  0000                     
   177                           ; #config settings
   178                           
   179                           	psect	cinit
   180  003A20                     __pcinit:
   181                           	callstack 0
   182  003A20                     start_initialization:
   183                           	callstack 0
   184  003A20                     __initialization:
   185                           	callstack 0
   186                           
   187                           ; Clear objects allocated to BANK1 (80 bytes)
   188  003A20  EE01  F000         	lfsr	0,__pbssBANK1
   189  003A24  0E50               	movlw	80
   190  003A26                     clear_0:
   191  003A26  6AEE               	clrf	postinc0,c
   192  003A28  06E8               	decf	wreg,f,c
   193  003A2A  E1FD               	bnz	clear_0
   194                           
   195                           ; Clear objects allocated to BANK0 (24 bytes)
   196  003A2C  EE00  F0BE         	lfsr	0,__pbssBANK0
   197  003A30  0E18               	movlw	24
   198  003A32                     clear_1:
   199  003A32  6AEE               	clrf	postinc0,c
   200  003A34  06E8               	decf	wreg,f,c
   201  003A36  E1FD               	bnz	clear_1
   202                           
   203                           ; Clear objects allocated to COMRAM (10 bytes)
   204  003A38  EE00  F050         	lfsr	0,__pbssCOMRAM
   205  003A3C  0E0A               	movlw	10
   206  003A3E                     clear_2:
   207  003A3E  6AEE               	clrf	postinc0,c
   208  003A40  06E8               	decf	wreg,f,c
   209  003A42  E1FD               	bnz	clear_2
   210  003A44                     end_of_initialization:
   211                           	callstack 0
   212  003A44                     __end_of__initialization:
   213                           	callstack 0
   214  003A44  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   215  003A46  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   216  003A48  0E00               	movlw	low (__Lmediumconst shr (0+16))
   217  003A4A  6EF8               	movwf	tblptru,c
   218  003A4C  0100               	movlb	0
   219  003A4E  EF64  F012         	goto	_main	;jump to C main() function
   220                           
   221                           	psect	bssCOMRAM
   222  000050                     __pbssCOMRAM:
   223                           	callstack 0
   224  000050                     ___fpclassifyf@F463:
   225                           	callstack 0
   226  000050                     	ds	4
   227  000054                     _width:
   228                           	callstack 0
   229  000054                     	ds	2
   230  000056                     _prec:
   231                           	callstack 0
   232  000056                     	ds	2
   233  000058                     _flags:
   234                           	callstack 0
   235  000058                     	ds	2
   236                           
   237                           	psect	bssBANK0
   238  0000BE                     __pbssBANK0:
   239                           	callstack 0
   240  0000BE                     floorf@F524:
   241                           	callstack 0
   242  0000BE                     	ds	4
   243  0000C2                     _vin:
   244                           	callstack 0
   245  0000C2                     	ds	4
   246  0000C6                     _nout:
   247                           	callstack 0
   248  0000C6                     	ds	2
   249  0000C8                     _valor_adc:
   250                           	callstack 0
   251  0000C8                     	ds	2
   252  0000CA                     _i:
   253                           	callstack 0
   254  0000CA                     	ds	2
   255  0000CC                     _dato:
   256                           	callstack 0
   257  0000CC                     	ds	10
   258                           
   259                           	psect	bssBANK1
   260  000100                     __pbssBANK1:
   261                           	callstack 0
   262  000100                     _dbuf:
   263                           	callstack 0
   264  000100                     	ds	80
   265                           
   266                           	psect	cstackBANK0
   267  000060                     __pcstackBANK0:
   268                           	callstack 0
   269  000060                     efgtoa@ou:
   270                           	callstack 0
   271                           
   272                           ; 4 bytes @ 0x0
   273  000060                     	ds	4
   274  000064                     _efgtoa$1234:
   275                           	callstack 0
   276                           
   277                           ; 2 bytes @ 0x4
   278  000064                     	ds	2
   279  000066                     _efgtoa$1235:
   280                           	callstack 0
   281                           
   282                           ; 2 bytes @ 0x6
   283  000066                     	ds	2
   284  000068                     _efgtoa$1240:
   285                           	callstack 0
   286                           
   287                           ; 2 bytes @ 0x8
   288  000068                     	ds	2
   289  00006A                     _efgtoa$1244:
   290                           	callstack 0
   291                           
   292                           ; 2 bytes @ 0xA
   293  00006A                     	ds	2
   294  00006C                     _efgtoa$1245:
   295                           	callstack 0
   296                           
   297                           ; 2 bytes @ 0xC
   298  00006C                     	ds	2
   299  00006E                     _efgtoa$1246:
   300                           	callstack 0
   301                           
   302                           ; 2 bytes @ 0xE
   303  00006E                     	ds	2
   304  000070                     efgtoa@t:
   305                           	callstack 0
   306                           
   307                           ; 2 bytes @ 0x10
   308  000070                     	ds	2
   309  000072                     efgtoa@pp:
   310                           	callstack 0
   311                           
   312                           ; 2 bytes @ 0x12
   313  000072                     	ds	2
   314  000074                     efgtoa@m:
   315                           	callstack 0
   316                           
   317                           ; 2 bytes @ 0x14
   318  000074                     	ds	2
   319  000076                     efgtoa@ne:
   320                           	callstack 0
   321                           
   322                           ; 2 bytes @ 0x16
   323  000076                     	ds	2
   324  000078                     efgtoa@d:
   325                           	callstack 0
   326                           
   327                           ; 2 bytes @ 0x18
   328  000078                     	ds	2
   329  00007A                     efgtoa@sign:
   330                           	callstack 0
   331                           
   332                           ; 2 bytes @ 0x1A
   333  00007A                     	ds	2
   334  00007C                     efgtoa@p:
   335                           	callstack 0
   336                           
   337                           ; 2 bytes @ 0x1C
   338  00007C                     	ds	2
   339  00007E                     efgtoa@nmode:
   340                           	callstack 0
   341                           
   342                           ; 1 bytes @ 0x1E
   343  00007E                     	ds	1
   344  00007F                     efgtoa@w:
   345                           	callstack 0
   346                           
   347                           ; 2 bytes @ 0x1F
   348  00007F                     	ds	2
   349  000081                     efgtoa@mode:
   350                           	callstack 0
   351                           
   352                           ; 1 bytes @ 0x21
   353  000081                     	ds	1
   354  000082                     efgtoa@h:
   355                           	callstack 0
   356                           
   357                           ; 4 bytes @ 0x22
   358  000082                     	ds	4
   359  000086                     efgtoa@l:
   360                           	callstack 0
   361                           
   362                           ; 4 bytes @ 0x26
   363  000086                     	ds	4
   364  00008A                     efgtoa@i:
   365                           	callstack 0
   366                           
   367                           ; 2 bytes @ 0x2A
   368  00008A                     	ds	2
   369  00008C                     efgtoa@g:
   370                           	callstack 0
   371                           
   372                           ; 4 bytes @ 0x2C
   373  00008C                     	ds	4
   374  000090                     efgtoa@e:
   375                           	callstack 0
   376                           
   377                           ; 2 bytes @ 0x30
   378  000090                     	ds	2
   379  000092                     efgtoa@n:
   380                           	callstack 0
   381                           
   382                           ; 2 bytes @ 0x32
   383  000092                     	ds	2
   384  000094                     efgtoa@u:
   385                           	callstack 0
   386                           
   387                           ; 4 bytes @ 0x34
   388  000094                     	ds	4
   389  000098                     _vfpfcnvrt$1260:
   390                           	callstack 0
   391                           
   392                           ; 2 bytes @ 0x38
   393  000098                     	ds	2
   394  00009A                     _vfpfcnvrt$1264:
   395                           	callstack 0
   396                           
   397                           ; 2 bytes @ 0x3A
   398  00009A                     	ds	2
   399  00009C                     vfpfcnvrt@ct:
   400                           	callstack 0
   401                           
   402                           ; 3 bytes @ 0x3C
   403  00009C                     	ds	3
   404  00009F                     vfpfcnvrt@f:
   405                           	callstack 0
   406                           
   407                           ; 4 bytes @ 0x3F
   408  00009F                     	ds	4
   409  0000A3                     vfpfcnvrt@c:
   410                           	callstack 0
   411                           
   412                           ; 1 bytes @ 0x43
   413  0000A3                     	ds	1
   414  0000A4                     ?_vfprintf:
   415                           	callstack 0
   416  0000A4                     vfprintf@fp:
   417                           	callstack 0
   418                           
   419                           ; 2 bytes @ 0x44
   420  0000A4                     	ds	2
   421  0000A6                     vfprintf@fmt:
   422                           	callstack 0
   423                           
   424                           ; 2 bytes @ 0x46
   425  0000A6                     	ds	2
   426  0000A8                     vfprintf@ap:
   427                           	callstack 0
   428                           
   429                           ; 2 bytes @ 0x48
   430  0000A8                     	ds	2
   431  0000AA                     ?_sprintf:
   432                           	callstack 0
   433  0000AA                     sprintf@s:
   434                           	callstack 0
   435                           
   436                           ; 2 bytes @ 0x4A
   437  0000AA                     	ds	2
   438  0000AC                     sprintf@fmt:
   439                           	callstack 0
   440                           
   441                           ; 2 bytes @ 0x4C
   442  0000AC                     	ds	8
   443  0000B4                     sprintf@ap:
   444                           	callstack 0
   445                           
   446                           ; 2 bytes @ 0x54
   447  0000B4                     	ds	2
   448  0000B6                     sprintf@f:
   449                           	callstack 0
   450                           
   451                           ; 6 bytes @ 0x56
   452  0000B6                     	ds	6
   453  0000BC                     ??_main:
   454                           
   455                           ; 1 bytes @ 0x5C
   456  0000BC                     	ds	2
   457                           
   458                           	psect	cstackCOMRAM
   459  000001                     __pcstackCOMRAM:
   460                           	callstack 0
   461  000001                     ??_INT1_Ext:
   462  000001                     
   463                           ; 1 bytes @ 0x0
   464  000001                     	ds	4
   465  000005                     ??_Toggle:
   466  000005                     ??_LCD_Comando:
   467  000005                     ??_LCD_Data:
   468  000005                     ?_ADC_Read:
   469                           	callstack 0
   470  000005                     ?_strlen:
   471                           	callstack 0
   472  000005                     ?___fpclassifyf:
   473                           	callstack 0
   474  000005                     ?_isupper:
   475                           	callstack 0
   476  000005                     ?_isdigit:
   477                           	callstack 0
   478  000005                     ?_strncmp:
   479                           	callstack 0
   480  000005                     ?_isspace:
   481                           	callstack 0
   482  000005                     ?___wmul:
   483                           	callstack 0
   484  000005                     ?___awdiv:
   485                           	callstack 0
   486  000005                     ?___awmod:
   487                           	callstack 0
   488  000005                     ?___fladd:
   489                           	callstack 0
   490  000005                     ?___fldiv:
   491                           	callstack 0
   492  000005                     ?___flneg:
   493                           	callstack 0
   494  000005                     ?___fltol:
   495                           	callstack 0
   496  000005                     ?___xxtofl:
   497                           	callstack 0
   498  000005                     ___wmul@multiplier:
   499                           	callstack 0
   500  000005                     ___awdiv@dividend:
   501                           	callstack 0
   502  000005                     ___awmod@dividend:
   503                           	callstack 0
   504  000005                     isdigit@c:
   505                           	callstack 0
   506  000005                     isspace@c:
   507                           	callstack 0
   508  000005                     isupper@c:
   509                           	callstack 0
   510  000005                     fputc@c:
   511                           	callstack 0
   512  000005                     strcpy@dest:
   513                           	callstack 0
   514  000005                     strlen@s:
   515                           	callstack 0
   516  000005                     strncmp@_l:
   517                           	callstack 0
   518  000005                     ___fleq@ff1:
   519                           	callstack 0
   520  000005                     ___flneg@f1:
   521                           	callstack 0
   522  000005                     ___fltol@f1:
   523                           	callstack 0
   524  000005                     ___fladd@b:
   525                           	callstack 0
   526  000005                     ___fldiv@b:
   527                           	callstack 0
   528  000005                     ___xxtofl@val:
   529                           	callstack 0
   530  000005                     ___fpclassifyf@x:
   531                           	callstack 0
   532                           
   533                           ; 4 bytes @ 0x4
   534  000005                     	ds	1
   535  000006                     LCD_Comando@cmd:
   536                           	callstack 0
   537  000006                     LCD_Data@data:
   538                           	callstack 0
   539                           
   540                           ; 1 bytes @ 0x5
   541  000006                     	ds	1
   542  000007                     ??_LCD_Init:
   543  000007                     ??_ADC_Read:
   544  000007                     ??_isupper:
   545  000007                     ??_isdigit:
   546  000007                     ??_isspace:
   547  000007                     LCD_XY@x:
   548                           	callstack 0
   549  000007                     LDC_Cadena@dato:
   550                           	callstack 0
   551  000007                     ___wmul@multiplicand:
   552                           	callstack 0
   553  000007                     ___awdiv@divisor:
   554                           	callstack 0
   555  000007                     ___awmod@divisor:
   556                           	callstack 0
   557  000007                     fputc@fp:
   558                           	callstack 0
   559  000007                     strcpy@src:
   560                           	callstack 0
   561  000007                     strlen@a:
   562                           	callstack 0
   563  000007                     strncmp@_r:
   564                           	callstack 0
   565                           
   566                           ; 2 bytes @ 0x6
   567  000007                     	ds	1
   568  000008                     ADC_Read@ch:
   569                           	callstack 0
   570                           
   571                           ; 1 bytes @ 0x7
   572  000008                     	ds	1
   573  000009                     ??_fputc:
   574  000009                     ??___fpclassifyf:
   575  000009                     ??_strcpy:
   576  000009                     ??___fltol:
   577  000009                     ??___xxtofl:
   578  000009                     ___awdiv@counter:
   579                           	callstack 0
   580  000009                     ___awmod@counter:
   581                           	callstack 0
   582  000009                     LCD_XY@y:
   583                           	callstack 0
   584  000009                     ___wmul@product:
   585                           	callstack 0
   586  000009                     strncmp@n:
   587                           	callstack 0
   588  000009                     ___fleq@ff2:
   589                           	callstack 0
   590  000009                     ___fladd@a:
   591                           	callstack 0
   592  000009                     ___fldiv@a:
   593                           	callstack 0
   594                           
   595                           ; 4 bytes @ 0x8
   596  000009                     	ds	1
   597  00000A                     ___awdiv@sign:
   598                           	callstack 0
   599  00000A                     ___awmod@sign:
   600                           	callstack 0
   601                           
   602                           ; 1 bytes @ 0x9
   603  00000A                     	ds	1
   604  00000B                     ??_strncmp:
   605  00000B                     ?_tolower:
   606                           	callstack 0
   607  00000B                     _isspace$1329:
   608                           	callstack 0
   609  00000B                     ___awdiv@quotient:
   610                           	callstack 0
   611  00000B                     strcpy@s:
   612                           	callstack 0
   613  00000B                     tolower@c:
   614                           	callstack 0
   615                           
   616                           ; 2 bytes @ 0xA
   617  00000B                     	ds	1
   618  00000C                     ?_atoi:
   619                           	callstack 0
   620  00000C                     atoi@s:
   621                           	callstack 0
   622  00000C                     strncmp@l:
   623                           	callstack 0
   624                           
   625                           ; 2 bytes @ 0xB
   626  00000C                     	ds	1
   627  00000D                     ??___fladd:
   628  00000D                     ??___fldiv:
   629  00000D                     ??_tolower:
   630  00000D                     ??___fleq:
   631  00000D                     ___fltol@sign1:
   632                           	callstack 0
   633  00000D                     ___xxtofl@sign:
   634                           	callstack 0
   635  00000D                     ___fpclassifyf@e:
   636                           	callstack 0
   637  00000D                     strcpy@d:
   638                           	callstack 0
   639                           
   640                           ; 2 bytes @ 0xC
   641  00000D                     	ds	1
   642  00000E                     ??_atoi:
   643  00000E                     ___fltol@exp1:
   644                           	callstack 0
   645  00000E                     ___xxtofl@exp:
   646                           	callstack 0
   647  00000E                     fputs@s:
   648                           	callstack 0
   649  00000E                     strncmp@r:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0xD
   653  00000E                     	ds	1
   654  00000F                     ___xxtofl@arg:
   655                           	callstack 0
   656  00000F                     ___fpclassifyf@u:
   657                           	callstack 0
   658                           
   659                           ; 4 bytes @ 0xE
   660  00000F                     	ds	1
   661  000010                     fputs@fp:
   662                           	callstack 0
   663                           
   664                           ; 2 bytes @ 0xF
   665  000010                     	ds	1
   666  000011                     ___fladd@signs:
   667                           	callstack 0
   668  000011                     _tolower$1393:
   669                           	callstack 0
   670  000011                     ___fldiv@rem:
   671                           	callstack 0
   672                           
   673                           ; 4 bytes @ 0x10
   674  000011                     	ds	1
   675  000012                     ___fladd@aexp:
   676                           	callstack 0
   677  000012                     fputs@c:
   678                           	callstack 0
   679  000012                     atoi@neg:
   680                           	callstack 0
   681                           
   682                           ; 2 bytes @ 0x11
   683  000012                     	ds	1
   684  000013                     ?___flmul:
   685                           	callstack 0
   686  000013                     ___fladd@bexp:
   687                           	callstack 0
   688  000013                     fputs@i:
   689                           	callstack 0
   690  000013                     ___flmul@b:
   691                           	callstack 0
   692                           
   693                           ; 4 bytes @ 0x12
   694  000013                     	ds	1
   695  000014                     ___fladd@grs:
   696                           	callstack 0
   697  000014                     _atoi$1298:
   698                           	callstack 0
   699                           
   700                           ; 2 bytes @ 0x13
   701  000014                     	ds	1
   702  000015                     ?_pad:
   703                           	callstack 0
   704  000015                     ___fldiv@sign:
   705                           	callstack 0
   706  000015                     pad@fp:
   707                           	callstack 0
   708                           
   709                           ; 2 bytes @ 0x14
   710  000015                     	ds	1
   711  000016                     ___fldiv@new_exp:
   712                           	callstack 0
   713  000016                     _atoi$1300:
   714                           	callstack 0
   715                           
   716                           ; 2 bytes @ 0x15
   717  000016                     	ds	1
   718  000017                     pad@buf:
   719                           	callstack 0
   720  000017                     ___flmul@a:
   721                           	callstack 0
   722                           
   723                           ; 4 bytes @ 0x16
   724  000017                     	ds	1
   725  000018                     _atoi$1299:
   726                           	callstack 0
   727  000018                     ___fldiv@grs:
   728                           	callstack 0
   729                           
   730                           ; 4 bytes @ 0x17
   731  000018                     	ds	1
   732  000019                     pad@p:
   733                           	callstack 0
   734  000019                     atoi@n:
   735                           	callstack 0
   736                           
   737                           ; 2 bytes @ 0x18
   738  000019                     	ds	2
   739  00001B                     ??___flmul:
   740  00001B                     ??_pad:
   741                           
   742                           ; 1 bytes @ 0x1A
   743  00001B                     	ds	1
   744  00001C                     ___fldiv@bexp:
   745                           	callstack 0
   746  00001C                     pad@i:
   747                           	callstack 0
   748                           
   749                           ; 2 bytes @ 0x1B
   750  00001C                     	ds	1
   751  00001D                     ___fldiv@aexp:
   752                           	callstack 0
   753                           
   754                           ; 1 bytes @ 0x1C
   755  00001D                     	ds	1
   756  00001E                     ?_floorf:
   757                           	callstack 0
   758  00001E                     pad@w:
   759                           	callstack 0
   760  00001E                     floorf@x:
   761                           	callstack 0
   762                           
   763                           ; 4 bytes @ 0x1D
   764  00001E                     	ds	1
   765  00001F                     ___flmul@sign:
   766                           	callstack 0
   767                           
   768                           ; 1 bytes @ 0x1E
   769  00001F                     	ds	1
   770  000020                     ___flmul@grs:
   771                           	callstack 0
   772                           
   773                           ; 4 bytes @ 0x1F
   774  000020                     	ds	2
   775  000022                     ??_floorf:
   776                           
   777                           ; 1 bytes @ 0x21
   778  000022                     	ds	2
   779  000024                     ___flmul@aexp:
   780                           	callstack 0
   781                           
   782                           ; 1 bytes @ 0x23
   783  000024                     	ds	1
   784  000025                     ___flmul@bexp:
   785                           	callstack 0
   786                           
   787                           ; 1 bytes @ 0x24
   788  000025                     	ds	1
   789  000026                     ___flmul@prod:
   790                           	callstack 0
   791                           
   792                           ; 4 bytes @ 0x25
   793  000026                     	ds	2
   794  000028                     floorf@m:
   795                           	callstack 0
   796                           
   797                           ; 4 bytes @ 0x27
   798  000028                     	ds	2
   799  00002A                     ___flmul@temp:
   800                           	callstack 0
   801                           
   802                           ; 2 bytes @ 0x29
   803  00002A                     	ds	2
   804  00002C                     ?___flsub:
   805                           	callstack 0
   806  00002C                     floorf@e:
   807                           	callstack 0
   808  00002C                     ___flge@ff1:
   809                           	callstack 0
   810  00002C                     ___flsub@b:
   811                           	callstack 0
   812                           
   813                           ; 4 bytes @ 0x2B
   814  00002C                     	ds	2
   815  00002E                     floorf@u:
   816                           	callstack 0
   817                           
   818                           ; 4 bytes @ 0x2D
   819  00002E                     	ds	2
   820  000030                     ___flge@ff2:
   821                           	callstack 0
   822  000030                     ___flsub@a:
   823                           	callstack 0
   824                           
   825                           ; 4 bytes @ 0x2F
   826  000030                     	ds	4
   827  000034                     ??___flge:
   828                           
   829                           ; 1 bytes @ 0x33
   830  000034                     	ds	4
   831  000038                     ?_efgtoa:
   832                           	callstack 0
   833  000038                     efgtoa@fp:
   834                           	callstack 0
   835                           
   836                           ; 2 bytes @ 0x37
   837  000038                     	ds	2
   838  00003A                     efgtoa@f:
   839                           	callstack 0
   840                           
   841                           ; 4 bytes @ 0x39
   842  00003A                     	ds	4
   843  00003E                     efgtoa@c:
   844                           	callstack 0
   845                           
   846                           ; 1 bytes @ 0x3D
   847  00003E                     	ds	1
   848  00003F                     ??_efgtoa:
   849                           
   850                           ; 1 bytes @ 0x3E
   851  00003F                     	ds	5
   852  000044                     ?_vfpfcnvrt:
   853                           	callstack 0
   854  000044                     vfpfcnvrt@fp:
   855                           	callstack 0
   856                           
   857                           ; 2 bytes @ 0x43
   858  000044                     	ds	2
   859  000046                     vfpfcnvrt@fmt:
   860                           	callstack 0
   861                           
   862                           ; 2 bytes @ 0x45
   863  000046                     	ds	2
   864  000048                     vfpfcnvrt@ap:
   865                           	callstack 0
   866                           
   867                           ; 2 bytes @ 0x47
   868  000048                     	ds	2
   869  00004A                     ??_vfpfcnvrt:
   870                           
   871                           ; 1 bytes @ 0x49
   872  00004A                     	ds	4
   873  00004E                     vfprintf@cfmt:
   874                           	callstack 0
   875                           
   876                           ; 2 bytes @ 0x4D
   877  00004E                     	ds	2
   878  000050                     
   879                           ; 1 bytes @ 0x4F
   880 ;;
   881 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   882 ;;
   883 ;; *************** function _main *****************
   884 ;; Defined at:
   885 ;;		line 24 in file "Programa_principal.c"
   886 ;; Parameters:    Size  Location     Type
   887 ;;		None
   888 ;; Auto vars:     Size  Location     Type
   889 ;;		None
   890 ;; Return value:  Size  Location     Type
   891 ;;                  1    wreg      void 
   892 ;; Registers used:
   893 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   894 ;; Tracked objects:
   895 ;;		On entry : 0/0
   896 ;;		On exit  : 0/0
   897 ;;		Unchanged: 0/0
   898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   899 ;;      Params:         0       0       0       0       0       0       0       0       0
   900 ;;      Locals:         0       0       0       0       0       0       0       0       0
   901 ;;      Temps:          0       2       0       0       0       0       0       0       0
   902 ;;      Totals:         0       2       0       0       0       0       0       0       0
   903 ;;Total ram usage:        2 bytes
   904 ;; Hardware stack levels required when called:   10
   905 ;; This function calls:
   906 ;;		_ADC_Init
   907 ;;		_ADC_Read
   908 ;;		_Int_Ext
   909 ;;		_LCD_Init
   910 ;;		_LCD_XY
   911 ;;		_LDC_Cadena
   912 ;;		_Led
   913 ;;		_Toggle
   914 ;;		___flmul
   915 ;;		___xxtofl
   916 ;;		_sprintf
   917 ;; This function is called by:
   918 ;;		Startup code after reset
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           
   922                           	psect	text0
   923  0024C8                     __ptext0:
   924                           	callstack 0
   925  0024C8                     _main:
   926                           	callstack 21
   927  0024C8                     
   928                           ;Programa_principal.c: 25:     ADC_Init();
   929  0024C8  EC6D  F01D         	call	_ADC_Init	;wreg free
   930  0024CC                     
   931                           ;Programa_principal.c: 26:     LCD_Init();
   932  0024CC  EC78  F01A         	call	_LCD_Init	;wreg free
   933  0024D0                     
   934                           ;Programa_principal.c: 27:     Int_Ext();
   935  0024D0  EC7D  F01D         	call	_Int_Ext	;wreg free
   936  0024D4                     
   937                           ;Programa_principal.c: 28:     TRISD = 0x00;
   938  0024D4  0E00               	movlw	0
   939  0024D6  6E95               	movwf	149,c	;volatile
   940  0024D8                     
   941                           ;Programa_principal.c: 29:     TRISC = 0x00;
   942  0024D8  0E00               	movlw	0
   943  0024DA  6E94               	movwf	148,c	;volatile
   944  0024DC                     
   945                           ;Programa_principal.c: 30:     LATCbits.LATC7 = 1;
   946  0024DC  8E8B               	bsf	139,7,c	;volatile
   947  0024DE                     l4264:
   948                           
   949                           ;Programa_principal.c: 32:         if(i == 2){
   950  0024DE  0E02               	movlw	2
   951  0024E0  0100               	movlb	0	; () banked
   952  0024E2  19CA               	xorwf	_i& (0+255),w,b
   953  0024E4  11CB               	iorwf	(_i+1)& (0+255),w,b
   954  0024E6  A4D8               	btfss	status,2,c
   955  0024E8  EF78  F012         	goto	u5121
   956  0024EC  EF7A  F012         	goto	u5120
   957  0024F0                     u5121:
   958  0024F0  EFD6  F012         	goto	l4278
   959  0024F4                     u5120:
   960  0024F4                     
   961                           ; BSR set to: 0
   962                           ;Programa_principal.c: 33:             Toggle();
   963  0024F4  EC66  F01C         	call	_Toggle	;wreg free
   964                           
   965                           ;Programa_principal.c: 34:             valor_adc = ADC_Read(1);
   966  0024F8  0E01               	movlw	1
   967  0024FA  EC21  F01C         	call	_ADC_Read
   968  0024FE  C005  F0C8         	movff	?_ADC_Read,_valor_adc
   969  002502  C006  F0C9         	movff	?_ADC_Read+1,_valor_adc+1
   970  002506                     
   971                           ;Programa_principal.c: 35:             vin = valor_adc*(5.0/1023);
   972  002506  C0C8  F005         	movff	_valor_adc,___xxtofl@val
   973  00250A  C0C9  F006         	movff	_valor_adc+1,___xxtofl@val+1
   974  00250E  6A07               	clrf	(___xxtofl@val+2)^0,c
   975  002510  6A08               	clrf	(___xxtofl@val+3)^0,c
   976  002512  0E00               	movlw	0
   977  002514  EC12  F015         	call	___xxtofl
   978  002518  C005  F013         	movff	?___xxtofl,___flmul@b
   979  00251C  C006  F014         	movff	?___xxtofl+1,___flmul@b+1
   980  002520  C007  F015         	movff	?___xxtofl+2,___flmul@b+2
   981  002524  C008  F016         	movff	?___xxtofl+3,___flmul@b+3
   982  002528  0E0A               	movlw	10
   983  00252A  6E17               	movwf	___flmul@a^0,c
   984  00252C  0E28               	movlw	40
   985  00252E  6E18               	movwf	(___flmul@a+1)^0,c
   986  002530  0EA0               	movlw	160
   987  002532  6E19               	movwf	(___flmul@a+2)^0,c
   988  002534  0E3B               	movlw	59
   989  002536  6E1A               	movwf	(___flmul@a+3)^0,c
   990  002538  EC82  F00E         	call	___flmul	;wreg free
   991  00253C  C013  F0C2         	movff	?___flmul,_vin
   992  002540  C014  F0C3         	movff	?___flmul+1,_vin+1
   993  002544  C015  F0C4         	movff	?___flmul+2,_vin+2
   994  002548  C016  F0C5         	movff	?___flmul+3,_vin+3
   995  00254C                     
   996                           ;Programa_principal.c: 36:             sprintf(dato,"es = %.2f",vin);
   997  00254C  0ECC               	movlw	low _dato
   998  00254E  0100               	movlb	0	; () banked
   999  002550  6FAA               	movwf	sprintf@s& (0+255),b
  1000  002552  0E00               	movlw	high _dato
  1001  002554  6FAB               	movwf	(sprintf@s+1)& (0+255),b
  1002  002556  0E0B               	movlw	low STR_1
  1003  002558  6FAC               	movwf	sprintf@fmt& (0+255),b
  1004  00255A  0E08               	movlw	high STR_1
  1005  00255C  6FAD               	movwf	(sprintf@fmt+1)& (0+255),b
  1006  00255E  C0C2  F0AE         	movff	_vin,?_sprintf+4
  1007  002562  C0C3  F0AF         	movff	_vin+1,?_sprintf+5
  1008  002566  C0C4  F0B0         	movff	_vin+2,?_sprintf+6
  1009  00256A  C0C5  F0B1         	movff	_vin+3,?_sprintf+7
  1010  00256E  ECAC  F01B         	call	_sprintf	;wreg free
  1011  002572                     
  1012                           ;Programa_principal.c: 37:             LCD_XY(0,0);
  1013  002572  0E00               	movlw	0
  1014  002574  6E08               	movwf	(LCD_XY@x+1)^0,c
  1015  002576  0E00               	movlw	0
  1016  002578  6E07               	movwf	LCD_XY@x^0,c
  1017  00257A  0E00               	movlw	0
  1018  00257C  6E0A               	movwf	(LCD_XY@y+1)^0,c
  1019  00257E  0E00               	movlw	0
  1020  002580  6E09               	movwf	LCD_XY@y^0,c
  1021  002582  EC42  F01D         	call	_LCD_XY	;wreg free
  1022  002586                     
  1023                           ;Programa_principal.c: 38:             LDC_Cadena(dato);
  1024  002586  0ECC               	movlw	low _dato
  1025  002588  6E07               	movwf	LDC_Cadena@dato^0,c
  1026  00258A  0E00               	movlw	high _dato
  1027  00258C  6E08               	movwf	(LDC_Cadena@dato+1)^0,c
  1028  00258E  ECD9  F01C         	call	_LDC_Cadena	;wreg free
  1029  002592                     
  1030                           ;Programa_principal.c: 39:             _delay((unsigned long)((100)*(20000000UL/4000.0))
      +                          );
  1031  002592  0E03               	movlw	3
  1032  002594  0100               	movlb	0	; () banked
  1033  002596  6FBD               	movwf	(??_main+1)& (0+255),b
  1034  002598  0E8A               	movlw	138
  1035  00259A  6FBC               	movwf	??_main& (0+255),b
  1036  00259C  0E55               	movlw	85
  1037  00259E                     u5167:
  1038  00259E  2EE8               	decfsz	wreg,f,c
  1039  0025A0  D7FE               	bra	u5167
  1040  0025A2  2FBC               	decfsz	??_main& (0+255),f,b
  1041  0025A4  D7FC               	bra	u5167
  1042  0025A6  2FBD               	decfsz	(??_main+1)& (0+255),f,b
  1043  0025A8  D7FA               	bra	u5167
  1044  0025AA  D000               	nop2	
  1045  0025AC                     l4278:
  1046                           
  1047                           ;Programa_principal.c: 41:         if(i == 3){
  1048  0025AC  0E03               	movlw	3
  1049  0025AE  0100               	movlb	0	; () banked
  1050  0025B0  19CA               	xorwf	_i& (0+255),w,b
  1051  0025B2  11CB               	iorwf	(_i+1)& (0+255),w,b
  1052  0025B4  A4D8               	btfss	status,2,c
  1053  0025B6  EFDF  F012         	goto	u5131
  1054  0025BA  EFE1  F012         	goto	u5130
  1055  0025BE                     u5131:
  1056  0025BE  EF3B  F013         	goto	l4292
  1057  0025C2                     u5130:
  1058  0025C2                     
  1059                           ; BSR set to: 0
  1060                           ;Programa_principal.c: 42:             valor_adc = ADC_Read(0);
  1061  0025C2  0E00               	movlw	0
  1062  0025C4  EC21  F01C         	call	_ADC_Read
  1063  0025C8  C005  F0C8         	movff	?_ADC_Read,_valor_adc
  1064  0025CC  C006  F0C9         	movff	?_ADC_Read+1,_valor_adc+1
  1065  0025D0                     
  1066                           ;Programa_principal.c: 43:             vin = valor_adc*(5.0/1023);
  1067  0025D0  C0C8  F005         	movff	_valor_adc,___xxtofl@val
  1068  0025D4  C0C9  F006         	movff	_valor_adc+1,___xxtofl@val+1
  1069  0025D8  6A07               	clrf	(___xxtofl@val+2)^0,c
  1070  0025DA  6A08               	clrf	(___xxtofl@val+3)^0,c
  1071  0025DC  0E00               	movlw	0
  1072  0025DE  EC12  F015         	call	___xxtofl
  1073  0025E2  C005  F013         	movff	?___xxtofl,___flmul@b
  1074  0025E6  C006  F014         	movff	?___xxtofl+1,___flmul@b+1
  1075  0025EA  C007  F015         	movff	?___xxtofl+2,___flmul@b+2
  1076  0025EE  C008  F016         	movff	?___xxtofl+3,___flmul@b+3
  1077  0025F2  0E0A               	movlw	10
  1078  0025F4  6E17               	movwf	___flmul@a^0,c
  1079  0025F6  0E28               	movlw	40
  1080  0025F8  6E18               	movwf	(___flmul@a+1)^0,c
  1081  0025FA  0EA0               	movlw	160
  1082  0025FC  6E19               	movwf	(___flmul@a+2)^0,c
  1083  0025FE  0E3B               	movlw	59
  1084  002600  6E1A               	movwf	(___flmul@a+3)^0,c
  1085  002602  EC82  F00E         	call	___flmul	;wreg free
  1086  002606  C013  F0C2         	movff	?___flmul,_vin
  1087  00260A  C014  F0C3         	movff	?___flmul+1,_vin+1
  1088  00260E  C015  F0C4         	movff	?___flmul+2,_vin+2
  1089  002612  C016  F0C5         	movff	?___flmul+3,_vin+3
  1090  002616                     
  1091                           ;Programa_principal.c: 44:             sprintf(dato,"IS = %.2f",vin);
  1092  002616  0ECC               	movlw	low _dato
  1093  002618  0100               	movlb	0	; () banked
  1094  00261A  6FAA               	movwf	sprintf@s& (0+255),b
  1095  00261C  0E00               	movlw	high _dato
  1096  00261E  6FAB               	movwf	(sprintf@s+1)& (0+255),b
  1097  002620  0E01               	movlw	low STR_2
  1098  002622  6FAC               	movwf	sprintf@fmt& (0+255),b
  1099  002624  0E08               	movlw	high STR_2
  1100  002626  6FAD               	movwf	(sprintf@fmt+1)& (0+255),b
  1101  002628  C0C2  F0AE         	movff	_vin,?_sprintf+4
  1102  00262C  C0C3  F0AF         	movff	_vin+1,?_sprintf+5
  1103  002630  C0C4  F0B0         	movff	_vin+2,?_sprintf+6
  1104  002634  C0C5  F0B1         	movff	_vin+3,?_sprintf+7
  1105  002638  ECAC  F01B         	call	_sprintf	;wreg free
  1106  00263C                     
  1107                           ;Programa_principal.c: 45:             LCD_XY(0,0);
  1108  00263C  0E00               	movlw	0
  1109  00263E  6E08               	movwf	(LCD_XY@x+1)^0,c
  1110  002640  0E00               	movlw	0
  1111  002642  6E07               	movwf	LCD_XY@x^0,c
  1112  002644  0E00               	movlw	0
  1113  002646  6E0A               	movwf	(LCD_XY@y+1)^0,c
  1114  002648  0E00               	movlw	0
  1115  00264A  6E09               	movwf	LCD_XY@y^0,c
  1116  00264C  EC42  F01D         	call	_LCD_XY	;wreg free
  1117  002650                     
  1118                           ;Programa_principal.c: 46:             LDC_Cadena(dato);
  1119  002650  0ECC               	movlw	low _dato
  1120  002652  6E07               	movwf	LDC_Cadena@dato^0,c
  1121  002654  0E00               	movlw	high _dato
  1122  002656  6E08               	movwf	(LDC_Cadena@dato+1)^0,c
  1123  002658  ECD9  F01C         	call	_LDC_Cadena	;wreg free
  1124  00265C                     
  1125                           ;Programa_principal.c: 47:             _delay((unsigned long)((100)*(20000000UL/4000.0))
      +                          );
  1126  00265C  0E03               	movlw	3
  1127  00265E  0100               	movlb	0	; () banked
  1128  002660  6FBD               	movwf	(??_main+1)& (0+255),b
  1129  002662  0E8A               	movlw	138
  1130  002664  6FBC               	movwf	??_main& (0+255),b
  1131  002666  0E55               	movlw	85
  1132  002668                     u5177:
  1133  002668  2EE8               	decfsz	wreg,f,c
  1134  00266A  D7FE               	bra	u5177
  1135  00266C  2FBC               	decfsz	??_main& (0+255),f,b
  1136  00266E  D7FC               	bra	u5177
  1137  002670  2FBD               	decfsz	(??_main+1)& (0+255),f,b
  1138  002672  D7FA               	bra	u5177
  1139  002674  D000               	nop2	
  1140  002676                     l4292:
  1141                           
  1142                           ;Programa_principal.c: 49:         if(i == 1){
  1143  002676  0100               	movlb	0	; () banked
  1144  002678  05CA               	decf	_i& (0+255),w,b
  1145  00267A  11CB               	iorwf	(_i+1)& (0+255),w,b
  1146  00267C  A4D8               	btfss	status,2,c
  1147  00267E  EF43  F013         	goto	u5141
  1148  002682  EF45  F013         	goto	u5140
  1149  002686                     u5141:
  1150  002686  EFA1  F013         	goto	l4308
  1151  00268A                     u5140:
  1152  00268A                     
  1153                           ; BSR set to: 0
  1154                           ;Programa_principal.c: 50:             Led();
  1155  00268A  EC8A  F01D         	call	_Led	;wreg free
  1156  00268E                     
  1157                           ;Programa_principal.c: 51:             valor_adc = ADC_Read(0);
  1158  00268E  0E00               	movlw	0
  1159  002690  EC21  F01C         	call	_ADC_Read
  1160  002694  C005  F0C8         	movff	?_ADC_Read,_valor_adc
  1161  002698  C006  F0C9         	movff	?_ADC_Read+1,_valor_adc+1
  1162  00269C                     
  1163                           ;Programa_principal.c: 52:             vin = valor_adc*(5.0/1023);
  1164  00269C  C0C8  F005         	movff	_valor_adc,___xxtofl@val
  1165  0026A0  C0C9  F006         	movff	_valor_adc+1,___xxtofl@val+1
  1166  0026A4  6A07               	clrf	(___xxtofl@val+2)^0,c
  1167  0026A6  6A08               	clrf	(___xxtofl@val+3)^0,c
  1168  0026A8  0E00               	movlw	0
  1169  0026AA  EC12  F015         	call	___xxtofl
  1170  0026AE  C005  F013         	movff	?___xxtofl,___flmul@b
  1171  0026B2  C006  F014         	movff	?___xxtofl+1,___flmul@b+1
  1172  0026B6  C007  F015         	movff	?___xxtofl+2,___flmul@b+2
  1173  0026BA  C008  F016         	movff	?___xxtofl+3,___flmul@b+3
  1174  0026BE  0E0A               	movlw	10
  1175  0026C0  6E17               	movwf	___flmul@a^0,c
  1176  0026C2  0E28               	movlw	40
  1177  0026C4  6E18               	movwf	(___flmul@a+1)^0,c
  1178  0026C6  0EA0               	movlw	160
  1179  0026C8  6E19               	movwf	(___flmul@a+2)^0,c
  1180  0026CA  0E3B               	movlw	59
  1181  0026CC  6E1A               	movwf	(___flmul@a+3)^0,c
  1182  0026CE  EC82  F00E         	call	___flmul	;wreg free
  1183  0026D2  C013  F0C2         	movff	?___flmul,_vin
  1184  0026D6  C014  F0C3         	movff	?___flmul+1,_vin+1
  1185  0026DA  C015  F0C4         	movff	?___flmul+2,_vin+2
  1186  0026DE  C016  F0C5         	movff	?___flmul+3,_vin+3
  1187  0026E2                     
  1188                           ;Programa_principal.c: 53:             sprintf(dato,"IS = %.2f",vin);
  1189  0026E2  0ECC               	movlw	low _dato
  1190  0026E4  0100               	movlb	0	; () banked
  1191  0026E6  6FAA               	movwf	sprintf@s& (0+255),b
  1192  0026E8  0E00               	movlw	high _dato
  1193  0026EA  6FAB               	movwf	(sprintf@s+1)& (0+255),b
  1194  0026EC  0E01               	movlw	low STR_2
  1195  0026EE  6FAC               	movwf	sprintf@fmt& (0+255),b
  1196  0026F0  0E08               	movlw	high STR_2
  1197  0026F2  6FAD               	movwf	(sprintf@fmt+1)& (0+255),b
  1198  0026F4  C0C2  F0AE         	movff	_vin,?_sprintf+4
  1199  0026F8  C0C3  F0AF         	movff	_vin+1,?_sprintf+5
  1200  0026FC  C0C4  F0B0         	movff	_vin+2,?_sprintf+6
  1201  002700  C0C5  F0B1         	movff	_vin+3,?_sprintf+7
  1202  002704  ECAC  F01B         	call	_sprintf	;wreg free
  1203  002708                     
  1204                           ;Programa_principal.c: 54:             LCD_XY(0,0);
  1205  002708  0E00               	movlw	0
  1206  00270A  6E08               	movwf	(LCD_XY@x+1)^0,c
  1207  00270C  0E00               	movlw	0
  1208  00270E  6E07               	movwf	LCD_XY@x^0,c
  1209  002710  0E00               	movlw	0
  1210  002712  6E0A               	movwf	(LCD_XY@y+1)^0,c
  1211  002714  0E00               	movlw	0
  1212  002716  6E09               	movwf	LCD_XY@y^0,c
  1213  002718  EC42  F01D         	call	_LCD_XY	;wreg free
  1214  00271C                     
  1215                           ;Programa_principal.c: 55:             LDC_Cadena(dato);
  1216  00271C  0ECC               	movlw	low _dato
  1217  00271E  6E07               	movwf	LDC_Cadena@dato^0,c
  1218  002720  0E00               	movlw	high _dato
  1219  002722  6E08               	movwf	(LDC_Cadena@dato+1)^0,c
  1220  002724  ECD9  F01C         	call	_LDC_Cadena	;wreg free
  1221  002728                     
  1222                           ;Programa_principal.c: 56:             _delay((unsigned long)((100)*(20000000UL/4000.0))
      +                          );
  1223  002728  0E03               	movlw	3
  1224  00272A  0100               	movlb	0	; () banked
  1225  00272C  6FBD               	movwf	(??_main+1)& (0+255),b
  1226  00272E  0E8A               	movlw	138
  1227  002730  6FBC               	movwf	??_main& (0+255),b
  1228  002732  0E55               	movlw	85
  1229  002734                     u5187:
  1230  002734  2EE8               	decfsz	wreg,f,c
  1231  002736  D7FE               	bra	u5187
  1232  002738  2FBC               	decfsz	??_main& (0+255),f,b
  1233  00273A  D7FC               	bra	u5187
  1234  00273C  2FBD               	decfsz	(??_main+1)& (0+255),f,b
  1235  00273E  D7FA               	bra	u5187
  1236  002740  D000               	nop2	
  1237  002742                     l4308:
  1238                           
  1239                           ;Programa_principal.c: 58:         if(i == 0){
  1240  002742  0100               	movlb	0	; () banked
  1241  002744  51CA               	movf	_i& (0+255),w,b
  1242  002746  11CB               	iorwf	(_i+1)& (0+255),w,b
  1243  002748  A4D8               	btfss	status,2,c
  1244  00274A  EFA9  F013         	goto	u5151
  1245  00274E  EFAB  F013         	goto	u5150
  1246  002752                     u5151:
  1247  002752  EF6F  F012         	goto	l4264
  1248  002756                     u5150:
  1249  002756                     
  1250                           ; BSR set to: 0
  1251                           ;Programa_principal.c: 59:             valor_adc = ADC_Read(1);
  1252  002756  0E01               	movlw	1
  1253  002758  EC21  F01C         	call	_ADC_Read
  1254  00275C  C005  F0C8         	movff	?_ADC_Read,_valor_adc
  1255  002760  C006  F0C9         	movff	?_ADC_Read+1,_valor_adc+1
  1256  002764                     
  1257                           ;Programa_principal.c: 60:             vin = valor_adc*(5.0/1023);
  1258  002764  C0C8  F005         	movff	_valor_adc,___xxtofl@val
  1259  002768  C0C9  F006         	movff	_valor_adc+1,___xxtofl@val+1
  1260  00276C  6A07               	clrf	(___xxtofl@val+2)^0,c
  1261  00276E  6A08               	clrf	(___xxtofl@val+3)^0,c
  1262  002770  0E00               	movlw	0
  1263  002772  EC12  F015         	call	___xxtofl
  1264  002776  C005  F013         	movff	?___xxtofl,___flmul@b
  1265  00277A  C006  F014         	movff	?___xxtofl+1,___flmul@b+1
  1266  00277E  C007  F015         	movff	?___xxtofl+2,___flmul@b+2
  1267  002782  C008  F016         	movff	?___xxtofl+3,___flmul@b+3
  1268  002786  0E0A               	movlw	10
  1269  002788  6E17               	movwf	___flmul@a^0,c
  1270  00278A  0E28               	movlw	40
  1271  00278C  6E18               	movwf	(___flmul@a+1)^0,c
  1272  00278E  0EA0               	movlw	160
  1273  002790  6E19               	movwf	(___flmul@a+2)^0,c
  1274  002792  0E3B               	movlw	59
  1275  002794  6E1A               	movwf	(___flmul@a+3)^0,c
  1276  002796  EC82  F00E         	call	___flmul	;wreg free
  1277  00279A  C013  F0C2         	movff	?___flmul,_vin
  1278  00279E  C014  F0C3         	movff	?___flmul+1,_vin+1
  1279  0027A2  C015  F0C4         	movff	?___flmul+2,_vin+2
  1280  0027A6  C016  F0C5         	movff	?___flmul+3,_vin+3
  1281  0027AA                     
  1282                           ;Programa_principal.c: 61:             sprintf(dato,"IS = %.2f",vin);
  1283  0027AA  0ECC               	movlw	low _dato
  1284  0027AC  0100               	movlb	0	; () banked
  1285  0027AE  6FAA               	movwf	sprintf@s& (0+255),b
  1286  0027B0  0E00               	movlw	high _dato
  1287  0027B2  6FAB               	movwf	(sprintf@s+1)& (0+255),b
  1288  0027B4  0E01               	movlw	low STR_2
  1289  0027B6  6FAC               	movwf	sprintf@fmt& (0+255),b
  1290  0027B8  0E08               	movlw	high STR_2
  1291  0027BA  6FAD               	movwf	(sprintf@fmt+1)& (0+255),b
  1292  0027BC  C0C2  F0AE         	movff	_vin,?_sprintf+4
  1293  0027C0  C0C3  F0AF         	movff	_vin+1,?_sprintf+5
  1294  0027C4  C0C4  F0B0         	movff	_vin+2,?_sprintf+6
  1295  0027C8  C0C5  F0B1         	movff	_vin+3,?_sprintf+7
  1296  0027CC  ECAC  F01B         	call	_sprintf	;wreg free
  1297  0027D0                     
  1298                           ;Programa_principal.c: 62:             LCD_XY(0,0);
  1299  0027D0  0E00               	movlw	0
  1300  0027D2  6E08               	movwf	(LCD_XY@x+1)^0,c
  1301  0027D4  0E00               	movlw	0
  1302  0027D6  6E07               	movwf	LCD_XY@x^0,c
  1303  0027D8  0E00               	movlw	0
  1304  0027DA  6E0A               	movwf	(LCD_XY@y+1)^0,c
  1305  0027DC  0E00               	movlw	0
  1306  0027DE  6E09               	movwf	LCD_XY@y^0,c
  1307  0027E0  EC42  F01D         	call	_LCD_XY	;wreg free
  1308  0027E4                     
  1309                           ;Programa_principal.c: 63:             LDC_Cadena(dato);
  1310  0027E4  0ECC               	movlw	low _dato
  1311  0027E6  6E07               	movwf	LDC_Cadena@dato^0,c
  1312  0027E8  0E00               	movlw	high _dato
  1313  0027EA  6E08               	movwf	(LDC_Cadena@dato+1)^0,c
  1314  0027EC  ECD9  F01C         	call	_LDC_Cadena	;wreg free
  1315  0027F0                     
  1316                           ;Programa_principal.c: 64:             _delay((unsigned long)((100)*(20000000UL/4000.0))
      +                          );
  1317  0027F0  0E03               	movlw	3
  1318  0027F2  0100               	movlb	0	; () banked
  1319  0027F4  6FBD               	movwf	(??_main+1)& (0+255),b
  1320  0027F6  0E8A               	movlw	138
  1321  0027F8  6FBC               	movwf	??_main& (0+255),b
  1322  0027FA  0E55               	movlw	85
  1323  0027FC                     u5197:
  1324  0027FC  2EE8               	decfsz	wreg,f,c
  1325  0027FE  D7FE               	bra	u5197
  1326  002800  2FBC               	decfsz	??_main& (0+255),f,b
  1327  002802  D7FC               	bra	u5197
  1328  002804  2FBD               	decfsz	(??_main+1)& (0+255),f,b
  1329  002806  D7FA               	bra	u5197
  1330  002808  D000               	nop2	
  1331  00280A  EF6F  F012         	goto	l4264
  1332  00280E  EF41  F000         	goto	start
  1333  002812                     __end_of_main:
  1334                           	callstack 0
  1335                           
  1336 ;; *************** function _sprintf *****************
  1337 ;; Defined at:
  1338 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_sprintf.c"
  1339 ;; Parameters:    Size  Location     Type
  1340 ;;  s               2   74[BANK0 ] PTR unsigned char 
  1341 ;;		 -> dato(10), 
  1342 ;;  fmt             2   76[BANK0 ] PTR const unsigned char 
  1343 ;;		 -> STR_4(10), STR_3(10), STR_2(10), STR_1(10), 
  1344 ;; Auto vars:     Size  Location     Type
  1345 ;;  f               6   86[BANK0 ] struct _IO_FILE
  1346 ;;  ap              2   84[BANK0 ] PTR void [1]
  1347 ;;		 -> ?_sprintf(2), 
  1348 ;;  ret             2    0        int 
  1349 ;; Return value:  Size  Location     Type
  1350 ;;                  2   74[BANK0 ] int 
  1351 ;; Registers used:
  1352 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1353 ;; Tracked objects:
  1354 ;;		On entry : 0/0
  1355 ;;		On exit  : 0/0
  1356 ;;		Unchanged: 0/0
  1357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1358 ;;      Params:         0       8       0       0       0       0       0       0       0
  1359 ;;      Locals:         0      10       0       0       0       0       0       0       0
  1360 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1361 ;;      Totals:         0      18       0       0       0       0       0       0       0
  1362 ;;Total ram usage:       18 bytes
  1363 ;; Hardware stack levels used:    1
  1364 ;; Hardware stack levels required when called:    9
  1365 ;; This function calls:
  1366 ;;		_vfprintf
  1367 ;; This function is called by:
  1368 ;;		_main
  1369 ;; This function uses a non-reentrant model
  1370 ;;
  1371                           
  1372                           	psect	text1
  1373  003758                     __ptext1:
  1374                           	callstack 0
  1375  003758                     _sprintf:
  1376                           	callstack 21
  1377  003758  0EAE               	movlw	low (?_sprintf+4)
  1378  00375A  0100               	movlb	0	; () banked
  1379  00375C  6FB4               	movwf	sprintf@ap& (0+255),b
  1380  00375E  0E00               	movlw	high (?_sprintf+4)
  1381  003760  6FB5               	movwf	(sprintf@ap+1)& (0+255),b
  1382  003762  C0AA  F0B6         	movff	sprintf@s,sprintf@f
  1383  003766  C0AB  F0B7         	movff	sprintf@s+1,sprintf@f+1
  1384  00376A                     
  1385                           ; BSR set to: 0
  1386  00376A  0E00               	movlw	0
  1387  00376C  6FB9               	movwf	(sprintf@f+3)& (0+255),b
  1388  00376E  0E00               	movlw	0
  1389  003770  6FB8               	movwf	(sprintf@f+2)& (0+255),b
  1390  003772                     
  1391                           ; BSR set to: 0
  1392  003772  0E00               	movlw	0
  1393  003774  6FBB               	movwf	(sprintf@f+5)& (0+255),b
  1394  003776  0E00               	movlw	0
  1395  003778  6FBA               	movwf	(sprintf@f+4)& (0+255),b
  1396  00377A                     
  1397                           ; BSR set to: 0
  1398  00377A  0EB6               	movlw	low sprintf@f
  1399  00377C  6FA4               	movwf	vfprintf@fp& (0+255),b
  1400  00377E  0E00               	movlw	high sprintf@f
  1401  003780  6FA5               	movwf	(vfprintf@fp+1)& (0+255),b
  1402  003782  C0AC  F0A6         	movff	sprintf@fmt,vfprintf@fmt
  1403  003786  C0AD  F0A7         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1404  00378A  0EB4               	movlw	low sprintf@ap
  1405  00378C  6FA8               	movwf	vfprintf@ap& (0+255),b
  1406  00378E  0E00               	movlw	high sprintf@ap
  1407  003790  6FA9               	movwf	(vfprintf@ap+1)& (0+255),b
  1408  003792  EC1D  F01B         	call	_vfprintf	;wreg free
  1409  003796  0100               	movlb	0	; () banked
  1410  003798  51B8               	movf	(sprintf@f+2)& (0+255),w,b
  1411  00379A  25AA               	addwf	sprintf@s& (0+255),w,b
  1412  00379C  6ED9               	movwf	fsr2l,c
  1413  00379E  51B9               	movf	(sprintf@f+3)& (0+255),w,b
  1414  0037A0  21AB               	addwfc	(sprintf@s+1)& (0+255),w,b
  1415  0037A2  6EDA               	movwf	fsr2h,c
  1416  0037A4  0E00               	movlw	0
  1417  0037A6  6EDF               	movwf	indf2,c
  1418  0037A8                     
  1419                           ; BSR set to: 0
  1420  0037A8  0012               	return		;funcret
  1421  0037AA                     __end_of_sprintf:
  1422                           	callstack 0
  1423                           
  1424 ;; *************** function _vfprintf *****************
  1425 ;; Defined at:
  1426 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;  fp              2   68[BANK0 ] PTR struct _IO_FILE
  1429 ;;		 -> sprintf@f(6), 
  1430 ;;  fmt             2   70[BANK0 ] PTR const unsigned char 
  1431 ;;		 -> STR_4(10), STR_3(10), STR_2(10), STR_1(10), 
  1432 ;;  ap              2   72[BANK0 ] PTR PTR void 
  1433 ;;		 -> sprintf@ap(2), 
  1434 ;; Auto vars:     Size  Location     Type
  1435 ;;  cfmt            2   77[COMRAM] PTR unsigned char 
  1436 ;;		 -> STR_4(10), STR_3(10), STR_2(10), STR_1(10), 
  1437 ;; Return value:  Size  Location     Type
  1438 ;;                  2   68[BANK0 ] int 
  1439 ;; Registers used:
  1440 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1441 ;; Tracked objects:
  1442 ;;		On entry : 0/0
  1443 ;;		On exit  : 0/0
  1444 ;;		Unchanged: 0/0
  1445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1446 ;;      Params:         0       6       0       0       0       0       0       0       0
  1447 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1448 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1449 ;;      Totals:         2       6       0       0       0       0       0       0       0
  1450 ;;Total ram usage:        8 bytes
  1451 ;; Hardware stack levels used:    1
  1452 ;; Hardware stack levels required when called:    8
  1453 ;; This function calls:
  1454 ;;		_vfpfcnvrt
  1455 ;; This function is called by:
  1456 ;;		_sprintf
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           	psect	text2
  1461  00363A                     __ptext2:
  1462                           	callstack 0
  1463  00363A                     _vfprintf:
  1464                           	callstack 21
  1465  00363A                     
  1466                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1467  00363A  C0A6  F04E         	movff	vfprintf@fmt,vfprintf@cfmt
  1468  00363E  C0A7  F04F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1469  003642                     
  1470                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  1471  003642  0E00               	movlw	0
  1472  003644  0100               	movlb	0	; () banked
  1473  003646  6FC7               	movwf	(_nout+1)& (0+255),b
  1474  003648  0E00               	movlw	0
  1475  00364A  6FC6               	movwf	_nout& (0+255),b
  1476                           
  1477                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  1478  00364C  EF3B  F01B         	goto	l4238
  1479  003650                     l4236:
  1480                           
  1481                           ; BSR set to: 0
  1482                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1483  003650  C0A4  F044         	movff	vfprintf@fp,vfpfcnvrt@fp
  1484  003654  C0A5  F045         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1485  003658  0E4E               	movlw	low vfprintf@cfmt
  1486  00365A  6E46               	movwf	vfpfcnvrt@fmt^0,c
  1487  00365C  0E00               	movlw	high vfprintf@cfmt
  1488  00365E  6E47               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1489  003660  C0A8  F048         	movff	vfprintf@ap,vfpfcnvrt@ap
  1490  003664  C0A9  F049         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1491  003668  EC4E  F00C         	call	_vfpfcnvrt	;wreg free
  1492  00366C  5044               	movf	?_vfpfcnvrt^0,w,c
  1493  00366E  0100               	movlb	0	; () banked
  1494  003670  27C6               	addwf	_nout& (0+255),f,b
  1495  003672  5045               	movf	(?_vfpfcnvrt+1)^0,w,c
  1496  003674  23C7               	addwfc	(_nout+1)& (0+255),f,b
  1497  003676                     l4238:
  1498                           
  1499                           ; BSR set to: 0
  1500                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  1501  003676  C04E  FFF6         	movff	vfprintf@cfmt,tblptrl
  1502  00367A  C04F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1503  00367E                     	if	0	;tblptru may be non-zero
  1504  00367E                     	endif
  1505  00367E                     	if	0	;tblptru may be non-zero
  1506  00367E                     	endif
  1507  00367E  0008               	tblrd		*
  1508  003680  50F5               	movf	tablat,w,c
  1509  003682  0900               	iorlw	0
  1510  003684  A4D8               	btfss	status,2,c
  1511  003686  EF47  F01B         	goto	u5111
  1512  00368A  EF49  F01B         	goto	u5110
  1513  00368E                     u5111:
  1514  00368E  EF28  F01B         	goto	l4236
  1515  003692                     u5110:
  1516  003692                     
  1517                           ; BSR set to: 0
  1518                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  1519  003692  C0C6  F0A4         	movff	_nout,?_vfprintf
  1520  003696  C0C7  F0A5         	movff	_nout+1,?_vfprintf+1
  1521  00369A                     
  1522                           ; BSR set to: 0
  1523  00369A  0012               	return		;funcret
  1524  00369C                     __end_of_vfprintf:
  1525                           	callstack 0
  1526                           
  1527 ;; *************** function _vfpfcnvrt *****************
  1528 ;; Defined at:
  1529 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  1530 ;; Parameters:    Size  Location     Type
  1531 ;;  fp              2   67[COMRAM] PTR struct _IO_FILE
  1532 ;;		 -> sprintf@f(6), 
  1533 ;;  fmt             2   69[COMRAM] PTR PTR unsigned char 
  1534 ;;		 -> vfprintf@cfmt(2), 
  1535 ;;  ap              2   71[COMRAM] PTR PTR void 
  1536 ;;		 -> sprintf@ap(2), 
  1537 ;; Auto vars:     Size  Location     Type
  1538 ;;  llu             8    0        unsigned long long 
  1539 ;;  ll              8    0        long long 
  1540 ;;  f               4   63[BANK0 ] long long 
  1541 ;;  ct              3   60[BANK0 ] unsigned char [3]
  1542 ;;  vp              3    0        PTR void 
  1543 ;;  cp              3    0        PTR unsigned char 
  1544 ;;  i               2    0        int 
  1545 ;;  done            2    0        int 
  1546 ;;  c               1   67[BANK0 ] unsigned char 
  1547 ;; Return value:  Size  Location     Type
  1548 ;;                  2   67[COMRAM] int 
  1549 ;; Registers used:
  1550 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1551 ;; Tracked objects:
  1552 ;;		On entry : 0/0
  1553 ;;		On exit  : 0/0
  1554 ;;		Unchanged: 0/0
  1555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1556 ;;      Params:         6       0       0       0       0       0       0       0       0
  1557 ;;      Locals:         0      12       0       0       0       0       0       0       0
  1558 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1559 ;;      Totals:        10      12       0       0       0       0       0       0       0
  1560 ;;Total ram usage:       22 bytes
  1561 ;; Hardware stack levels used:    1
  1562 ;; Hardware stack levels required when called:    7
  1563 ;; This function calls:
  1564 ;;		_atoi
  1565 ;;		_efgtoa
  1566 ;;		_fputc
  1567 ;;		_isdigit
  1568 ;;		_isupper
  1569 ;;		_strncmp
  1570 ;;		_tolower
  1571 ;; This function is called by:
  1572 ;;		_vfprintf
  1573 ;; This function uses a non-reentrant model
  1574 ;;
  1575                           
  1576                           	psect	text3
  1577  00189C                     __ptext3:
  1578                           	callstack 0
  1579  00189C                     _vfpfcnvrt:
  1580                           	callstack 21
  1581  00189C                     
  1582                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  1583  00189C  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1584  0018A0  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1585  0018A4  CFDE FFF6          	movff	postinc2,tblptrl
  1586  0018A8  CFDD FFF7          	movff	postdec2,tblptrh
  1587  0018AC                     	if	0	;tblptru may be non-zero
  1588  0018AC                     	endif
  1589  0018AC                     	if	0	;tblptru may be non-zero
  1590  0018AC                     	endif
  1591  0018AC  0008               	tblrd		*
  1592  0018AE  50F5               	movf	tablat,w,c
  1593  0018B0  0A25               	xorlw	37
  1594  0018B2  A4D8               	btfss	status,2,c
  1595  0018B4  EF5E  F00C         	goto	u4971
  1596  0018B8  EF60  F00C         	goto	u4970
  1597  0018BC                     u4971:
  1598  0018BC  EF66  F00E         	goto	l4224
  1599  0018C0                     u4970:
  1600  0018C0                     
  1601                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  1602  0018C0  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1603  0018C4  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1604  0018C8  2ADE               	incf	postinc2,f,c
  1605  0018CA  0E00               	movlw	0
  1606  0018CC  22DD               	addwfc	postdec2,f,c
  1607  0018CE                     
  1608                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  1609  0018CE  0E00               	movlw	0
  1610  0018D0  6E55               	movwf	(_width+1)^0,c
  1611  0018D2  0E00               	movlw	0
  1612  0018D4  6E54               	movwf	_width^0,c
  1613  0018D6  C054  F058         	movff	_width,_flags
  1614  0018DA  C055  F059         	movff	_width+1,_flags+1
  1615  0018DE                     
  1616                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  1617  0018DE  6856               	setf	_prec^0,c
  1618  0018E0  6857               	setf	(_prec+1)^0,c
  1619  0018E2                     
  1620                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 740:         if (
      +                          (*fmt)[0] == '.') {
  1621  0018E2  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1622  0018E6  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1623  0018EA  CFDE FFF6          	movff	postinc2,tblptrl
  1624  0018EE  CFDD FFF7          	movff	postdec2,tblptrh
  1625  0018F2                     	if	0	;tblptru may be non-zero
  1626  0018F2                     	endif
  1627  0018F2                     	if	0	;tblptru may be non-zero
  1628  0018F2                     	endif
  1629  0018F2  0008               	tblrd		*
  1630  0018F4  50F5               	movf	tablat,w,c
  1631  0018F6  0A2E               	xorlw	46
  1632  0018F8  A4D8               	btfss	status,2,c
  1633  0018FA  EF81  F00C         	goto	u4981
  1634  0018FE  EF83  F00C         	goto	u4980
  1635  001902                     u4981:
  1636  001902  EF01  F00D         	goto	l4170
  1637  001906                     u4980:
  1638  001906                     
  1639                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 741:             
      +                          prec = 0;
  1640  001906  0E00               	movlw	0
  1641  001908  6E57               	movwf	(_prec+1)^0,c
  1642  00190A  0E00               	movlw	0
  1643  00190C  6E56               	movwf	_prec^0,c
  1644  00190E                     
  1645                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 742:             
      +                          ++*fmt;
  1646  00190E  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1647  001912  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1648  001916  2ADE               	incf	postinc2,f,c
  1649  001918  0E00               	movlw	0
  1650  00191A  22DD               	addwfc	postdec2,f,c
  1651  00191C                     
  1652                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 743:             
      +                          if ((*fmt)[0] == '*') {
  1653  00191C  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1654  001920  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1655  001924  CFDE FFF6          	movff	postinc2,tblptrl
  1656  001928  CFDD FFF7          	movff	postdec2,tblptrh
  1657  00192C                     	if	0	;tblptru may be non-zero
  1658  00192C                     	endif
  1659  00192C                     	if	0	;tblptru may be non-zero
  1660  00192C                     	endif
  1661  00192C  0008               	tblrd		*
  1662  00192E  50F5               	movf	tablat,w,c
  1663  001930  0A2A               	xorlw	42
  1664  001932  A4D8               	btfss	status,2,c
  1665  001934  EF9E  F00C         	goto	u4991
  1666  001938  EFA0  F00C         	goto	u4990
  1667  00193C                     u4991:
  1668  00193C  EFBD  F00C         	goto	l4160
  1669  001940                     u4990:
  1670  001940                     
  1671                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 744:             
      +                              ++*fmt;
  1672  001940  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1673  001944  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1674  001948  2ADE               	incf	postinc2,f,c
  1675  00194A  0E00               	movlw	0
  1676  00194C  22DD               	addwfc	postdec2,f,c
  1677                           
  1678                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 745:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1679  00194E  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1680  001952  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1681  001956  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  1682  00195A  0E02               	movlw	2
  1683  00195C  26DE               	addwf	postinc2,f,c
  1684  00195E  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  1685  001962  0E00               	movlw	0
  1686  001964  22DD               	addwfc	postdec2,f,c
  1687  001966  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1688  00196A  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1689  00196E  CFDE F056          	movff	postinc2,_prec
  1690  001972  CFDD F057          	movff	postdec2,_prec+1
  1691                           
  1692                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 746:             
      +                          } else {
  1693  001976  EF01  F00D         	goto	l4170
  1694  00197A                     l4160:
  1695                           
  1696                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 747:             
      +                              prec = atoi(*fmt);
  1697  00197A  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1698  00197E  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1699  001982  CFDE F00C          	movff	postinc2,atoi@s
  1700  001986  CFDD F00D          	movff	postdec2,atoi@s+1
  1701  00198A  ECEC  F015         	call	_atoi	;wreg free
  1702  00198E  C00C  F056         	movff	?_atoi,_prec
  1703  001992  C00D  F057         	movff	?_atoi+1,_prec+1
  1704                           
  1705                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 748:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1706  001996  EFD4  F00C         	goto	l4164
  1707  00199A                     l4162:
  1708                           
  1709                           ; BSR set to: 0
  1710                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 749:             
      +                                  ++*fmt;
  1711  00199A  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1712  00199E  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1713  0019A2  2ADE               	incf	postinc2,f,c
  1714  0019A4  0E00               	movlw	0
  1715  0019A6  22DD               	addwfc	postdec2,f,c
  1716  0019A8                     l4164:
  1717  0019A8  0ED0               	movlw	208
  1718  0019AA  6E4A               	movwf	??_vfpfcnvrt^0,c
  1719  0019AC  0EFF               	movlw	255
  1720  0019AE  6E4B               	movwf	(??_vfpfcnvrt+1)^0,c
  1721  0019B0  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1722  0019B4  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1723  0019B8  CFDE FFF6          	movff	postinc2,tblptrl
  1724  0019BC  CFDD FFF7          	movff	postdec2,tblptrh
  1725  0019C0                     	if	0	;tblptru may be non-zero
  1726  0019C0                     	endif
  1727  0019C0                     	if	0	;tblptru may be non-zero
  1728  0019C0                     	endif
  1729  0019C0  0008               	tblrd		*
  1730  0019C2  50F5               	movf	tablat,w,c
  1731  0019C4  6E4C               	movwf	(??_vfpfcnvrt+2)^0,c
  1732  0019C6  6A4D               	clrf	(??_vfpfcnvrt+3)^0,c
  1733  0019C8  504A               	movf	??_vfpfcnvrt^0,w,c
  1734  0019CA  264C               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1735  0019CC  504B               	movf	(??_vfpfcnvrt+1)^0,w,c
  1736  0019CE  224D               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1737  0019D0  504D               	movf	(??_vfpfcnvrt+3)^0,w,c
  1738  0019D2  E10A               	bnz	u5000
  1739  0019D4  0E0A               	movlw	10
  1740  0019D6  5C4C               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1741  0019D8  A0D8               	btfss	status,0,c
  1742  0019DA  EFF1  F00C         	goto	u5001
  1743  0019DE  EFF4  F00C         	goto	u5000
  1744  0019E2                     u5001:
  1745  0019E2  0E01               	movlw	1
  1746  0019E4  EFF5  F00C         	goto	u5010
  1747  0019E8                     u5000:
  1748  0019E8  0E00               	movlw	0
  1749  0019EA                     u5010:
  1750  0019EA  0100               	movlb	0	; () banked
  1751  0019EC  6F98               	movwf	_vfpfcnvrt$1260& (0+255),b
  1752  0019EE  6B99               	clrf	(_vfpfcnvrt$1260+1)& (0+255),b
  1753  0019F0                     
  1754                           ; BSR set to: 0
  1755  0019F0  5198               	movf	_vfpfcnvrt$1260& (0+255),w,b
  1756  0019F2  1199               	iorwf	(_vfpfcnvrt$1260+1)& (0+255),w,b
  1757  0019F4  A4D8               	btfss	status,2,c
  1758  0019F6  EFFF  F00C         	goto	u5021
  1759  0019FA  EF01  F00D         	goto	u5020
  1760  0019FE                     u5021:
  1761  0019FE  EFCD  F00C         	goto	l4162
  1762  001A02                     u5020:
  1763  001A02                     l4170:
  1764                           
  1765                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 757:         ct[0
      +                          ] = tolower((int)(*fmt)[0]);
  1766  001A02  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1767  001A06  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1768  001A0A  CFDE FFF6          	movff	postinc2,tblptrl
  1769  001A0E  CFDD FFF7          	movff	postdec2,tblptrh
  1770  001A12                     	if	0	;tblptru may be non-zero
  1771  001A12                     	endif
  1772  001A12                     	if	0	;tblptru may be non-zero
  1773  001A12                     	endif
  1774  001A12  0008               	tblrd		*
  1775  001A14  50F5               	movf	tablat,w,c
  1776  001A16  6E0B               	movwf	tolower@c^0,c
  1777  001A18  6A0C               	clrf	(tolower@c+1)^0,c
  1778  001A1A  EC4E  F01B         	call	_tolower	;wreg free
  1779  001A1E  500B               	movf	?_tolower^0,w,c
  1780  001A20  0100               	movlb	0	; () banked
  1781  001A22  6F9C               	movwf	vfpfcnvrt@ct& (0+255),b
  1782  001A24                     
  1783                           ; BSR set to: 0
  1784                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 758:         if (
      +                          ct[0]) {
  1785  001A24  519C               	movf	vfpfcnvrt@ct& (0+255),w,b
  1786  001A26  B4D8               	btfsc	status,2,c
  1787  001A28  EF18  F00D         	goto	u5031
  1788  001A2C  EF1A  F00D         	goto	u5030
  1789  001A30                     u5031:
  1790  001A30  EF54  F00D         	goto	l4180
  1791  001A34                     u5030:
  1792  001A34                     
  1793                           ; BSR set to: 0
  1794                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 759:             
      +                          ct[1] = tolower((int)(*fmt)[1]);
  1795  001A34  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1796  001A38  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1797  001A3C  CFDE F04A          	movff	postinc2,??_vfpfcnvrt
  1798  001A40  CFDD F04B          	movff	postdec2,??_vfpfcnvrt+1
  1799  001A44  0E01               	movlw	1
  1800  001A46  264A               	addwf	??_vfpfcnvrt^0,f,c
  1801  001A48  0E00               	movlw	0
  1802  001A4A  224B               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1803  001A4C  C04A  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1804  001A50  C04B  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1805  001A54                     	if	0	;tblptru may be non-zero
  1806  001A54                     	endif
  1807  001A54                     	if	0	;tblptru may be non-zero
  1808  001A54                     	endif
  1809  001A54  0008               	tblrd		*
  1810  001A56  50F5               	movf	tablat,w,c
  1811  001A58  6E0B               	movwf	tolower@c^0,c
  1812  001A5A  6A0C               	clrf	(tolower@c+1)^0,c
  1813  001A5C  EC4E  F01B         	call	_tolower	;wreg free
  1814  001A60  500B               	movf	?_tolower^0,w,c
  1815  001A62  0100               	movlb	0	; () banked
  1816  001A64  6F9D               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  1817  001A66                     
  1818                           ; BSR set to: 0
  1819                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 760:             
      +                          if (ct[1]) {
  1820  001A66  519D               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  1821  001A68  B4D8               	btfsc	status,2,c
  1822  001A6A  EF39  F00D         	goto	u5041
  1823  001A6E  EF3B  F00D         	goto	u5040
  1824  001A72                     u5041:
  1825  001A72  EF54  F00D         	goto	l4180
  1826  001A76                     u5040:
  1827  001A76                     
  1828                           ; BSR set to: 0
  1829                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 761:             
      +                              ct[2] = tolower((int)(*fmt)[2]);
  1830  001A76  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1831  001A7A  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1832  001A7E  CFDE F04A          	movff	postinc2,??_vfpfcnvrt
  1833  001A82  CFDD F04B          	movff	postdec2,??_vfpfcnvrt+1
  1834  001A86  0E02               	movlw	2
  1835  001A88  264A               	addwf	??_vfpfcnvrt^0,f,c
  1836  001A8A  0E00               	movlw	0
  1837  001A8C  224B               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1838  001A8E  C04A  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1839  001A92  C04B  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1840  001A96                     	if	0	;tblptru may be non-zero
  1841  001A96                     	endif
  1842  001A96                     	if	0	;tblptru may be non-zero
  1843  001A96                     	endif
  1844  001A96  0008               	tblrd		*
  1845  001A98  50F5               	movf	tablat,w,c
  1846  001A9A  6E0B               	movwf	tolower@c^0,c
  1847  001A9C  6A0C               	clrf	(tolower@c+1)^0,c
  1848  001A9E  EC4E  F01B         	call	_tolower	;wreg free
  1849  001AA2  500B               	movf	?_tolower^0,w,c
  1850  001AA4  0100               	movlb	0	; () banked
  1851  001AA6  6F9E               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  1852  001AA8                     l4180:
  1853                           
  1854                           ; BSR set to: 0
  1855                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 920:         if (
      +                          ct[0] == 'f') {
  1856  001AA8  0E66               	movlw	102
  1857  001AAA  199C               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  1858  001AAC  A4D8               	btfss	status,2,c
  1859  001AAE  EF5B  F00D         	goto	u5051
  1860  001AB2  EF5D  F00D         	goto	u5050
  1861  001AB6                     u5051:
  1862  001AB6  EF9D  F00D         	goto	l4192
  1863  001ABA                     u5050:
  1864  001ABA                     
  1865                           ; BSR set to: 0
  1866                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 922:             
      +                          c = (*fmt)[0];
  1867  001ABA  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1868  001ABE  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1869  001AC2  CFDE FFF6          	movff	postinc2,tblptrl
  1870  001AC6  CFDD FFF7          	movff	postdec2,tblptrh
  1871  001ACA                     	if	0	;tblptru may be non-zero
  1872  001ACA                     	endif
  1873  001ACA                     	if	0	;tblptru may be non-zero
  1874  001ACA                     	endif
  1875  001ACA  0008               	tblrd		*
  1876  001ACC  CFF5 F0A3          	movff	tablat,vfpfcnvrt@c
  1877  001AD0                     
  1878                           ; BSR set to: 0
  1879                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 923:             
      +                          ++*fmt;
  1880  001AD0  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1881  001AD4  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1882  001AD8  2ADE               	incf	postinc2,f,c
  1883  001ADA  0E00               	movlw	0
  1884  001ADC  22DD               	addwfc	postdec2,f,c
  1885  001ADE                     
  1886                           ; BSR set to: 0
  1887                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 924:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1888  001ADE  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1889  001AE2  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1890  001AE6  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  1891  001AEA  0E04               	movlw	4
  1892  001AEC  26DE               	addwf	postinc2,f,c
  1893  001AEE  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  1894  001AF2  0E00               	movlw	0
  1895  001AF4  22DD               	addwfc	postdec2,f,c
  1896  001AF6  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1897  001AFA  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1898  001AFE  CFDE F09F          	movff	postinc2,vfpfcnvrt@f
  1899  001B02  CFDE F0A0          	movff	postinc2,vfpfcnvrt@f+1
  1900  001B06  CFDE F0A1          	movff	postinc2,vfpfcnvrt@f+2
  1901  001B0A  CFDE F0A2          	movff	postinc2,vfpfcnvrt@f+3
  1902  001B0E                     l4188:
  1903                           
  1904                           ; BSR set to: 0
  1905                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 926:             
      +                          return efgtoa(fp, f, c);
  1906  001B0E  C044  F038         	movff	vfpfcnvrt@fp,efgtoa@fp
  1907  001B12  C045  F039         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1908  001B16  C09F  F03A         	movff	vfpfcnvrt@f,efgtoa@f
  1909  001B1A  C0A0  F03B         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  1910  001B1E  C0A1  F03C         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  1911  001B22  C0A2  F03D         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  1912  001B26  C0A3  F03E         	movff	vfpfcnvrt@c,efgtoa@c
  1913  001B2A  EC15  F004         	call	_efgtoa	;wreg free
  1914  001B2E  C038  F044         	movff	?_efgtoa,?_vfpfcnvrt
  1915  001B32  C039  F045         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  1916  001B36  EF81  F00E         	goto	l964
  1917  001B3A                     l4192:
  1918                           
  1919                           ; BSR set to: 0
  1920                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 928:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  1921  001B3A  0E9C               	movlw	low vfpfcnvrt@ct
  1922  001B3C  6E05               	movwf	strncmp@_l^0,c
  1923  001B3E  0E00               	movlw	high vfpfcnvrt@ct
  1924  001B40  6E06               	movwf	(strncmp@_l+1)^0,c
  1925  001B42  0E25               	movlw	low STR_13
  1926  001B44  6E07               	movwf	strncmp@_r^0,c
  1927  001B46  0E08               	movlw	high STR_13
  1928  001B48  6E08               	movwf	(strncmp@_r+1)^0,c
  1929  001B4A  0E00               	movlw	0
  1930  001B4C  6E0A               	movwf	(strncmp@n+1)^0,c
  1931  001B4E  0E02               	movlw	2
  1932  001B50  6E09               	movwf	strncmp@n^0,c
  1933  001B52  EC38  F018         	call	_strncmp	;wreg free
  1934  001B56  5005               	movf	?_strncmp^0,w,c
  1935  001B58  1006               	iorwf	(?_strncmp+1)^0,w,c
  1936  001B5A  A4D8               	btfss	status,2,c
  1937  001B5C  EFB2  F00D         	goto	u5061
  1938  001B60  EFB4  F00D         	goto	u5060
  1939  001B64                     u5061:
  1940  001B64  EF30  F00E         	goto	l4208
  1941  001B68                     u5060:
  1942  001B68                     
  1943                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 931:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  1944  001B68  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1945  001B6C  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1946  001B70  CFDE F04A          	movff	postinc2,??_vfpfcnvrt
  1947  001B74  CFDD F04B          	movff	postdec2,??_vfpfcnvrt+1
  1948  001B78  0E01               	movlw	1
  1949  001B7A  264A               	addwf	??_vfpfcnvrt^0,f,c
  1950  001B7C  0E00               	movlw	0
  1951  001B7E  224B               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1952  001B80  C04A  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1953  001B84  C04B  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1954  001B88                     	if	0	;tblptru may be non-zero
  1955  001B88                     	endif
  1956  001B88                     	if	0	;tblptru may be non-zero
  1957  001B88                     	endif
  1958  001B88  0008               	tblrd		*
  1959  001B8A  CFF5 F0A3          	movff	tablat,vfpfcnvrt@c
  1960  001B8E  0EBF               	movlw	191
  1961  001B90  6E4A               	movwf	??_vfpfcnvrt^0,c
  1962  001B92  0EFF               	movlw	255
  1963  001B94  6E4B               	movwf	(??_vfpfcnvrt+1)^0,c
  1964  001B96  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1965  001B9A  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1966  001B9E  CFDE FFF6          	movff	postinc2,tblptrl
  1967  001BA2  CFDD FFF7          	movff	postdec2,tblptrh
  1968  001BA6                     	if	0	;tblptru may be non-zero
  1969  001BA6                     	endif
  1970  001BA6                     	if	0	;tblptru may be non-zero
  1971  001BA6                     	endif
  1972  001BA6  0008               	tblrd		*
  1973  001BA8  50F5               	movf	tablat,w,c
  1974  001BAA  6E4C               	movwf	(??_vfpfcnvrt+2)^0,c
  1975  001BAC  6A4D               	clrf	(??_vfpfcnvrt+3)^0,c
  1976  001BAE  504A               	movf	??_vfpfcnvrt^0,w,c
  1977  001BB0  264C               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1978  001BB2  504B               	movf	(??_vfpfcnvrt+1)^0,w,c
  1979  001BB4  224D               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1980  001BB6  504D               	movf	(??_vfpfcnvrt+3)^0,w,c
  1981  001BB8  E10A               	bnz	u5070
  1982  001BBA  0E1A               	movlw	26
  1983  001BBC  5C4C               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1984  001BBE  A0D8               	btfss	status,0,c
  1985  001BC0  EFE4  F00D         	goto	u5071
  1986  001BC4  EFE7  F00D         	goto	u5070
  1987  001BC8                     u5071:
  1988  001BC8  0E01               	movlw	1
  1989  001BCA  EFE8  F00D         	goto	u5080
  1990  001BCE                     u5070:
  1991  001BCE  0E00               	movlw	0
  1992  001BD0                     u5080:
  1993  001BD0  0100               	movlb	0	; () banked
  1994  001BD2  6F9A               	movwf	_vfpfcnvrt$1264& (0+255),b
  1995  001BD4  6B9B               	clrf	(_vfpfcnvrt$1264+1)& (0+255),b
  1996  001BD6                     
  1997                           ; BSR set to: 0
  1998  001BD6  519A               	movf	_vfpfcnvrt$1264& (0+255),w,b
  1999  001BD8  119B               	iorwf	(_vfpfcnvrt$1264+1)& (0+255),w,b
  2000  001BDA  B4D8               	btfsc	status,2,c
  2001  001BDC  EFF2  F00D         	goto	u5091
  2002  001BE0  EFF4  F00D         	goto	u5090
  2003  001BE4                     u5091:
  2004  001BE4  EF0E  F00E         	goto	l4202
  2005  001BE8                     u5090:
  2006  001BE8                     
  2007                           ; BSR set to: 0
  2008                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 932:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2009  001BE8  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2010  001BEC  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2011  001BF0  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  2012  001BF4  0E04               	movlw	4
  2013  001BF6  26DE               	addwf	postinc2,f,c
  2014  001BF8  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  2015  001BFC  0E00               	movlw	0
  2016  001BFE  22DD               	addwfc	postdec2,f,c
  2017  001C00  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2018  001C04  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2019  001C08  CFDE F09F          	movff	postinc2,vfpfcnvrt@f
  2020  001C0C  CFDE F0A0          	movff	postinc2,vfpfcnvrt@f+1
  2021  001C10  CFDE F0A1          	movff	postinc2,vfpfcnvrt@f+2
  2022  001C14  CFDE F0A2          	movff	postinc2,vfpfcnvrt@f+3
  2023                           
  2024                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 933:             
      +                          } else {
  2025  001C18  EF26  F00E         	goto	l971
  2026  001C1C                     l4202:
  2027                           
  2028                           ; BSR set to: 0
  2029                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 934:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2030  001C1C  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2031  001C20  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2032  001C24  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  2033  001C28  0E04               	movlw	4
  2034  001C2A  26DE               	addwf	postinc2,f,c
  2035  001C2C  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  2036  001C30  0E00               	movlw	0
  2037  001C32  22DD               	addwfc	postdec2,f,c
  2038  001C34  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2039  001C38  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2040  001C3C  CFDE F09F          	movff	postinc2,vfpfcnvrt@f
  2041  001C40  CFDE F0A0          	movff	postinc2,vfpfcnvrt@f+1
  2042  001C44  CFDE F0A1          	movff	postinc2,vfpfcnvrt@f+2
  2043  001C48  CFDE F0A2          	movff	postinc2,vfpfcnvrt@f+3
  2044  001C4C                     l971:
  2045                           
  2046                           ; BSR set to: 0
  2047                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 936:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2048  001C4C  0E02               	movlw	2
  2049  001C4E  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2050  001C52  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2051  001C56  26DE               	addwf	postinc2,f,c
  2052  001C58  0E00               	movlw	0
  2053  001C5A  22DD               	addwfc	postdec2,f,c
  2054  001C5C  EF87  F00D         	goto	l4188
  2055  001C60                     l4208:
  2056                           
  2057                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  2058  001C60  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2059  001C64  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2060  001C68  CFDE FFF6          	movff	postinc2,tblptrl
  2061  001C6C  CFDD FFF7          	movff	postdec2,tblptrh
  2062  001C70                     	if	0	;tblptru may be non-zero
  2063  001C70                     	endif
  2064  001C70                     	if	0	;tblptru may be non-zero
  2065  001C70                     	endif
  2066  001C70  0008               	tblrd		*
  2067  001C72  50F5               	movf	tablat,w,c
  2068  001C74  0A25               	xorlw	37
  2069  001C76  A4D8               	btfss	status,2,c
  2070  001C78  EF40  F00E         	goto	u5101
  2071  001C7C  EF42  F00E         	goto	u5100
  2072  001C80                     u5101:
  2073  001C80  EF59  F00E         	goto	l4218
  2074  001C84                     u5100:
  2075  001C84                     
  2076                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  2077  001C84  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2078  001C88  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2079  001C8C  2ADE               	incf	postinc2,f,c
  2080  001C8E  0E00               	movlw	0
  2081  001C90  22DD               	addwfc	postdec2,f,c
  2082  001C92                     
  2083                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  2084  001C92  0E00               	movlw	0
  2085  001C94  6E06               	movwf	(fputc@c+1)^0,c
  2086  001C96  0E25               	movlw	37
  2087  001C98  6E05               	movwf	fputc@c^0,c
  2088  001C9A  C044  F007         	movff	vfpfcnvrt@fp,fputc@fp
  2089  001C9E  C045  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2090  001CA2  ECA3  F018         	call	_fputc	;wreg free
  2091  001CA6                     l4214:
  2092                           
  2093                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  2094  001CA6  0E00               	movlw	0
  2095  001CA8  6E45               	movwf	(?_vfpfcnvrt+1)^0,c
  2096  001CAA  0E01               	movlw	1
  2097  001CAC  6E44               	movwf	?_vfpfcnvrt^0,c
  2098  001CAE  EF81  F00E         	goto	l964
  2099  001CB2                     l4218:
  2100                           
  2101                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  2102  001CB2  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2103  001CB6  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2104  001CBA  2ADE               	incf	postinc2,f,c
  2105  001CBC  0E00               	movlw	0
  2106  001CBE  22DD               	addwfc	postdec2,f,c
  2107  001CC0                     
  2108                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
  2109  001CC0  0E00               	movlw	0
  2110  001CC2  6E45               	movwf	(?_vfpfcnvrt+1)^0,c
  2111  001CC4  0E00               	movlw	0
  2112  001CC6  6E44               	movwf	?_vfpfcnvrt^0,c
  2113  001CC8  EF81  F00E         	goto	l964
  2114  001CCC                     l4224:
  2115                           
  2116                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  2117  001CCC  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2118  001CD0  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2119  001CD4  CFDE FFF6          	movff	postinc2,tblptrl
  2120  001CD8  CFDD FFF7          	movff	postdec2,tblptrh
  2121  001CDC                     	if	0	;tblptru may be non-zero
  2122  001CDC                     	endif
  2123  001CDC                     	if	0	;tblptru may be non-zero
  2124  001CDC                     	endif
  2125  001CDC  0008               	tblrd		*
  2126  001CDE  50F5               	movf	tablat,w,c
  2127  001CE0  6E05               	movwf	fputc@c^0,c
  2128  001CE2  6A06               	clrf	(fputc@c+1)^0,c
  2129  001CE4  C044  F007         	movff	vfpfcnvrt@fp,fputc@fp
  2130  001CE8  C045  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2131  001CEC  ECA3  F018         	call	_fputc	;wreg free
  2132  001CF0                     
  2133                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  2134  001CF0  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2135  001CF4  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2136  001CF8  2ADE               	incf	postinc2,f,c
  2137  001CFA  0E00               	movlw	0
  2138  001CFC  22DD               	addwfc	postdec2,f,c
  2139  001CFE  EF53  F00E         	goto	l4214
  2140  001D02                     l964:
  2141  001D02  0012               	return		;funcret
  2142  001D04                     __end_of_vfpfcnvrt:
  2143                           	callstack 0
  2144                           
  2145 ;; *************** function _strncmp *****************
  2146 ;; Defined at:
  2147 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  2148 ;; Parameters:    Size  Location     Type
  2149 ;;  _l              2    4[COMRAM] PTR const unsigned char 
  2150 ;;		 -> vfpfcnvrt@ct(3), 
  2151 ;;  _r              2    6[COMRAM] PTR const unsigned char 
  2152 ;;		 -> STR_15(3), 
  2153 ;;  n               2    8[COMRAM] unsigned int 
  2154 ;; Auto vars:     Size  Location     Type
  2155 ;;  r               2   13[COMRAM] PTR const unsigned char 
  2156 ;;		 -> STR_15(3), 
  2157 ;;  l               2   11[COMRAM] PTR const unsigned char 
  2158 ;;		 -> vfpfcnvrt@ct(3), 
  2159 ;; Return value:  Size  Location     Type
  2160 ;;                  2    4[COMRAM] int 
  2161 ;; Registers used:
  2162 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2163 ;; Tracked objects:
  2164 ;;		On entry : 0/0
  2165 ;;		On exit  : 0/0
  2166 ;;		Unchanged: 0/0
  2167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2168 ;;      Params:         6       0       0       0       0       0       0       0       0
  2169 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2170 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2171 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2172 ;;Total ram usage:       11 bytes
  2173 ;; Hardware stack levels used:    1
  2174 ;; Hardware stack levels required when called:    2
  2175 ;; This function calls:
  2176 ;;		Nothing
  2177 ;; This function is called by:
  2178 ;;		_vfpfcnvrt
  2179 ;; This function uses a non-reentrant model
  2180 ;;
  2181                           
  2182                           	psect	text4
  2183  003070                     __ptext4:
  2184                           	callstack 0
  2185  003070                     _strncmp:
  2186                           	callstack 25
  2187  003070  C005  F00C         	movff	strncmp@_l,strncmp@l
  2188  003074  C006  F00D         	movff	strncmp@_l+1,strncmp@l+1
  2189  003078  C007  F00E         	movff	strncmp@_r,strncmp@r
  2190  00307C  C008  F00F         	movff	strncmp@_r+1,strncmp@r+1
  2191  003080  0609               	decf	strncmp@n^0,f,c
  2192  003082  A0D8               	btfss	status,0,c
  2193  003084  060A               	decf	(strncmp@n+1)^0,f,c
  2194  003086  2809               	incf	strncmp@n^0,w,c
  2195  003088  E106               	bnz	u4551
  2196  00308A  280A               	incf	(strncmp@n+1)^0,w,c
  2197  00308C  A4D8               	btfss	status,2,c
  2198  00308E  EF4B  F018         	goto	u4551
  2199  003092  EF4D  F018         	goto	u4550
  2200  003096                     u4551:
  2201  003096  EF5A  F018         	goto	l3762
  2202  00309A                     u4550:
  2203  00309A  0E00               	movlw	0
  2204  00309C  6E06               	movwf	(?_strncmp+1)^0,c
  2205  00309E  0E00               	movlw	0
  2206  0030A0  6E05               	movwf	?_strncmp^0,c
  2207  0030A2  EFA2  F018         	goto	l1092
  2208  0030A6                     l3760:
  2209  0030A6  4A0C               	infsnz	strncmp@l^0,f,c
  2210  0030A8  2A0D               	incf	(strncmp@l+1)^0,f,c
  2211  0030AA  4A0E               	infsnz	strncmp@r^0,f,c
  2212  0030AC  2A0F               	incf	(strncmp@r+1)^0,f,c
  2213  0030AE  0609               	decf	strncmp@n^0,f,c
  2214  0030B0  A0D8               	btfss	status,0,c
  2215  0030B2  060A               	decf	(strncmp@n+1)^0,f,c
  2216  0030B4                     l3762:
  2217  0030B4  C00C  FFD9         	movff	strncmp@l,fsr2l
  2218  0030B8  C00D  FFDA         	movff	strncmp@l+1,fsr2h
  2219  0030BC  50DF               	movf	indf2,w,c
  2220  0030BE  B4D8               	btfsc	status,2,c
  2221  0030C0  EF64  F018         	goto	u4561
  2222  0030C4  EF66  F018         	goto	u4560
  2223  0030C8                     u4561:
  2224  0030C8  EF91  F018         	goto	l3770
  2225  0030CC                     u4560:
  2226  0030CC  C00E  FFF6         	movff	strncmp@r,tblptrl
  2227  0030D0  C00F  FFF7         	movff	strncmp@r+1,tblptrh
  2228  0030D4                     	if	0	;tblptru may be non-zero
  2229  0030D4                     	endif
  2230  0030D4                     	if	0	;tblptru may be non-zero
  2231  0030D4                     	endif
  2232  0030D4  0008               	tblrd		*
  2233  0030D6  50F5               	movf	tablat,w,c
  2234  0030D8  0900               	iorlw	0
  2235  0030DA  B4D8               	btfsc	status,2,c
  2236  0030DC  EF72  F018         	goto	u4571
  2237  0030E0  EF74  F018         	goto	u4570
  2238  0030E4                     u4571:
  2239  0030E4  EF91  F018         	goto	l3770
  2240  0030E8                     u4570:
  2241  0030E8  5009               	movf	strncmp@n^0,w,c
  2242  0030EA  100A               	iorwf	(strncmp@n+1)^0,w,c
  2243  0030EC  B4D8               	btfsc	status,2,c
  2244  0030EE  EF7B  F018         	goto	u4581
  2245  0030F2  EF7D  F018         	goto	u4580
  2246  0030F6                     u4581:
  2247  0030F6  EF91  F018         	goto	l3770
  2248  0030FA                     u4580:
  2249  0030FA  C00C  FFD9         	movff	strncmp@l,fsr2l
  2250  0030FE  C00D  FFDA         	movff	strncmp@l+1,fsr2h
  2251  003102  50DF               	movf	indf2,w,c
  2252  003104  6E0B               	movwf	??_strncmp^0,c
  2253  003106  C00E  FFF6         	movff	strncmp@r,tblptrl
  2254  00310A  C00F  FFF7         	movff	strncmp@r+1,tblptrh
  2255  00310E                     	if	0	;tblptru may be non-zero
  2256  00310E                     	endif
  2257  00310E                     	if	0	;tblptru may be non-zero
  2258  00310E                     	endif
  2259  00310E  0008               	tblrd		*
  2260  003110  50F5               	movf	tablat,w,c
  2261  003112  180B               	xorwf	??_strncmp^0,w,c
  2262  003114  B4D8               	btfsc	status,2,c
  2263  003116  EF8F  F018         	goto	u4591
  2264  00311A  EF91  F018         	goto	u4590
  2265  00311E                     u4591:
  2266  00311E  EF53  F018         	goto	l3760
  2267  003122                     u4590:
  2268  003122                     l3770:
  2269  003122  C00C  FFD9         	movff	strncmp@l,fsr2l
  2270  003126  C00D  FFDA         	movff	strncmp@l+1,fsr2h
  2271  00312A  50DF               	movf	indf2,w,c
  2272  00312C  6E0B               	movwf	??_strncmp^0,c
  2273  00312E  C00E  FFF6         	movff	strncmp@r,tblptrl
  2274  003132  C00F  FFF7         	movff	strncmp@r+1,tblptrh
  2275  003136                     	if	0	;tblptru may be non-zero
  2276  003136                     	endif
  2277  003136                     	if	0	;tblptru may be non-zero
  2278  003136                     	endif
  2279  003136  0008               	tblrd		*
  2280  003138  50F5               	movf	tablat,w,c
  2281  00313A  5C0B               	subwf	??_strncmp^0,w,c
  2282  00313C  6E05               	movwf	?_strncmp^0,c
  2283  00313E  6A06               	clrf	(?_strncmp+1)^0,c
  2284  003140  A0D8               	btfss	status,0,c
  2285  003142  0606               	decf	(?_strncmp+1)^0,f,c
  2286  003144                     l1092:
  2287  003144  0012               	return		;funcret
  2288  003146                     __end_of_strncmp:
  2289                           	callstack 0
  2290                           
  2291 ;; *************** function _efgtoa *****************
  2292 ;; Defined at:
  2293 ;;		line 319 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  2294 ;; Parameters:    Size  Location     Type
  2295 ;;  fp              2   55[COMRAM] PTR struct _IO_FILE
  2296 ;;		 -> sprintf@f(6), 
  2297 ;;  f               4   57[COMRAM] PTR struct _IO_FILE
  2298 ;;  c               1   61[COMRAM] unsigned char 
  2299 ;; Auto vars:     Size  Location     Type
  2300 ;;  u               4   52[BANK0 ] unsigned char 
  2301 ;;  g               4   44[BANK0 ] unsigned char 
  2302 ;;  l               4   38[BANK0 ] unsigned char 
  2303 ;;  h               4   34[BANK0 ] unsigned char 
  2304 ;;  ou              4    0[BANK0 ] unsigned char 
  2305 ;;  n               2   50[BANK0 ] int 
  2306 ;;  e               2   48[BANK0 ] int 
  2307 ;;  i               2   42[BANK0 ] int 
  2308 ;;  w               2   31[BANK0 ] int 
  2309 ;;  p               2   28[BANK0 ] int 
  2310 ;;  sign            2   26[BANK0 ] int 
  2311 ;;  d               2   24[BANK0 ] int 
  2312 ;;  ne              2   22[BANK0 ] int 
  2313 ;;  m               2   20[BANK0 ] int 
  2314 ;;  pp              2   18[BANK0 ] int 
  2315 ;;  t               2   16[BANK0 ] int 
  2316 ;;  mode            1   33[BANK0 ] unsigned char 
  2317 ;;  nmode           1   30[BANK0 ] unsigned char 
  2318 ;; Return value:  Size  Location     Type
  2319 ;;                  2   55[COMRAM] int 
  2320 ;; Registers used:
  2321 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2322 ;; Tracked objects:
  2323 ;;		On entry : 0/0
  2324 ;;		On exit  : 0/0
  2325 ;;		Unchanged: 0/0
  2326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2327 ;;      Params:         7       0       0       0       0       0       0       0       0
  2328 ;;      Locals:         0      56       0       0       0       0       0       0       0
  2329 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2330 ;;      Totals:        12      56       0       0       0       0       0       0       0
  2331 ;;Total ram usage:       68 bytes
  2332 ;; Hardware stack levels used:    1
  2333 ;; Hardware stack levels required when called:    6
  2334 ;; This function calls:
  2335 ;;		___awdiv
  2336 ;;		___awmod
  2337 ;;		___fladd
  2338 ;;		___fldiv
  2339 ;;		___fleq
  2340 ;;		___flge
  2341 ;;		___flmul
  2342 ;;		___flneg
  2343 ;;		___flsub
  2344 ;;		___fltol
  2345 ;;		___fpclassifyf
  2346 ;;		_floorf
  2347 ;;		_isupper
  2348 ;;		_pad
  2349 ;;		_strcpy
  2350 ;;		_tolower
  2351 ;; This function is called by:
  2352 ;;		_vfpfcnvrt
  2353 ;; This function uses a non-reentrant model
  2354 ;;
  2355                           
  2356                           	psect	text5
  2357  00082A                     __ptext5:
  2358                           	callstack 0
  2359  00082A                     _efgtoa:
  2360                           	callstack 21
  2361  00082A                     
  2362                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 319: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.20\pic\sources\
      +                          c99\common\doprnt.c: 320: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\
      +                          doprnt.c: 321:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c9
      +                          9\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 323:     long double g, h, l, ou, u;
  2363  00082A  0E00               	movlw	0
  2364  00082C  0100               	movlb	0	; () banked
  2365  00082E  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2366  000830  0E00               	movlw	0
  2367  000832  6F7A               	movwf	efgtoa@sign& (0+255),b
  2368  000834                     
  2369                           ; BSR set to: 0
  2370                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 327:     g = f;
  2371  000834  C03A  F08C         	movff	efgtoa@f,efgtoa@g
  2372  000838  C03B  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  2373  00083C  C03C  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  2374  000840  C03D  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  2375  000844                     
  2376                           ; BSR set to: 0
  2377                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 328:     if (g < 
      +                          0.0) {
  2378  000844  BF8F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2379  000846  EF29  F004         	goto	u3960
  2380  00084A  EF27  F004         	goto	u3961
  2381  00084E                     u3961:
  2382  00084E  EF3F  F004         	goto	l3424
  2383  000852                     u3960:
  2384  000852                     
  2385                           ; BSR set to: 0
  2386                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 329:         sign
      +                           = 1;
  2387  000852  0E00               	movlw	0
  2388  000854  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2389  000856  0E01               	movlw	1
  2390  000858  6F7A               	movwf	efgtoa@sign& (0+255),b
  2391  00085A                     
  2392                           ; BSR set to: 0
  2393                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 330:         g = 
      +                          -g;
  2394  00085A  C08C  F005         	movff	efgtoa@g,___flneg@f1
  2395  00085E  C08D  F006         	movff	efgtoa@g+1,___flneg@f1+1
  2396  000862  C08E  F007         	movff	efgtoa@g+2,___flneg@f1+2
  2397  000866  C08F  F008         	movff	efgtoa@g+3,___flneg@f1+3
  2398  00086A  ECA1  F01C         	call	___flneg	;wreg free
  2399  00086E  C005  F08C         	movff	?___flneg,efgtoa@g
  2400  000872  C006  F08D         	movff	?___flneg+1,efgtoa@g+1
  2401  000876  C007  F08E         	movff	?___flneg+2,efgtoa@g+2
  2402  00087A  C008  F08F         	movff	?___flneg+3,efgtoa@g+3
  2403  00087E                     l3424:
  2404                           
  2405                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 334:     n = 0;
  2406  00087E  0E00               	movlw	0
  2407  000880  0100               	movlb	0	; () banked
  2408  000882  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  2409  000884  0E00               	movlw	0
  2410  000886  6F92               	movwf	efgtoa@n& (0+255),b
  2411  000888                     
  2412                           ; BSR set to: 0
  2413                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 335:     w = widt
      +                          h;
  2414  000888  C054  F07F         	movff	_width,efgtoa@w
  2415  00088C  C055  F080         	movff	_width+1,efgtoa@w+1
  2416  000890                     
  2417                           ; BSR set to: 0
  2418                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 336:     if (sign
      +                           || (flags & (1 << 2))) {
  2419  000890  517A               	movf	efgtoa@sign& (0+255),w,b
  2420  000892  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2421  000894  A4D8               	btfss	status,2,c
  2422  000896  EF4F  F004         	goto	u3971
  2423  00089A  EF51  F004         	goto	u3970
  2424  00089E                     u3971:
  2425  00089E  EF58  F004         	goto	l3432
  2426  0008A2                     u3970:
  2427  0008A2                     
  2428                           ; BSR set to: 0
  2429  0008A2  A458               	btfss	_flags^0,2,c
  2430  0008A4  EF56  F004         	goto	u3981
  2431  0008A8  EF58  F004         	goto	u3980
  2432  0008AC                     u3981:
  2433  0008AC  EF72  F004         	goto	l3444
  2434  0008B0                     u3980:
  2435  0008B0                     l3432:
  2436                           
  2437                           ; BSR set to: 0
  2438                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 337:         dbuf
      +                          [n] = sign ? '-' : '+';
  2439  0008B0  517A               	movf	efgtoa@sign& (0+255),w,b
  2440  0008B2  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2441  0008B4  A4D8               	btfss	status,2,c
  2442  0008B6  EF5F  F004         	goto	u3991
  2443  0008BA  EF61  F004         	goto	u3990
  2444  0008BE                     u3991:
  2445  0008BE  EF67  F004         	goto	l3436
  2446  0008C2                     u3990:
  2447  0008C2                     
  2448                           ; BSR set to: 0
  2449  0008C2  0E00               	movlw	0
  2450  0008C4  6F65               	movwf	(_efgtoa$1234+1)& (0+255),b
  2451  0008C6  0E2B               	movlw	43
  2452  0008C8  6F64               	movwf	_efgtoa$1234& (0+255),b
  2453  0008CA  EF6B  F004         	goto	l3438
  2454  0008CE                     l3436:
  2455                           
  2456                           ; BSR set to: 0
  2457  0008CE  0E00               	movlw	0
  2458  0008D0  6F65               	movwf	(_efgtoa$1234+1)& (0+255),b
  2459  0008D2  0E2D               	movlw	45
  2460  0008D4  6F64               	movwf	_efgtoa$1234& (0+255),b
  2461  0008D6                     l3438:
  2462                           
  2463                           ; BSR set to: 0
  2464  0008D6  C064  F100         	movff	_efgtoa$1234,_dbuf
  2465  0008DA                     
  2466                           ; BSR set to: 0
  2467                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 338:         ++n;
  2468  0008DA  4B92               	infsnz	efgtoa@n& (0+255),f,b
  2469  0008DC  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  2470  0008DE                     
  2471                           ; BSR set to: 0
  2472                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 339:         --w;
  2473  0008DE  077F               	decf	efgtoa@w& (0+255),f,b
  2474  0008E0  A0D8               	btfss	status,0,c
  2475  0008E2  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  2476  0008E4                     l3444:
  2477                           
  2478                           ; BSR set to: 0
  2479                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 344:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2480  0008E4  C08C  F005         	movff	efgtoa@g,___fpclassifyf@x
  2481  0008E8  C08D  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2482  0008EC  C08E  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2483  0008F0  C08F  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2484  0008F4  ECB9  F017         	call	___fpclassifyf	;wreg free
  2485  0008F8  0405               	decf	?___fpclassifyf^0,w,c
  2486  0008FA  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  2487  0008FC  A4D8               	btfss	status,2,c
  2488  0008FE  EF83  F004         	goto	u4001
  2489  000902  EF85  F004         	goto	u4000
  2490  000906                     u4001:
  2491  000906  EFDC  F004         	goto	l3462
  2492  00090A                     u4000:
  2493  00090A  0EBF               	movlw	191
  2494  00090C  6E3F               	movwf	??_efgtoa^0,c
  2495  00090E  0EFF               	movlw	255
  2496  000910  6E40               	movwf	(??_efgtoa+1)^0,c
  2497  000912  503E               	movf	efgtoa@c^0,w,c
  2498  000914  6E41               	movwf	(??_efgtoa+2)^0,c
  2499  000916  6A42               	clrf	(??_efgtoa+3)^0,c
  2500  000918  503F               	movf	??_efgtoa^0,w,c
  2501  00091A  2641               	addwf	(??_efgtoa+2)^0,f,c
  2502  00091C  5040               	movf	(??_efgtoa+1)^0,w,c
  2503  00091E  2242               	addwfc	(??_efgtoa+3)^0,f,c
  2504  000920  5042               	movf	(??_efgtoa+3)^0,w,c
  2505  000922  E10A               	bnz	u4010
  2506  000924  0E1A               	movlw	26
  2507  000926  5C41               	subwf	(??_efgtoa+2)^0,w,c
  2508  000928  A0D8               	btfss	status,0,c
  2509  00092A  EF99  F004         	goto	u4011
  2510  00092E  EF9C  F004         	goto	u4010
  2511  000932                     u4011:
  2512  000932  0E01               	movlw	1
  2513  000934  EF9D  F004         	goto	u4020
  2514  000938                     u4010:
  2515  000938  0E00               	movlw	0
  2516  00093A                     u4020:
  2517  00093A  0100               	movlb	0	; () banked
  2518  00093C  6F66               	movwf	_efgtoa$1235& (0+255),b
  2519  00093E  6B67               	clrf	(_efgtoa$1235+1)& (0+255),b
  2520  000940                     
  2521                           ; BSR set to: 0
  2522  000940  5166               	movf	_efgtoa$1235& (0+255),w,b
  2523  000942  1167               	iorwf	(_efgtoa$1235+1)& (0+255),w,b
  2524  000944  B4D8               	btfsc	status,2,c
  2525  000946  EFA7  F004         	goto	u4031
  2526  00094A  EFA9  F004         	goto	u4030
  2527  00094E                     u4031:
  2528  00094E  EFB7  F004         	goto	l3454
  2529  000952                     u4030:
  2530  000952                     
  2531                           ; BSR set to: 0
  2532                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 345:             
      +                          strcpy(&dbuf[n], "INF");
  2533  000952  0E00               	movlw	low _dbuf
  2534  000954  2592               	addwf	efgtoa@n& (0+255),w,b
  2535  000956  6E05               	movwf	strcpy@dest^0,c
  2536  000958  0E01               	movlw	high _dbuf
  2537  00095A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2538  00095C  6E06               	movwf	(strcpy@dest+1)^0,c
  2539  00095E  0E15               	movlw	low STR_5
  2540  000960  6E07               	movwf	strcpy@src^0,c
  2541  000962  0E08               	movlw	high STR_5
  2542  000964  6E08               	movwf	(strcpy@src+1)^0,c
  2543  000966  EC7E  F01B         	call	_strcpy	;wreg free
  2544                           
  2545                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 346:         } el
      +                          se {
  2546  00096A  EFC3  F004         	goto	l3456
  2547  00096E                     l3454:
  2548                           
  2549                           ; BSR set to: 0
  2550                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 347:             
      +                          strcpy(&dbuf[n], "inf");
  2551  00096E  0E00               	movlw	low _dbuf
  2552  000970  2592               	addwf	efgtoa@n& (0+255),w,b
  2553  000972  6E05               	movwf	strcpy@dest^0,c
  2554  000974  0E01               	movlw	high _dbuf
  2555  000976  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2556  000978  6E06               	movwf	(strcpy@dest+1)^0,c
  2557  00097A  0E1D               	movlw	low STR_6
  2558  00097C  6E07               	movwf	strcpy@src^0,c
  2559  00097E  0E08               	movlw	high STR_6
  2560  000980  6E08               	movwf	(strcpy@src+1)^0,c
  2561  000982  EC7E  F01B         	call	_strcpy	;wreg free
  2562  000986                     l3456:
  2563                           
  2564                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 349:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2565  000986  0100               	movlb	0	; () banked
  2566  000988  0EFD               	movlw	253
  2567  00098A  277F               	addwf	efgtoa@w& (0+255),f,b
  2568  00098C  0EFF               	movlw	255
  2569  00098E  2380               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2570  000990                     l3458:
  2571                           
  2572                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 350:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2573  000990  C038  F015         	movff	efgtoa@fp,pad@fp
  2574  000994  C039  F016         	movff	efgtoa@fp+1,pad@fp+1
  2575  000998  0E00               	movlw	low _dbuf
  2576  00099A  6E17               	movwf	pad@buf^0,c
  2577  00099C  0E01               	movlw	high _dbuf
  2578  00099E  6E18               	movwf	(pad@buf+1)^0,c
  2579  0009A0  C07F  F019         	movff	efgtoa@w,pad@p
  2580  0009A4  C080  F01A         	movff	efgtoa@w+1,pad@p+1
  2581  0009A8  EC6A  F019         	call	_pad	;wreg free
  2582  0009AC  C015  F038         	movff	?_pad,?_efgtoa
  2583  0009B0  C016  F039         	movff	?_pad+1,?_efgtoa+1
  2584  0009B4  EFED  F009         	goto	l874
  2585  0009B8                     l3462:
  2586                           
  2587                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 353:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2588  0009B8  C08C  F005         	movff	efgtoa@g,___fpclassifyf@x
  2589  0009BC  C08D  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2590  0009C0  C08E  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2591  0009C4  C08F  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2592  0009C8  ECB9  F017         	call	___fpclassifyf	;wreg free
  2593  0009CC  5005               	movf	?___fpclassifyf^0,w,c
  2594  0009CE  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  2595  0009D0  A4D8               	btfss	status,2,c
  2596  0009D2  EFED  F004         	goto	u4041
  2597  0009D6  EFEF  F004         	goto	u4040
  2598  0009DA                     u4041:
  2599  0009DA  EF2F  F005         	goto	l3480
  2600  0009DE                     u4040:
  2601  0009DE  0EBF               	movlw	191
  2602  0009E0  6E3F               	movwf	??_efgtoa^0,c
  2603  0009E2  0EFF               	movlw	255
  2604  0009E4  6E40               	movwf	(??_efgtoa+1)^0,c
  2605  0009E6  503E               	movf	efgtoa@c^0,w,c
  2606  0009E8  6E41               	movwf	(??_efgtoa+2)^0,c
  2607  0009EA  6A42               	clrf	(??_efgtoa+3)^0,c
  2608  0009EC  503F               	movf	??_efgtoa^0,w,c
  2609  0009EE  2641               	addwf	(??_efgtoa+2)^0,f,c
  2610  0009F0  5040               	movf	(??_efgtoa+1)^0,w,c
  2611  0009F2  2242               	addwfc	(??_efgtoa+3)^0,f,c
  2612  0009F4  5042               	movf	(??_efgtoa+3)^0,w,c
  2613  0009F6  E10A               	bnz	u4050
  2614  0009F8  0E1A               	movlw	26
  2615  0009FA  5C41               	subwf	(??_efgtoa+2)^0,w,c
  2616  0009FC  A0D8               	btfss	status,0,c
  2617  0009FE  EF03  F005         	goto	u4051
  2618  000A02  EF06  F005         	goto	u4050
  2619  000A06                     u4051:
  2620  000A06  0E01               	movlw	1
  2621  000A08  EF07  F005         	goto	u4060
  2622  000A0C                     u4050:
  2623  000A0C  0E00               	movlw	0
  2624  000A0E                     u4060:
  2625  000A0E  0100               	movlb	0	; () banked
  2626  000A10  6F68               	movwf	_efgtoa$1240& (0+255),b
  2627  000A12  6B69               	clrf	(_efgtoa$1240+1)& (0+255),b
  2628  000A14                     
  2629                           ; BSR set to: 0
  2630  000A14  5168               	movf	_efgtoa$1240& (0+255),w,b
  2631  000A16  1169               	iorwf	(_efgtoa$1240+1)& (0+255),w,b
  2632  000A18  B4D8               	btfsc	status,2,c
  2633  000A1A  EF11  F005         	goto	u4071
  2634  000A1E  EF13  F005         	goto	u4070
  2635  000A22                     u4071:
  2636  000A22  EF21  F005         	goto	l3472
  2637  000A26                     u4070:
  2638  000A26                     
  2639                           ; BSR set to: 0
  2640                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 354:             
      +                          strcpy(&dbuf[n], "NAN");
  2641  000A26  0E00               	movlw	low _dbuf
  2642  000A28  2592               	addwf	efgtoa@n& (0+255),w,b
  2643  000A2A  6E05               	movwf	strcpy@dest^0,c
  2644  000A2C  0E01               	movlw	high _dbuf
  2645  000A2E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2646  000A30  6E06               	movwf	(strcpy@dest+1)^0,c
  2647  000A32  0E19               	movlw	low STR_9
  2648  000A34  6E07               	movwf	strcpy@src^0,c
  2649  000A36  0E08               	movlw	high STR_9
  2650  000A38  6E08               	movwf	(strcpy@src+1)^0,c
  2651  000A3A  EC7E  F01B         	call	_strcpy	;wreg free
  2652                           
  2653                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 355:         } el
      +                          se {
  2654  000A3E  EFC3  F004         	goto	l3456
  2655  000A42                     l3472:
  2656                           
  2657                           ; BSR set to: 0
  2658                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 356:             
      +                          strcpy(&dbuf[n], "nan");
  2659  000A42  0E00               	movlw	low _dbuf
  2660  000A44  2592               	addwf	efgtoa@n& (0+255),w,b
  2661  000A46  6E05               	movwf	strcpy@dest^0,c
  2662  000A48  0E01               	movlw	high _dbuf
  2663  000A4A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2664  000A4C  6E06               	movwf	(strcpy@dest+1)^0,c
  2665  000A4E  0E21               	movlw	low STR_10
  2666  000A50  6E07               	movwf	strcpy@src^0,c
  2667  000A52  0E08               	movlw	high STR_10
  2668  000A54  6E08               	movwf	(strcpy@src+1)^0,c
  2669  000A56  EC7E  F01B         	call	_strcpy	;wreg free
  2670  000A5A  EFC3  F004         	goto	l3456
  2671  000A5E                     l3480:
  2672                           
  2673                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 363:     u = 1.0;
  2674  000A5E  0E00               	movlw	0
  2675  000A60  0100               	movlb	0	; () banked
  2676  000A62  6F94               	movwf	efgtoa@u& (0+255),b
  2677  000A64  0E00               	movlw	0
  2678  000A66  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  2679  000A68  0E80               	movlw	128
  2680  000A6A  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  2681  000A6C  0E3F               	movlw	63
  2682  000A6E  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  2683                           
  2684                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 364:     e = 0;
  2685  000A70  0E00               	movlw	0
  2686  000A72  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  2687  000A74  0E00               	movlw	0
  2688  000A76  6F90               	movwf	efgtoa@e& (0+255),b
  2689  000A78                     
  2690                           ; BSR set to: 0
  2691                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 365:     if (!(g 
      +                          == 0.0)) {
  2692  000A78  C08C  F005         	movff	efgtoa@g,___fleq@ff1
  2693  000A7C  C08D  F006         	movff	efgtoa@g+1,___fleq@ff1+1
  2694  000A80  C08E  F007         	movff	efgtoa@g+2,___fleq@ff1+2
  2695  000A84  C08F  F008         	movff	efgtoa@g+3,___fleq@ff1+3
  2696  000A88  0E00               	movlw	0
  2697  000A8A  6E09               	movwf	___fleq@ff2^0,c
  2698  000A8C  0E00               	movlw	0
  2699  000A8E  6E0A               	movwf	(___fleq@ff2+1)^0,c
  2700  000A90  0E00               	movlw	0
  2701  000A92  6E0B               	movwf	(___fleq@ff2+2)^0,c
  2702  000A94  0E00               	movlw	0
  2703  000A96  6E0C               	movwf	(___fleq@ff2+3)^0,c
  2704  000A98  EC23  F01A         	call	___fleq	;wreg free
  2705  000A9C  B0D8               	btfsc	status,0,c
  2706  000A9E  EF53  F005         	goto	u4081
  2707  000AA2  EF55  F005         	goto	u4080
  2708  000AA6                     u4081:
  2709  000AA6  EFD8  F005         	goto	l3498
  2710  000AAA                     u4080:
  2711  000AAA  EF74  F005         	goto	l3490
  2712  000AAE                     l3486:
  2713                           
  2714                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 367:             
      +                          u = u*10.0;
  2715  000AAE  C094  F013         	movff	efgtoa@u,___flmul@b
  2716  000AB2  C095  F014         	movff	efgtoa@u+1,___flmul@b+1
  2717  000AB6  C096  F015         	movff	efgtoa@u+2,___flmul@b+2
  2718  000ABA  C097  F016         	movff	efgtoa@u+3,___flmul@b+3
  2719  000ABE  0E00               	movlw	0
  2720  000AC0  6E17               	movwf	___flmul@a^0,c
  2721  000AC2  0E00               	movlw	0
  2722  000AC4  6E18               	movwf	(___flmul@a+1)^0,c
  2723  000AC6  0E20               	movlw	32
  2724  000AC8  6E19               	movwf	(___flmul@a+2)^0,c
  2725  000ACA  0E41               	movlw	65
  2726  000ACC  6E1A               	movwf	(___flmul@a+3)^0,c
  2727  000ACE  EC82  F00E         	call	___flmul	;wreg free
  2728  000AD2  C013  F094         	movff	?___flmul,efgtoa@u
  2729  000AD6  C014  F095         	movff	?___flmul+1,efgtoa@u+1
  2730  000ADA  C015  F096         	movff	?___flmul+2,efgtoa@u+2
  2731  000ADE  C016  F097         	movff	?___flmul+3,efgtoa@u+3
  2732  000AE2                     
  2733                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 368:             
      +                          ++e;
  2734  000AE2  0100               	movlb	0	; () banked
  2735  000AE4  4B90               	infsnz	efgtoa@e& (0+255),f,b
  2736  000AE6  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  2737  000AE8                     l3490:
  2738                           
  2739                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 366:         whil
      +                          e (!(g < (u*10.0))) {
  2740  000AE8  C08C  F02C         	movff	efgtoa@g,___flge@ff1
  2741  000AEC  C08D  F02D         	movff	efgtoa@g+1,___flge@ff1+1
  2742  000AF0  C08E  F02E         	movff	efgtoa@g+2,___flge@ff1+2
  2743  000AF4  C08F  F02F         	movff	efgtoa@g+3,___flge@ff1+3
  2744  000AF8  0E00               	movlw	0
  2745  000AFA  6E17               	movwf	___flmul@a^0,c
  2746  000AFC  0E00               	movlw	0
  2747  000AFE  6E18               	movwf	(___flmul@a+1)^0,c
  2748  000B00  0E20               	movlw	32
  2749  000B02  6E19               	movwf	(___flmul@a+2)^0,c
  2750  000B04  0E41               	movlw	65
  2751  000B06  6E1A               	movwf	(___flmul@a+3)^0,c
  2752  000B08  C094  F013         	movff	efgtoa@u,___flmul@b
  2753  000B0C  C095  F014         	movff	efgtoa@u+1,___flmul@b+1
  2754  000B10  C096  F015         	movff	efgtoa@u+2,___flmul@b+2
  2755  000B14  C097  F016         	movff	efgtoa@u+3,___flmul@b+3
  2756  000B18  EC82  F00E         	call	___flmul	;wreg free
  2757  000B1C  C013  F030         	movff	?___flmul,___flge@ff2
  2758  000B20  C014  F031         	movff	?___flmul+1,___flge@ff2+1
  2759  000B24  C015  F032         	movff	?___flmul+2,___flge@ff2+2
  2760  000B28  C016  F033         	movff	?___flmul+3,___flge@ff2+3
  2761  000B2C  EC37  F017         	call	___flge	;wreg free
  2762  000B30  B0D8               	btfsc	status,0,c
  2763  000B32  EF9D  F005         	goto	u4091
  2764  000B36  EF9F  F005         	goto	u4090
  2765  000B3A                     u4091:
  2766  000B3A  EF57  F005         	goto	l3486
  2767  000B3E                     u4090:
  2768  000B3E  EFBF  F005         	goto	l3496
  2769  000B42                     l3492:
  2770                           
  2771                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 371:             
      +                          u = u/10.0;
  2772  000B42  C094  F005         	movff	efgtoa@u,___fldiv@b
  2773  000B46  C095  F006         	movff	efgtoa@u+1,___fldiv@b+1
  2774  000B4A  C096  F007         	movff	efgtoa@u+2,___fldiv@b+2
  2775  000B4E  C097  F008         	movff	efgtoa@u+3,___fldiv@b+3
  2776  000B52  0E00               	movlw	0
  2777  000B54  6E09               	movwf	___fldiv@a^0,c
  2778  000B56  0E00               	movlw	0
  2779  000B58  6E0A               	movwf	(___fldiv@a+1)^0,c
  2780  000B5A  0E20               	movlw	32
  2781  000B5C  6E0B               	movwf	(___fldiv@a+2)^0,c
  2782  000B5E  0E41               	movlw	65
  2783  000B60  6E0C               	movwf	(___fldiv@a+3)^0,c
  2784  000B62  EC97  F010         	call	___fldiv	;wreg free
  2785  000B66  C005  F094         	movff	?___fldiv,efgtoa@u
  2786  000B6A  C006  F095         	movff	?___fldiv+1,efgtoa@u+1
  2787  000B6E  C007  F096         	movff	?___fldiv+2,efgtoa@u+2
  2788  000B72  C008  F097         	movff	?___fldiv+3,efgtoa@u+3
  2789  000B76                     
  2790                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 372:             
      +                          --e;
  2791  000B76  0100               	movlb	0	; () banked
  2792  000B78  0790               	decf	efgtoa@e& (0+255),f,b
  2793  000B7A  A0D8               	btfss	status,0,c
  2794  000B7C  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  2795  000B7E                     l3496:
  2796                           
  2797                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 370:         whil
      +                          e (g < u) {
  2798  000B7E  C08C  F02C         	movff	efgtoa@g,___flge@ff1
  2799  000B82  C08D  F02D         	movff	efgtoa@g+1,___flge@ff1+1
  2800  000B86  C08E  F02E         	movff	efgtoa@g+2,___flge@ff1+2
  2801  000B8A  C08F  F02F         	movff	efgtoa@g+3,___flge@ff1+3
  2802  000B8E  C094  F030         	movff	efgtoa@u,___flge@ff2
  2803  000B92  C095  F031         	movff	efgtoa@u+1,___flge@ff2+1
  2804  000B96  C096  F032         	movff	efgtoa@u+2,___flge@ff2+2
  2805  000B9A  C097  F033         	movff	efgtoa@u+3,___flge@ff2+3
  2806  000B9E  EC37  F017         	call	___flge	;wreg free
  2807  000BA2  A0D8               	btfss	status,0,c
  2808  000BA4  EFD6  F005         	goto	u4101
  2809  000BA8  EFD8  F005         	goto	u4100
  2810  000BAC                     u4101:
  2811  000BAC  EFA1  F005         	goto	l3492
  2812  000BB0                     u4100:
  2813  000BB0                     l3498:
  2814                           
  2815                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 377:     mode = t
      +                          olower((int)c);
  2816  000BB0  C03E  F00B         	movff	efgtoa@c,tolower@c
  2817  000BB4  6A0C               	clrf	(tolower@c+1)^0,c
  2818  000BB6  EC4E  F01B         	call	_tolower	;wreg free
  2819  000BBA  500B               	movf	?_tolower^0,w,c
  2820  000BBC  0100               	movlb	0	; () banked
  2821  000BBE  6F81               	movwf	efgtoa@mode& (0+255),b
  2822  000BC0                     
  2823                           ; BSR set to: 0
  2824                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 378:     nmode = 
      +                          mode;
  2825  000BC0  C081  F07E         	movff	efgtoa@mode,efgtoa@nmode
  2826  000BC4                     
  2827                           ; BSR set to: 0
  2828                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 379:     if (mode
      +                           == 'g') {
  2829  000BC4  0E67               	movlw	103
  2830  000BC6  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2831  000BC8  A4D8               	btfss	status,2,c
  2832  000BCA  EFE9  F005         	goto	u4111
  2833  000BCE  EFEB  F005         	goto	u4110
  2834  000BD2                     u4111:
  2835  000BD2  EF11  F006         	goto	l3512
  2836  000BD6                     u4110:
  2837  000BD6                     
  2838                           ; BSR set to: 0
  2839                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 380:   if (prec =
      +                          = 0) {
  2840  000BD6  5056               	movf	_prec^0,w,c
  2841  000BD8  1057               	iorwf	(_prec+1)^0,w,c
  2842  000BDA  A4D8               	btfss	status,2,c
  2843  000BDC  EFF2  F005         	goto	u4121
  2844  000BE0  EFF4  F005         	goto	u4120
  2845  000BE4                     u4121:
  2846  000BE4  EFF8  F005         	goto	l3508
  2847  000BE8                     u4120:
  2848  000BE8                     
  2849                           ; BSR set to: 0
  2850                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 381:    prec = 1;
  2851  000BE8  0E00               	movlw	0
  2852  000BEA  6E57               	movwf	(_prec+1)^0,c
  2853  000BEC  0E01               	movlw	1
  2854  000BEE  6E56               	movwf	_prec^0,c
  2855  000BF0                     l3508:
  2856                           
  2857                           ; BSR set to: 0
  2858                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 383:         p = 
      +                          (0 < prec) ? prec : 6;
  2859  000BF0  BE57               	btfsc	(_prec+1)^0,7,c
  2860  000BF2  EF05  F006         	goto	u4130
  2861  000BF6  5057               	movf	(_prec+1)^0,w,c
  2862  000BF8  E106               	bnz	u4131
  2863  000BFA  0456               	decf	_prec^0,w,c
  2864  000BFC  B0D8               	btfsc	status,0,c
  2865  000BFE  EF03  F006         	goto	u4131
  2866  000C02  EF05  F006         	goto	u4130
  2867  000C06                     u4131:
  2868  000C06  EF0B  F006         	goto	l892
  2869  000C0A                     u4130:
  2870  000C0A                     l3510:
  2871                           
  2872                           ; BSR set to: 0
  2873  000C0A  0E00               	movlw	0
  2874  000C0C  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  2875  000C0E  0E06               	movlw	6
  2876  000C10  6F7C               	movwf	efgtoa@p& (0+255),b
  2877  000C12  EF1A  F006         	goto	l3518
  2878  000C16                     l892:
  2879                           
  2880                           ; BSR set to: 0
  2881  000C16  C056  F07C         	movff	_prec,efgtoa@p
  2882  000C1A  C057  F07D         	movff	_prec+1,efgtoa@p+1
  2883  000C1E  EF1A  F006         	goto	l3518
  2884  000C22                     l3512:
  2885                           
  2886                           ; BSR set to: 0
  2887                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 385:         p = 
      +                          (prec < 0) ? 6 : prec;
  2888  000C22  BE57               	btfsc	(_prec+1)^0,7,c
  2889  000C24  EF16  F006         	goto	u4141
  2890  000C28  EF18  F006         	goto	u4140
  2891  000C2C                     u4141:
  2892  000C2C  EF05  F006         	goto	l3510
  2893  000C30                     u4140:
  2894  000C30  EF0B  F006         	goto	l892
  2895  000C34                     l3518:
  2896                           
  2897                           ; BSR set to: 0
  2898                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 389:     if (mode
      +                           == 'g') {
  2899  000C34  0E67               	movlw	103
  2900  000C36  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2901  000C38  A4D8               	btfss	status,2,c
  2902  000C3A  EF21  F006         	goto	u4151
  2903  000C3E  EF23  F006         	goto	u4150
  2904  000C42                     u4151:
  2905  000C42  EF52  F006         	goto	l3528
  2906  000C46                     u4150:
  2907  000C46                     
  2908                           ; BSR set to: 0
  2909                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 390:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  2910  000C46  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  2911  000C48  EF31  F006         	goto	u4160
  2912  000C4C  0EFC               	movlw	252
  2913  000C4E  5D90               	subwf	efgtoa@e& (0+255),w,b
  2914  000C50  0EFF               	movlw	255
  2915  000C52  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  2916  000C54  A0D8               	btfss	status,0,c
  2917  000C56  EF2F  F006         	goto	u4161
  2918  000C5A  EF31  F006         	goto	u4160
  2919  000C5E                     u4161:
  2920  000C5E  EF50  F006         	goto	l3526
  2921  000C62                     u4160:
  2922  000C62                     
  2923                           ; BSR set to: 0
  2924  000C62  0EFF               	movlw	255
  2925  000C64  6E3F               	movwf	??_efgtoa^0,c
  2926  000C66  0EFF               	movlw	255
  2927  000C68  6E40               	movwf	(??_efgtoa+1)^0,c
  2928  000C6A  C07C  F041         	movff	efgtoa@p,??_efgtoa+2
  2929  000C6E  C07D  F042         	movff	efgtoa@p+1,??_efgtoa+3
  2930  000C72  503F               	movf	??_efgtoa^0,w,c
  2931  000C74  2641               	addwf	(??_efgtoa+2)^0,f,c
  2932  000C76  5040               	movf	(??_efgtoa+1)^0,w,c
  2933  000C78  2242               	addwfc	(??_efgtoa+3)^0,f,c
  2934  000C7A  5190               	movf	efgtoa@e& (0+255),w,b
  2935  000C7C  5C41               	subwf	(??_efgtoa+2)^0,w,c
  2936  000C7E  5042               	movf	(??_efgtoa+3)^0,w,c
  2937  000C80  0A80               	xorlw	128
  2938  000C82  6E43               	movwf	(??_efgtoa+4)^0,c
  2939  000C84  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  2940  000C86  0A80               	xorlw	128
  2941  000C88  5843               	subwfb	(??_efgtoa+4)^0,w,c
  2942  000C8A  A0D8               	btfss	status,0,c
  2943  000C8C  EF4A  F006         	goto	u4171
  2944  000C90  EF4C  F006         	goto	u4170
  2945  000C94                     u4171:
  2946  000C94  EF50  F006         	goto	l3526
  2947  000C98                     u4170:
  2948  000C98                     
  2949                           ; BSR set to: 0
  2950                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 391:             
      +                          nmode = 'f';
  2951  000C98  0E66               	movlw	102
  2952  000C9A  6F7E               	movwf	efgtoa@nmode& (0+255),b
  2953                           
  2954                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 392:         } el
      +                          se {
  2955  000C9C  EF52  F006         	goto	l3528
  2956  000CA0                     l3526:
  2957                           
  2958                           ; BSR set to: 0
  2959                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 393:             
      +                          nmode = 'e';
  2960  000CA0  0E65               	movlw	101
  2961  000CA2  6F7E               	movwf	efgtoa@nmode& (0+255),b
  2962  000CA4                     l3528:
  2963                           
  2964                           ; BSR set to: 0
  2965                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 398:     m = p;
  2966  000CA4  C07C  F074         	movff	efgtoa@p,efgtoa@m
  2967  000CA8  C07D  F075         	movff	efgtoa@p+1,efgtoa@m+1
  2968  000CAC                     
  2969                           ; BSR set to: 0
  2970                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 399:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  2971  000CAC  0E67               	movlw	103
  2972  000CAE  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2973  000CB0  A4D8               	btfss	status,2,c
  2974  000CB2  EF5D  F006         	goto	u4181
  2975  000CB6  EF5F  F006         	goto	u4180
  2976  000CBA                     u4181:
  2977  000CBA  EF6F  F006         	goto	l3536
  2978  000CBE                     u4180:
  2979  000CBE                     
  2980                           ; BSR set to: 0
  2981  000CBE  0E66               	movlw	102
  2982  000CC0  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  2983  000CC2  A4D8               	btfss	status,2,c
  2984  000CC4  EF66  F006         	goto	u4191
  2985  000CC8  EF68  F006         	goto	u4190
  2986  000CCC                     u4191:
  2987  000CCC  EF71  F006         	goto	l3538
  2988  000CD0                     u4190:
  2989  000CD0                     
  2990                           ; BSR set to: 0
  2991  000CD0  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2992  000CD2  EF6F  F006         	goto	u4200
  2993  000CD6  EF6D  F006         	goto	u4201
  2994  000CDA                     u4201:
  2995  000CDA  EF71  F006         	goto	l3538
  2996  000CDE                     u4200:
  2997  000CDE                     l3536:
  2998                           
  2999                           ; BSR set to: 0
  3000                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 400:         ++m;
  3001  000CDE  4B74               	infsnz	efgtoa@m& (0+255),f,b
  3002  000CE0  2B75               	incf	(efgtoa@m+1)& (0+255),f,b
  3003  000CE2                     l3538:
  3004                           
  3005                           ; BSR set to: 0
  3006                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 404:     if (nmod
      +                          e == 'f') {
  3007  000CE2  0E66               	movlw	102
  3008  000CE4  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3009  000CE6  A4D8               	btfss	status,2,c
  3010  000CE8  EF78  F006         	goto	u4211
  3011  000CEC  EF7A  F006         	goto	u4210
  3012  000CF0                     u4211:
  3013  000CF0  EF9A  F006         	goto	l3548
  3014  000CF4                     u4210:
  3015  000CF4                     
  3016                           ; BSR set to: 0
  3017                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 405:         if (
      +                          e < 0) {
  3018  000CF4  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3019  000CF6  EF81  F006         	goto	u4220
  3020  000CFA  EF7F  F006         	goto	u4221
  3021  000CFE                     u4221:
  3022  000CFE  EF8D  F006         	goto	l3544
  3023  000D02                     u4220:
  3024  000D02                     
  3025                           ; BSR set to: 0
  3026                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 406:             
      +                          u = 1.0;
  3027  000D02  0E00               	movlw	0
  3028  000D04  6F94               	movwf	efgtoa@u& (0+255),b
  3029  000D06  0E00               	movlw	0
  3030  000D08  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  3031  000D0A  0E80               	movlw	128
  3032  000D0C  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  3033  000D0E  0E3F               	movlw	63
  3034  000D10  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  3035                           
  3036                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 407:             
      +                          e = 0;
  3037  000D12  0E00               	movlw	0
  3038  000D14  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  3039  000D16  0E00               	movlw	0
  3040  000D18  6F90               	movwf	efgtoa@e& (0+255),b
  3041  000D1A                     l3544:
  3042                           
  3043                           ; BSR set to: 0
  3044                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 409:         if (
      +                          !(mode == 'g')) {
  3045  000D1A  0E67               	movlw	103
  3046  000D1C  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3047  000D1E  B4D8               	btfsc	status,2,c
  3048  000D20  EF94  F006         	goto	u4231
  3049  000D24  EF96  F006         	goto	u4230
  3050  000D28                     u4231:
  3051  000D28  EF9A  F006         	goto	l3548
  3052  000D2C                     u4230:
  3053  000D2C                     
  3054                           ; BSR set to: 0
  3055                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 410:             
      +                          m += e;
  3056  000D2C  5190               	movf	efgtoa@e& (0+255),w,b
  3057  000D2E  2774               	addwf	efgtoa@m& (0+255),f,b
  3058  000D30  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  3059  000D32  2375               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3060  000D34                     l3548:
  3061                           
  3062                           ; BSR set to: 0
  3063                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 415:     i = 0;
  3064  000D34  0E00               	movlw	0
  3065  000D36  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3066  000D38  0E00               	movlw	0
  3067  000D3A  6F8A               	movwf	efgtoa@i& (0+255),b
  3068  000D3C                     
  3069                           ; BSR set to: 0
  3070                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 416:     h = g;
  3071  000D3C  C08C  F082         	movff	efgtoa@g,efgtoa@h
  3072  000D40  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  3073  000D44  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  3074  000D48  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  3075  000D4C                     
  3076                           ; BSR set to: 0
  3077                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 417:     ou = u;
  3078  000D4C  C094  F060         	movff	efgtoa@u,efgtoa@ou
  3079  000D50  C095  F061         	movff	efgtoa@u+1,efgtoa@ou+1
  3080  000D54  C096  F062         	movff	efgtoa@u+2,efgtoa@ou+2
  3081  000D58  C097  F063         	movff	efgtoa@u+3,efgtoa@ou+3
  3082                           
  3083                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  3084  000D5C  EF2B  F007         	goto	l3562
  3085  000D60                     l3554:
  3086                           
  3087                           ; BSR set to: 0
  3088                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 419:         l = 
      +                          floorf(h/u);
  3089  000D60  C082  F005         	movff	efgtoa@h,___fldiv@b
  3090  000D64  C083  F006         	movff	efgtoa@h+1,___fldiv@b+1
  3091  000D68  C084  F007         	movff	efgtoa@h+2,___fldiv@b+2
  3092  000D6C  C085  F008         	movff	efgtoa@h+3,___fldiv@b+3
  3093  000D70  C094  F009         	movff	efgtoa@u,___fldiv@a
  3094  000D74  C095  F00A         	movff	efgtoa@u+1,___fldiv@a+1
  3095  000D78  C096  F00B         	movff	efgtoa@u+2,___fldiv@a+2
  3096  000D7C  C097  F00C         	movff	efgtoa@u+3,___fldiv@a+3
  3097  000D80  EC97  F010         	call	___fldiv	;wreg free
  3098  000D84  C005  F01E         	movff	?___fldiv,floorf@x
  3099  000D88  C006  F01F         	movff	?___fldiv+1,floorf@x+1
  3100  000D8C  C007  F020         	movff	?___fldiv+2,floorf@x+2
  3101  000D90  C008  F021         	movff	?___fldiv+3,floorf@x+3
  3102  000D94  EC09  F014         	call	_floorf	;wreg free
  3103  000D98  C01E  F086         	movff	?_floorf,efgtoa@l
  3104  000D9C  C01F  F087         	movff	?_floorf+1,efgtoa@l+1
  3105  000DA0  C020  F088         	movff	?_floorf+2,efgtoa@l+2
  3106  000DA4  C021  F089         	movff	?_floorf+3,efgtoa@l+3
  3107                           
  3108                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 420:         d = 
      +                          (int)l;
  3109  000DA8  C086  F005         	movff	efgtoa@l,___fltol@f1
  3110  000DAC  C087  F006         	movff	efgtoa@l+1,___fltol@f1+1
  3111  000DB0  C088  F007         	movff	efgtoa@l+2,___fltol@f1+2
  3112  000DB4  C089  F008         	movff	efgtoa@l+3,___fltol@f1+3
  3113  000DB8  ECB4  F016         	call	___fltol	;wreg free
  3114  000DBC  C005  F078         	movff	?___fltol,efgtoa@d
  3115  000DC0  C006  F079         	movff	?___fltol+1,efgtoa@d+1
  3116  000DC4                     
  3117                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 421:         h -=
      +                           l*u;
  3118  000DC4  C082  F02C         	movff	efgtoa@h,___flsub@b
  3119  000DC8  C083  F02D         	movff	efgtoa@h+1,___flsub@b+1
  3120  000DCC  C084  F02E         	movff	efgtoa@h+2,___flsub@b+2
  3121  000DD0  C085  F02F         	movff	efgtoa@h+3,___flsub@b+3
  3122  000DD4  C094  F017         	movff	efgtoa@u,___flmul@a
  3123  000DD8  C095  F018         	movff	efgtoa@u+1,___flmul@a+1
  3124  000DDC  C096  F019         	movff	efgtoa@u+2,___flmul@a+2
  3125  000DE0  C097  F01A         	movff	efgtoa@u+3,___flmul@a+3
  3126  000DE4  C086  F013         	movff	efgtoa@l,___flmul@b
  3127  000DE8  C087  F014         	movff	efgtoa@l+1,___flmul@b+1
  3128  000DEC  C088  F015         	movff	efgtoa@l+2,___flmul@b+2
  3129  000DF0  C089  F016         	movff	efgtoa@l+3,___flmul@b+3
  3130  000DF4  EC82  F00E         	call	___flmul	;wreg free
  3131  000DF8  C013  F030         	movff	?___flmul,___flsub@a
  3132  000DFC  C014  F031         	movff	?___flmul+1,___flsub@a+1
  3133  000E00  C015  F032         	movff	?___flmul+2,___flsub@a+2
  3134  000E04  C016  F033         	movff	?___flmul+3,___flsub@a+3
  3135  000E08  ECFE  F01B         	call	___flsub	;wreg free
  3136  000E0C  C02C  F082         	movff	?___flsub,efgtoa@h
  3137  000E10  C02D  F083         	movff	?___flsub+1,efgtoa@h+1
  3138  000E14  C02E  F084         	movff	?___flsub+2,efgtoa@h+2
  3139  000E18  C02F  F085         	movff	?___flsub+3,efgtoa@h+3
  3140  000E1C                     
  3141                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 422:         u = 
      +                          u/10.0;
  3142  000E1C  C094  F005         	movff	efgtoa@u,___fldiv@b
  3143  000E20  C095  F006         	movff	efgtoa@u+1,___fldiv@b+1
  3144  000E24  C096  F007         	movff	efgtoa@u+2,___fldiv@b+2
  3145  000E28  C097  F008         	movff	efgtoa@u+3,___fldiv@b+3
  3146  000E2C  0E00               	movlw	0
  3147  000E2E  6E09               	movwf	___fldiv@a^0,c
  3148  000E30  0E00               	movlw	0
  3149  000E32  6E0A               	movwf	(___fldiv@a+1)^0,c
  3150  000E34  0E20               	movlw	32
  3151  000E36  6E0B               	movwf	(___fldiv@a+2)^0,c
  3152  000E38  0E41               	movlw	65
  3153  000E3A  6E0C               	movwf	(___fldiv@a+3)^0,c
  3154  000E3C  EC97  F010         	call	___fldiv	;wreg free
  3155  000E40  C005  F094         	movff	?___fldiv,efgtoa@u
  3156  000E44  C006  F095         	movff	?___fldiv+1,efgtoa@u+1
  3157  000E48  C007  F096         	movff	?___fldiv+2,efgtoa@u+2
  3158  000E4C  C008  F097         	movff	?___fldiv+3,efgtoa@u+3
  3159  000E50                     
  3160                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 423:         ++i;
  3161  000E50  0100               	movlb	0	; () banked
  3162  000E52  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  3163  000E54  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  3164  000E56                     l3562:
  3165                           
  3166                           ; BSR set to: 0
  3167                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  3168  000E56  5174               	movf	efgtoa@m& (0+255),w,b
  3169  000E58  5D8A               	subwf	efgtoa@i& (0+255),w,b
  3170  000E5A  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  3171  000E5C  0A80               	xorlw	128
  3172  000E5E  6E3F               	movwf	??_efgtoa^0,c
  3173  000E60  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  3174  000E62  0A80               	xorlw	128
  3175  000E64  583F               	subwfb	??_efgtoa^0,w,c
  3176  000E66  A0D8               	btfss	status,0,c
  3177  000E68  EF38  F007         	goto	u4241
  3178  000E6C  EF3A  F007         	goto	u4240
  3179  000E70                     u4241:
  3180  000E70  EFB0  F006         	goto	l3554
  3181  000E74                     u4240:
  3182  000E74                     
  3183                           ; BSR set to: 0
  3184                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 427:     l = u*5.
      +                          0;
  3185  000E74  C094  F013         	movff	efgtoa@u,___flmul@b
  3186  000E78  C095  F014         	movff	efgtoa@u+1,___flmul@b+1
  3187  000E7C  C096  F015         	movff	efgtoa@u+2,___flmul@b+2
  3188  000E80  C097  F016         	movff	efgtoa@u+3,___flmul@b+3
  3189  000E84  0E00               	movlw	0
  3190  000E86  6E17               	movwf	___flmul@a^0,c
  3191  000E88  0E00               	movlw	0
  3192  000E8A  6E18               	movwf	(___flmul@a+1)^0,c
  3193  000E8C  0EA0               	movlw	160
  3194  000E8E  6E19               	movwf	(___flmul@a+2)^0,c
  3195  000E90  0E40               	movlw	64
  3196  000E92  6E1A               	movwf	(___flmul@a+3)^0,c
  3197  000E94  EC82  F00E         	call	___flmul	;wreg free
  3198  000E98  C013  F086         	movff	?___flmul,efgtoa@l
  3199  000E9C  C014  F087         	movff	?___flmul+1,efgtoa@l+1
  3200  000EA0  C015  F088         	movff	?___flmul+2,efgtoa@l+2
  3201  000EA4  C016  F089         	movff	?___flmul+3,efgtoa@l+3
  3202  000EA8                     
  3203                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 428:     if (h < 
      +                          l) {
  3204  000EA8  C082  F02C         	movff	efgtoa@h,___flge@ff1
  3205  000EAC  C083  F02D         	movff	efgtoa@h+1,___flge@ff1+1
  3206  000EB0  C084  F02E         	movff	efgtoa@h+2,___flge@ff1+2
  3207  000EB4  C085  F02F         	movff	efgtoa@h+3,___flge@ff1+3
  3208  000EB8  C086  F030         	movff	efgtoa@l,___flge@ff2
  3209  000EBC  C087  F031         	movff	efgtoa@l+1,___flge@ff2+1
  3210  000EC0  C088  F032         	movff	efgtoa@l+2,___flge@ff2+2
  3211  000EC4  C089  F033         	movff	efgtoa@l+3,___flge@ff2+3
  3212  000EC8  EC37  F017         	call	___flge	;wreg free
  3213  000ECC  B0D8               	btfsc	status,0,c
  3214  000ECE  EF6B  F007         	goto	u4251
  3215  000ED2  EF6D  F007         	goto	u4250
  3216  000ED6                     u4251:
  3217  000ED6  EF78  F007         	goto	l3570
  3218  000EDA                     u4250:
  3219  000EDA                     
  3220                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 429:         l = 
      +                          0.0;
  3221  000EDA  0E00               	movlw	0
  3222  000EDC  0100               	movlb	0	; () banked
  3223  000EDE  6F86               	movwf	efgtoa@l& (0+255),b
  3224  000EE0  0E00               	movlw	0
  3225  000EE2  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3226  000EE4  0E00               	movlw	0
  3227  000EE6  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3228  000EE8  0E00               	movlw	0
  3229  000EEA  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3230                           
  3231                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 430:     } else {
  3232  000EEC  EFA1  F007         	goto	l3576
  3233  000EF0                     l3570:
  3234                           
  3235                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 432:         if (
      +                          (h == l) && !(d % 2)) {
  3236  000EF0  C082  F005         	movff	efgtoa@h,___fleq@ff1
  3237  000EF4  C083  F006         	movff	efgtoa@h+1,___fleq@ff1+1
  3238  000EF8  C084  F007         	movff	efgtoa@h+2,___fleq@ff1+2
  3239  000EFC  C085  F008         	movff	efgtoa@h+3,___fleq@ff1+3
  3240  000F00  C086  F009         	movff	efgtoa@l,___fleq@ff2
  3241  000F04  C087  F00A         	movff	efgtoa@l+1,___fleq@ff2+1
  3242  000F08  C088  F00B         	movff	efgtoa@l+2,___fleq@ff2+2
  3243  000F0C  C089  F00C         	movff	efgtoa@l+3,___fleq@ff2+3
  3244  000F10  EC23  F01A         	call	___fleq	;wreg free
  3245  000F14  A0D8               	btfss	status,0,c
  3246  000F16  EF8F  F007         	goto	u4261
  3247  000F1A  EF91  F007         	goto	u4260
  3248  000F1E                     u4261:
  3249  000F1E  EFA1  F007         	goto	l3576
  3250  000F22                     u4260:
  3251  000F22  0100               	movlb	0	; () banked
  3252  000F24  B178               	btfsc	efgtoa@d& (0+255),0,b
  3253  000F26  EF97  F007         	goto	u4271
  3254  000F2A  EF99  F007         	goto	u4270
  3255  000F2E                     u4271:
  3256  000F2E  EFA1  F007         	goto	l3576
  3257  000F32                     u4270:
  3258  000F32                     
  3259                           ; BSR set to: 0
  3260                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 433:             
      +                          l = 0.0;
  3261  000F32  0E00               	movlw	0
  3262  000F34  6F86               	movwf	efgtoa@l& (0+255),b
  3263  000F36  0E00               	movlw	0
  3264  000F38  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3265  000F3A  0E00               	movlw	0
  3266  000F3C  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3267  000F3E  0E00               	movlw	0
  3268  000F40  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3269  000F42                     l3576:
  3270                           
  3271                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 438:     h = g + 
      +                          l;
  3272  000F42  C08C  F005         	movff	efgtoa@g,___fladd@b
  3273  000F46  C08D  F006         	movff	efgtoa@g+1,___fladd@b+1
  3274  000F4A  C08E  F007         	movff	efgtoa@g+2,___fladd@b+2
  3275  000F4E  C08F  F008         	movff	efgtoa@g+3,___fladd@b+3
  3276  000F52  C086  F009         	movff	efgtoa@l,___fladd@a
  3277  000F56  C087  F00A         	movff	efgtoa@l+1,___fladd@a+1
  3278  000F5A  C088  F00B         	movff	efgtoa@l+2,___fladd@a+2
  3279  000F5E  C089  F00C         	movff	efgtoa@l+3,___fladd@a+3
  3280  000F62  ECEE  F009         	call	___fladd	;wreg free
  3281  000F66  C005  F082         	movff	?___fladd,efgtoa@h
  3282  000F6A  C006  F083         	movff	?___fladd+1,efgtoa@h+1
  3283  000F6E  C007  F084         	movff	?___fladd+2,efgtoa@h+2
  3284  000F72  C008  F085         	movff	?___fladd+3,efgtoa@h+3
  3285  000F76                     
  3286                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 441:     u = ou;
  3287  000F76  C060  F094         	movff	efgtoa@ou,efgtoa@u
  3288  000F7A  C061  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  3289  000F7E  C062  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  3290  000F82  C063  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  3291  000F86                     
  3292                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 442:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  3293  000F86  0E65               	movlw	101
  3294  000F88  0100               	movlb	0	; () banked
  3295  000F8A  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3296  000F8C  B4D8               	btfsc	status,2,c
  3297  000F8E  EFCB  F007         	goto	u4281
  3298  000F92  EFCD  F007         	goto	u4280
  3299  000F96                     u4281:
  3300  000F96  EFD3  F007         	goto	l3584
  3301  000F9A                     u4280:
  3302  000F9A                     
  3303                           ; BSR set to: 0
  3304  000F9A  C090  F076         	movff	efgtoa@e,efgtoa@ne
  3305  000F9E  C091  F077         	movff	efgtoa@e+1,efgtoa@ne+1
  3306  000FA2  EFD7  F007         	goto	l918
  3307  000FA6                     l3584:
  3308                           
  3309                           ; BSR set to: 0
  3310  000FA6  0E00               	movlw	0
  3311  000FA8  6F77               	movwf	(efgtoa@ne+1)& (0+255),b
  3312  000FAA  0E00               	movlw	0
  3313  000FAC  6F76               	movwf	efgtoa@ne& (0+255),b
  3314  000FAE                     l918:
  3315                           
  3316                           ; BSR set to: 0
  3317                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 443:     pp = 0;
  3318  000FAE  0E00               	movlw	0
  3319  000FB0  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  3320  000FB2  0E00               	movlw	0
  3321  000FB4  6F72               	movwf	efgtoa@pp& (0+255),b
  3322                           
  3323                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 444:     t = 0;
  3324  000FB6  0E00               	movlw	0
  3325  000FB8  6F71               	movwf	(efgtoa@t+1)& (0+255),b
  3326  000FBA  0E00               	movlw	0
  3327  000FBC  6F70               	movwf	efgtoa@t& (0+255),b
  3328                           
  3329                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 445:     i = 0;
  3330  000FBE  0E00               	movlw	0
  3331  000FC0  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3332  000FC2  0E00               	movlw	0
  3333  000FC4  6F8A               	movwf	efgtoa@i& (0+255),b
  3334                           
  3335                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3336  000FC6  EFD3  F008         	goto	l3634
  3337  000FCA                     l3586:
  3338                           
  3339                           ; BSR set to: 0
  3340                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 447:         l = 
      +                          floorf(h/u);
  3341  000FCA  C082  F005         	movff	efgtoa@h,___fldiv@b
  3342  000FCE  C083  F006         	movff	efgtoa@h+1,___fldiv@b+1
  3343  000FD2  C084  F007         	movff	efgtoa@h+2,___fldiv@b+2
  3344  000FD6  C085  F008         	movff	efgtoa@h+3,___fldiv@b+3
  3345  000FDA  C094  F009         	movff	efgtoa@u,___fldiv@a
  3346  000FDE  C095  F00A         	movff	efgtoa@u+1,___fldiv@a+1
  3347  000FE2  C096  F00B         	movff	efgtoa@u+2,___fldiv@a+2
  3348  000FE6  C097  F00C         	movff	efgtoa@u+3,___fldiv@a+3
  3349  000FEA  EC97  F010         	call	___fldiv	;wreg free
  3350  000FEE  C005  F01E         	movff	?___fldiv,floorf@x
  3351  000FF2  C006  F01F         	movff	?___fldiv+1,floorf@x+1
  3352  000FF6  C007  F020         	movff	?___fldiv+2,floorf@x+2
  3353  000FFA  C008  F021         	movff	?___fldiv+3,floorf@x+3
  3354  000FFE  EC09  F014         	call	_floorf	;wreg free
  3355  001002  C01E  F086         	movff	?_floorf,efgtoa@l
  3356  001006  C01F  F087         	movff	?_floorf+1,efgtoa@l+1
  3357  00100A  C020  F088         	movff	?_floorf+2,efgtoa@l+2
  3358  00100E  C021  F089         	movff	?_floorf+3,efgtoa@l+3
  3359                           
  3360                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 448:         d = 
      +                          (int)l;
  3361  001012  C086  F005         	movff	efgtoa@l,___fltol@f1
  3362  001016  C087  F006         	movff	efgtoa@l+1,___fltol@f1+1
  3363  00101A  C088  F007         	movff	efgtoa@l+2,___fltol@f1+2
  3364  00101E  C089  F008         	movff	efgtoa@l+3,___fltol@f1+3
  3365  001022  ECB4  F016         	call	___fltol	;wreg free
  3366  001026  C005  F078         	movff	?___fltol,efgtoa@d
  3367  00102A  C006  F079         	movff	?___fltol+1,efgtoa@d+1
  3368  00102E                     
  3369                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 449:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3370  00102E  B858               	btfsc	_flags^0,4,c
  3371  001030  EF1C  F008         	goto	u4291
  3372  001034  EF1E  F008         	goto	u4290
  3373  001038                     u4291:
  3374  001038  EF3C  F008         	goto	l3598
  3375  00103C                     u4290:
  3376  00103C  0100               	movlb	0	; () banked
  3377  00103E  5178               	movf	efgtoa@d& (0+255),w,b
  3378  001040  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3379  001042  A4D8               	btfss	status,2,c
  3380  001044  EF26  F008         	goto	u4301
  3381  001048  EF28  F008         	goto	u4300
  3382  00104C                     u4301:
  3383  00104C  EF3C  F008         	goto	l3598
  3384  001050                     u4300:
  3385  001050                     
  3386                           ; BSR set to: 0
  3387  001050  0E67               	movlw	103
  3388  001052  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3389  001054  A4D8               	btfss	status,2,c
  3390  001056  EF2F  F008         	goto	u4311
  3391  00105A  EF31  F008         	goto	u4310
  3392  00105E                     u4311:
  3393  00105E  EF3C  F008         	goto	l3598
  3394  001062                     u4310:
  3395  001062                     
  3396                           ; BSR set to: 0
  3397  001062  BF77               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3398  001064  EF38  F008         	goto	u4320
  3399  001068  EF36  F008         	goto	u4321
  3400  00106C                     u4321:
  3401  00106C  EF3C  F008         	goto	l3598
  3402  001070                     u4320:
  3403  001070                     
  3404                           ; BSR set to: 0
  3405                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 450:             
      +                          ++t;
  3406  001070  4B70               	infsnz	efgtoa@t& (0+255),f,b
  3407  001072  2B71               	incf	(efgtoa@t+1)& (0+255),f,b
  3408                           
  3409                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 451:         } el
      +                          se {
  3410  001074  EF87  F008         	goto	l3626
  3411  001078                     l3598:
  3412                           
  3413                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 452:             
      +                          if (!pp && (ne < 0)) {
  3414  001078  0100               	movlb	0	; () banked
  3415  00107A  5172               	movf	efgtoa@pp& (0+255),w,b
  3416  00107C  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3417  00107E  A4D8               	btfss	status,2,c
  3418  001080  EF44  F008         	goto	u4331
  3419  001084  EF46  F008         	goto	u4330
  3420  001088                     u4331:
  3421  001088  EF70  F008         	goto	l3618
  3422  00108C                     u4330:
  3423  00108C                     
  3424                           ; BSR set to: 0
  3425  00108C  BF77               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3426  00108E  EF4D  F008         	goto	u4340
  3427  001092  EF4B  F008         	goto	u4341
  3428  001096                     u4341:
  3429  001096  EF70  F008         	goto	l3618
  3430  00109A                     u4340:
  3431  00109A                     
  3432                           ; BSR set to: 0
  3433                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 453:             
      +                              dbuf[n++] = '.';
  3434  00109A  0E00               	movlw	low _dbuf
  3435  00109C  2592               	addwf	efgtoa@n& (0+255),w,b
  3436  00109E  6ED9               	movwf	fsr2l,c
  3437  0010A0  0E01               	movlw	high _dbuf
  3438  0010A2  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3439  0010A4  6EDA               	movwf	fsr2h,c
  3440  0010A6  0E2E               	movlw	46
  3441  0010A8  6EDF               	movwf	indf2,c
  3442  0010AA                     
  3443                           ; BSR set to: 0
  3444  0010AA  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3445  0010AC  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3446  0010AE                     
  3447                           ; BSR set to: 0
  3448                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 454:             
      +                              --w;
  3449  0010AE  077F               	decf	efgtoa@w& (0+255),f,b
  3450  0010B0  A0D8               	btfss	status,0,c
  3451  0010B2  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3452  0010B4                     
  3453                           ; BSR set to: 0
  3454                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 455:             
      +                              pp = 1;
  3455  0010B4  0E00               	movlw	0
  3456  0010B6  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  3457  0010B8  0E01               	movlw	1
  3458  0010BA  6F72               	movwf	efgtoa@pp& (0+255),b
  3459  0010BC  EF70  F008         	goto	l3618
  3460  0010C0                     l3610:
  3461                           
  3462                           ; BSR set to: 0
  3463                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 458:             
      +                              dbuf[n++] = '0';
  3464  0010C0  0E00               	movlw	low _dbuf
  3465  0010C2  2592               	addwf	efgtoa@n& (0+255),w,b
  3466  0010C4  6ED9               	movwf	fsr2l,c
  3467  0010C6  0E01               	movlw	high _dbuf
  3468  0010C8  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3469  0010CA  6EDA               	movwf	fsr2h,c
  3470  0010CC  0E30               	movlw	48
  3471  0010CE  6EDF               	movwf	indf2,c
  3472  0010D0                     
  3473                           ; BSR set to: 0
  3474  0010D0  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3475  0010D2  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3476  0010D4                     
  3477                           ; BSR set to: 0
  3478                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 459:             
      +                              --w;
  3479  0010D4  077F               	decf	efgtoa@w& (0+255),f,b
  3480  0010D6  A0D8               	btfss	status,0,c
  3481  0010D8  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3482  0010DA                     
  3483                           ; BSR set to: 0
  3484                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 460:             
      +                              --t;
  3485  0010DA  0770               	decf	efgtoa@t& (0+255),f,b
  3486  0010DC  A0D8               	btfss	status,0,c
  3487  0010DE  0771               	decf	(efgtoa@t+1)& (0+255),f,b
  3488  0010E0                     l3618:
  3489                           
  3490                           ; BSR set to: 0
  3491                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 457:             
      +                          while (t) {
  3492  0010E0  5170               	movf	efgtoa@t& (0+255),w,b
  3493  0010E2  1171               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3494  0010E4  A4D8               	btfss	status,2,c
  3495  0010E6  EF77  F008         	goto	u4351
  3496  0010EA  EF79  F008         	goto	u4350
  3497  0010EE                     u4351:
  3498  0010EE  EF60  F008         	goto	l3610
  3499  0010F2                     u4350:
  3500  0010F2                     
  3501                           ; BSR set to: 0
  3502                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 462:             
      +                          dbuf[n++] = '0' + d;
  3503  0010F2  0E00               	movlw	low _dbuf
  3504  0010F4  2592               	addwf	efgtoa@n& (0+255),w,b
  3505  0010F6  6ED9               	movwf	fsr2l,c
  3506  0010F8  0E01               	movlw	high _dbuf
  3507  0010FA  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3508  0010FC  6EDA               	movwf	fsr2h,c
  3509  0010FE  5178               	movf	efgtoa@d& (0+255),w,b
  3510  001100  0F30               	addlw	48
  3511  001102  6EDF               	movwf	indf2,c
  3512  001104                     
  3513                           ; BSR set to: 0
  3514  001104  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3515  001106  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3516  001108                     
  3517                           ; BSR set to: 0
  3518                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 463:             
      +                          --w;
  3519  001108  077F               	decf	efgtoa@w& (0+255),f,b
  3520  00110A  A0D8               	btfss	status,0,c
  3521  00110C  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3522  00110E                     l3626:
  3523                           
  3524                           ; BSR set to: 0
  3525                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 465:         h -=
      +                           l*u;
  3526  00110E  C082  F02C         	movff	efgtoa@h,___flsub@b
  3527  001112  C083  F02D         	movff	efgtoa@h+1,___flsub@b+1
  3528  001116  C084  F02E         	movff	efgtoa@h+2,___flsub@b+2
  3529  00111A  C085  F02F         	movff	efgtoa@h+3,___flsub@b+3
  3530  00111E  C094  F017         	movff	efgtoa@u,___flmul@a
  3531  001122  C095  F018         	movff	efgtoa@u+1,___flmul@a+1
  3532  001126  C096  F019         	movff	efgtoa@u+2,___flmul@a+2
  3533  00112A  C097  F01A         	movff	efgtoa@u+3,___flmul@a+3
  3534  00112E  C086  F013         	movff	efgtoa@l,___flmul@b
  3535  001132  C087  F014         	movff	efgtoa@l+1,___flmul@b+1
  3536  001136  C088  F015         	movff	efgtoa@l+2,___flmul@b+2
  3537  00113A  C089  F016         	movff	efgtoa@l+3,___flmul@b+3
  3538  00113E  EC82  F00E         	call	___flmul	;wreg free
  3539  001142  C013  F030         	movff	?___flmul,___flsub@a
  3540  001146  C014  F031         	movff	?___flmul+1,___flsub@a+1
  3541  00114A  C015  F032         	movff	?___flmul+2,___flsub@a+2
  3542  00114E  C016  F033         	movff	?___flmul+3,___flsub@a+3
  3543  001152  ECFE  F01B         	call	___flsub	;wreg free
  3544  001156  C02C  F082         	movff	?___flsub,efgtoa@h
  3545  00115A  C02D  F083         	movff	?___flsub+1,efgtoa@h+1
  3546  00115E  C02E  F084         	movff	?___flsub+2,efgtoa@h+2
  3547  001162  C02F  F085         	movff	?___flsub+3,efgtoa@h+3
  3548  001166                     
  3549                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 466:         u = 
      +                          u/10.0;
  3550  001166  C094  F005         	movff	efgtoa@u,___fldiv@b
  3551  00116A  C095  F006         	movff	efgtoa@u+1,___fldiv@b+1
  3552  00116E  C096  F007         	movff	efgtoa@u+2,___fldiv@b+2
  3553  001172  C097  F008         	movff	efgtoa@u+3,___fldiv@b+3
  3554  001176  0E00               	movlw	0
  3555  001178  6E09               	movwf	___fldiv@a^0,c
  3556  00117A  0E00               	movlw	0
  3557  00117C  6E0A               	movwf	(___fldiv@a+1)^0,c
  3558  00117E  0E20               	movlw	32
  3559  001180  6E0B               	movwf	(___fldiv@a+2)^0,c
  3560  001182  0E41               	movlw	65
  3561  001184  6E0C               	movwf	(___fldiv@a+3)^0,c
  3562  001186  EC97  F010         	call	___fldiv	;wreg free
  3563  00118A  C005  F094         	movff	?___fldiv,efgtoa@u
  3564  00118E  C006  F095         	movff	?___fldiv+1,efgtoa@u+1
  3565  001192  C007  F096         	movff	?___fldiv+2,efgtoa@u+2
  3566  001196  C008  F097         	movff	?___fldiv+3,efgtoa@u+3
  3567  00119A                     
  3568                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 467:         --ne
      +                          ;
  3569  00119A  0100               	movlb	0	; () banked
  3570  00119C  0776               	decf	efgtoa@ne& (0+255),f,b
  3571  00119E  A0D8               	btfss	status,0,c
  3572  0011A0  0777               	decf	(efgtoa@ne+1)& (0+255),f,b
  3573  0011A2                     
  3574                           ; BSR set to: 0
  3575                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 468:         ++i;
  3576  0011A2  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  3577  0011A4  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  3578  0011A6                     l3634:
  3579                           
  3580                           ; BSR set to: 0
  3581                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3582  0011A6  5174               	movf	efgtoa@m& (0+255),w,b
  3583  0011A8  5D8A               	subwf	efgtoa@i& (0+255),w,b
  3584  0011AA  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  3585  0011AC  0A80               	xorlw	128
  3586  0011AE  6E3F               	movwf	??_efgtoa^0,c
  3587  0011B0  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  3588  0011B2  0A80               	xorlw	128
  3589  0011B4  583F               	subwfb	??_efgtoa^0,w,c
  3590  0011B6  B0D8               	btfsc	status,0,c
  3591  0011B8  EFE0  F008         	goto	u4361
  3592  0011BC  EFE2  F008         	goto	u4360
  3593  0011C0                     u4361:
  3594  0011C0  EFF0  F008         	goto	l3638
  3595  0011C4                     u4360:
  3596  0011C4                     
  3597                           ; BSR set to: 0
  3598  0011C4  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3599  0011C6  EFEE  F008         	goto	u4371
  3600  0011CA  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  3601  0011CC  E109               	bnz	u4370
  3602  0011CE  0E4B               	movlw	75
  3603  0011D0  5D92               	subwf	efgtoa@n& (0+255),w,b
  3604  0011D2  A0D8               	btfss	status,0,c
  3605  0011D4  EFEE  F008         	goto	u4371
  3606  0011D8  EFF0  F008         	goto	u4370
  3607  0011DC                     u4371:
  3608  0011DC  EFE5  F007         	goto	l3586
  3609  0011E0                     u4370:
  3610  0011E0                     l3638:
  3611                           
  3612                           ; BSR set to: 0
  3613                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 470:     if (!pp 
      +                          && (flags & (1 << 4))) {
  3614  0011E0  5172               	movf	efgtoa@pp& (0+255),w,b
  3615  0011E2  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3616  0011E4  A4D8               	btfss	status,2,c
  3617  0011E6  EFF7  F008         	goto	u4381
  3618  0011EA  EFF9  F008         	goto	u4380
  3619  0011EE                     u4381:
  3620  0011EE  EF0A  F009         	goto	l3646
  3621  0011F2                     u4380:
  3622  0011F2                     
  3623                           ; BSR set to: 0
  3624  0011F2  A858               	btfss	_flags^0,4,c
  3625  0011F4  EFFE  F008         	goto	u4391
  3626  0011F8  EF00  F009         	goto	u4390
  3627  0011FC                     u4391:
  3628  0011FC  EF0A  F009         	goto	l3646
  3629  001200                     u4390:
  3630  001200                     
  3631                           ; BSR set to: 0
  3632                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 471:         dbuf
      +                          [n++] = '.';
  3633  001200  0E00               	movlw	low _dbuf
  3634  001202  2592               	addwf	efgtoa@n& (0+255),w,b
  3635  001204  6ED9               	movwf	fsr2l,c
  3636  001206  0E01               	movlw	high _dbuf
  3637  001208  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3638  00120A  6EDA               	movwf	fsr2h,c
  3639  00120C  0E2E               	movlw	46
  3640  00120E  6EDF               	movwf	indf2,c
  3641  001210                     
  3642                           ; BSR set to: 0
  3643  001210  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3644  001212  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3645  001214                     l3646:
  3646                           
  3647                           ; BSR set to: 0
  3648                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 473:     dbuf[n] 
      +                          = '\0';
  3649  001214  0E00               	movlw	low _dbuf
  3650  001216  2592               	addwf	efgtoa@n& (0+255),w,b
  3651  001218  6ED9               	movwf	fsr2l,c
  3652  00121A  0E01               	movlw	high _dbuf
  3653  00121C  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3654  00121E  6EDA               	movwf	fsr2h,c
  3655  001220  0E00               	movlw	0
  3656  001222  6EDF               	movwf	indf2,c
  3657  001224                     
  3658                           ; BSR set to: 0
  3659                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 476:     if (nmod
      +                          e == 'e') {
  3660  001224  0E65               	movlw	101
  3661  001226  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3662  001228  A4D8               	btfss	status,2,c
  3663  00122A  EF19  F009         	goto	u4401
  3664  00122E  EF1B  F009         	goto	u4400
  3665  001232                     u4401:
  3666  001232  EFC8  F004         	goto	l3458
  3667  001236                     u4400:
  3668  001236                     
  3669                           ; BSR set to: 0
  3670                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 477:         i = 
      +                          sizeof(dbuf) - 1;
  3671  001236  0E00               	movlw	0
  3672  001238  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3673  00123A  0E4F               	movlw	79
  3674  00123C  6F8A               	movwf	efgtoa@i& (0+255),b
  3675  00123E                     
  3676                           ; BSR set to: 0
  3677                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 478:         dbuf
      +                          [i] = '\0';
  3678  00123E  0E00               	movlw	low _dbuf
  3679  001240  258A               	addwf	efgtoa@i& (0+255),w,b
  3680  001242  6ED9               	movwf	fsr2l,c
  3681  001244  0E01               	movlw	high _dbuf
  3682  001246  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3683  001248  6EDA               	movwf	fsr2h,c
  3684  00124A  0E00               	movlw	0
  3685  00124C  6EDF               	movwf	indf2,c
  3686  00124E                     
  3687                           ; BSR set to: 0
  3688                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 479:         sign
      +                           = 0;
  3689  00124E  0E00               	movlw	0
  3690  001250  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3691  001252  0E00               	movlw	0
  3692  001254  6F7A               	movwf	efgtoa@sign& (0+255),b
  3693  001256                     
  3694                           ; BSR set to: 0
  3695                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 480:         if (
      +                          e < 0) {
  3696  001256  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3697  001258  EF32  F009         	goto	u4410
  3698  00125C  EF30  F009         	goto	u4411
  3699  001260                     u4411:
  3700  001260  EF3A  F009         	goto	l3662
  3701  001264                     u4410:
  3702  001264                     
  3703                           ; BSR set to: 0
  3704                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 481:             
      +                          sign = 1;
  3705  001264  0E00               	movlw	0
  3706  001266  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3707  001268  0E01               	movlw	1
  3708  00126A  6F7A               	movwf	efgtoa@sign& (0+255),b
  3709  00126C                     
  3710                           ; BSR set to: 0
  3711                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 482:             
      +                          e = -e;
  3712  00126C  6D90               	negf	efgtoa@e& (0+255),b
  3713  00126E  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  3714  001270  B0D8               	btfsc	status,0,c
  3715  001272  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  3716  001274                     l3662:
  3717                           
  3718                           ; BSR set to: 0
  3719                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 484:         p = 
      +                          2;
  3720  001274  0E00               	movlw	0
  3721  001276  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  3722  001278  0E02               	movlw	2
  3723  00127A  6F7C               	movwf	efgtoa@p& (0+255),b
  3724                           
  3725                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  3726  00127C  EF6B  F009         	goto	l3674
  3727  001280                     l3664:
  3728                           
  3729                           ; BSR set to: 0
  3730                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 486:             
      +                          --i;
  3731  001280  078A               	decf	efgtoa@i& (0+255),f,b
  3732  001282  A0D8               	btfss	status,0,c
  3733  001284  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3734  001286                     
  3735                           ; BSR set to: 0
  3736                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 487:             
      +                          dbuf[i] = '0' + (e % 10);
  3737  001286  0E00               	movlw	low _dbuf
  3738  001288  258A               	addwf	efgtoa@i& (0+255),w,b
  3739  00128A  6ED9               	movwf	fsr2l,c
  3740  00128C  0E01               	movlw	high _dbuf
  3741  00128E  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3742  001290  6EDA               	movwf	fsr2h,c
  3743  001292  C090  F005         	movff	efgtoa@e,___awmod@dividend
  3744  001296  C091  F006         	movff	efgtoa@e+1,___awmod@dividend+1
  3745  00129A  0E00               	movlw	0
  3746  00129C  6E08               	movwf	(___awmod@divisor+1)^0,c
  3747  00129E  0E0A               	movlw	10
  3748  0012A0  6E07               	movwf	___awmod@divisor^0,c
  3749  0012A2  ECCB  F019         	call	___awmod	;wreg free
  3750  0012A6  5005               	movf	?___awmod^0,w,c
  3751  0012A8  0F30               	addlw	48
  3752  0012AA  6EDF               	movwf	indf2,c
  3753  0012AC                     
  3754                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 488:             
      +                          e = e / 10;
  3755  0012AC  C090  F005         	movff	efgtoa@e,___awdiv@dividend
  3756  0012B0  C091  F006         	movff	efgtoa@e+1,___awdiv@dividend+1
  3757  0012B4  0E00               	movlw	0
  3758  0012B6  6E08               	movwf	(___awdiv@divisor+1)^0,c
  3759  0012B8  0E0A               	movlw	10
  3760  0012BA  6E07               	movwf	___awdiv@divisor^0,c
  3761  0012BC  EC08  F019         	call	___awdiv	;wreg free
  3762  0012C0  C005  F090         	movff	?___awdiv,efgtoa@e
  3763  0012C4  C006  F091         	movff	?___awdiv+1,efgtoa@e+1
  3764  0012C8                     
  3765                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 489:             
      +                          --p;
  3766  0012C8  0100               	movlb	0	; () banked
  3767  0012CA  077C               	decf	efgtoa@p& (0+255),f,b
  3768  0012CC  A0D8               	btfss	status,0,c
  3769  0012CE  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  3770  0012D0                     
  3771                           ; BSR set to: 0
  3772                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 490:             
      +                          --w;
  3773  0012D0  077F               	decf	efgtoa@w& (0+255),f,b
  3774  0012D2  A0D8               	btfss	status,0,c
  3775  0012D4  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3776  0012D6                     l3674:
  3777                           
  3778                           ; BSR set to: 0
  3779                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  3780  0012D6  5190               	movf	efgtoa@e& (0+255),w,b
  3781  0012D8  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  3782  0012DA  A4D8               	btfss	status,2,c
  3783  0012DC  EF72  F009         	goto	u4421
  3784  0012E0  EF74  F009         	goto	u4420
  3785  0012E4                     u4421:
  3786  0012E4  EF40  F009         	goto	l3664
  3787  0012E8                     u4420:
  3788  0012E8                     
  3789                           ; BSR set to: 0
  3790  0012E8  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  3791  0012EA  EF81  F009         	goto	u4430
  3792  0012EE  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  3793  0012F0  E106               	bnz	u4431
  3794  0012F2  057C               	decf	efgtoa@p& (0+255),w,b
  3795  0012F4  B0D8               	btfsc	status,0,c
  3796  0012F6  EF7F  F009         	goto	u4431
  3797  0012FA  EF81  F009         	goto	u4430
  3798  0012FE                     u4431:
  3799  0012FE  EF40  F009         	goto	l3664
  3800  001302                     u4430:
  3801  001302                     
  3802                           ; BSR set to: 0
  3803                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 492:         --i;
  3804  001302  078A               	decf	efgtoa@i& (0+255),f,b
  3805  001304  A0D8               	btfss	status,0,c
  3806  001306  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3807  001308                     
  3808                           ; BSR set to: 0
  3809                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [i] = sign ? '-' : '+';
  3810  001308  517A               	movf	efgtoa@sign& (0+255),w,b
  3811  00130A  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3812  00130C  A4D8               	btfss	status,2,c
  3813  00130E  EF8B  F009         	goto	u4441
  3814  001312  EF8D  F009         	goto	u4440
  3815  001316                     u4441:
  3816  001316  EF93  F009         	goto	l3684
  3817  00131A                     u4440:
  3818  00131A                     
  3819                           ; BSR set to: 0
  3820  00131A  0E00               	movlw	0
  3821  00131C  6F6B               	movwf	(_efgtoa$1244+1)& (0+255),b
  3822  00131E  0E2B               	movlw	43
  3823  001320  6F6A               	movwf	_efgtoa$1244& (0+255),b
  3824  001322  EF97  F009         	goto	l3686
  3825  001326                     l3684:
  3826                           
  3827                           ; BSR set to: 0
  3828  001326  0E00               	movlw	0
  3829  001328  6F6B               	movwf	(_efgtoa$1244+1)& (0+255),b
  3830  00132A  0E2D               	movlw	45
  3831  00132C  6F6A               	movwf	_efgtoa$1244& (0+255),b
  3832  00132E                     l3686:
  3833                           
  3834                           ; BSR set to: 0
  3835  00132E  0E00               	movlw	low _dbuf
  3836  001330  258A               	addwf	efgtoa@i& (0+255),w,b
  3837  001332  6ED9               	movwf	fsr2l,c
  3838  001334  0E01               	movlw	high _dbuf
  3839  001336  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3840  001338  6EDA               	movwf	fsr2h,c
  3841  00133A  C06A  FFDF         	movff	_efgtoa$1244,indf2
  3842  00133E                     
  3843                           ; BSR set to: 0
  3844                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 494:         --w;
  3845  00133E  077F               	decf	efgtoa@w& (0+255),f,b
  3846  001340  A0D8               	btfss	status,0,c
  3847  001342  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3848  001344                     
  3849                           ; BSR set to: 0
  3850                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 496:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  3851  001344  078A               	decf	efgtoa@i& (0+255),f,b
  3852  001346  A0D8               	btfss	status,0,c
  3853  001348  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3854  00134A                     
  3855                           ; BSR set to: 0
  3856  00134A  0EBF               	movlw	191
  3857  00134C  6E3F               	movwf	??_efgtoa^0,c
  3858  00134E  0EFF               	movlw	255
  3859  001350  6E40               	movwf	(??_efgtoa+1)^0,c
  3860  001352  503E               	movf	efgtoa@c^0,w,c
  3861  001354  6E41               	movwf	(??_efgtoa+2)^0,c
  3862  001356  6A42               	clrf	(??_efgtoa+3)^0,c
  3863  001358  503F               	movf	??_efgtoa^0,w,c
  3864  00135A  2641               	addwf	(??_efgtoa+2)^0,f,c
  3865  00135C  5040               	movf	(??_efgtoa+1)^0,w,c
  3866  00135E  2242               	addwfc	(??_efgtoa+3)^0,f,c
  3867  001360  5042               	movf	(??_efgtoa+3)^0,w,c
  3868  001362  E10A               	bnz	u4450
  3869  001364  0E1A               	movlw	26
  3870  001366  5C41               	subwf	(??_efgtoa+2)^0,w,c
  3871  001368  A0D8               	btfss	status,0,c
  3872  00136A  EFB9  F009         	goto	u4451
  3873  00136E  EFBC  F009         	goto	u4450
  3874  001372                     u4451:
  3875  001372  0E01               	movlw	1
  3876  001374  EFBD  F009         	goto	u4460
  3877  001378                     u4450:
  3878  001378  0E00               	movlw	0
  3879  00137A                     u4460:
  3880  00137A  6F6E               	movwf	_efgtoa$1246& (0+255),b
  3881  00137C  6B6F               	clrf	(_efgtoa$1246+1)& (0+255),b
  3882  00137E                     
  3883                           ; BSR set to: 0
  3884  00137E  516E               	movf	_efgtoa$1246& (0+255),w,b
  3885  001380  116F               	iorwf	(_efgtoa$1246+1)& (0+255),w,b
  3886  001382  A4D8               	btfss	status,2,c
  3887  001384  EFC6  F009         	goto	u4471
  3888  001388  EFC8  F009         	goto	u4470
  3889  00138C                     u4471:
  3890  00138C  EFCE  F009         	goto	l3700
  3891  001390                     u4470:
  3892  001390                     
  3893                           ; BSR set to: 0
  3894  001390  0E00               	movlw	0
  3895  001392  6F6D               	movwf	(_efgtoa$1245+1)& (0+255),b
  3896  001394  0E65               	movlw	101
  3897  001396  6F6C               	movwf	_efgtoa$1245& (0+255),b
  3898  001398  EFD2  F009         	goto	l3702
  3899  00139C                     l3700:
  3900                           
  3901                           ; BSR set to: 0
  3902  00139C  0E00               	movlw	0
  3903  00139E  6F6D               	movwf	(_efgtoa$1245+1)& (0+255),b
  3904  0013A0  0E45               	movlw	69
  3905  0013A2  6F6C               	movwf	_efgtoa$1245& (0+255),b
  3906  0013A4                     l3702:
  3907                           
  3908                           ; BSR set to: 0
  3909  0013A4  0E00               	movlw	low _dbuf
  3910  0013A6  258A               	addwf	efgtoa@i& (0+255),w,b
  3911  0013A8  6ED9               	movwf	fsr2l,c
  3912  0013AA  0E01               	movlw	high _dbuf
  3913  0013AC  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3914  0013AE  6EDA               	movwf	fsr2h,c
  3915  0013B0  C06C  FFDF         	movff	_efgtoa$1245,indf2
  3916  0013B4                     
  3917                           ; BSR set to: 0
  3918                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 497:         --w;
  3919  0013B4  077F               	decf	efgtoa@w& (0+255),f,b
  3920  0013B6  A0D8               	btfss	status,0,c
  3921  0013B8  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3922  0013BA                     
  3923                           ; BSR set to: 0
  3924                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 498:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  3925  0013BA  0E00               	movlw	low _dbuf
  3926  0013BC  2592               	addwf	efgtoa@n& (0+255),w,b
  3927  0013BE  6E05               	movwf	strcpy@dest^0,c
  3928  0013C0  0E01               	movlw	high _dbuf
  3929  0013C2  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3930  0013C4  6E06               	movwf	(strcpy@dest+1)^0,c
  3931  0013C6  0E00               	movlw	low _dbuf
  3932  0013C8  258A               	addwf	efgtoa@i& (0+255),w,b
  3933  0013CA  6E07               	movwf	strcpy@src^0,c
  3934  0013CC  0E01               	movlw	high _dbuf
  3935  0013CE  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3936  0013D0  6E08               	movwf	(strcpy@src+1)^0,c
  3937  0013D2  EC7E  F01B         	call	_strcpy	;wreg free
  3938  0013D6  EFC8  F004         	goto	l3458
  3939  0013DA                     l874:
  3940  0013DA  0012               	return		;funcret
  3941  0013DC                     __end_of_efgtoa:
  3942                           	callstack 0
  3943                           
  3944 ;; *************** function _tolower *****************
  3945 ;; Defined at:
  3946 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\tolower.c"
  3947 ;; Parameters:    Size  Location     Type
  3948 ;;  c               2   10[COMRAM] int 
  3949 ;; Auto vars:     Size  Location     Type
  3950 ;;		None
  3951 ;; Return value:  Size  Location     Type
  3952 ;;                  2   10[COMRAM] int 
  3953 ;; Registers used:
  3954 ;;		wreg, status,2, status,0
  3955 ;; Tracked objects:
  3956 ;;		On entry : 0/0
  3957 ;;		On exit  : 0/0
  3958 ;;		Unchanged: 0/0
  3959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3960 ;;      Params:         2       0       0       0       0       0       0       0       0
  3961 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3962 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3963 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3964 ;;Total ram usage:        8 bytes
  3965 ;; Hardware stack levels used:    1
  3966 ;; Hardware stack levels required when called:    3
  3967 ;; This function calls:
  3968 ;;		_isupper
  3969 ;; This function is called by:
  3970 ;;		_efgtoa
  3971 ;;		_vfpfcnvrt
  3972 ;; This function uses a non-reentrant model
  3973 ;;
  3974                           
  3975                           	psect	text6
  3976  00369C                     __ptext6:
  3977                           	callstack 0
  3978  00369C                     _tolower:
  3979                           	callstack 24
  3980  00369C  0EBF               	movlw	191
  3981  00369E  6E0D               	movwf	??_tolower^0,c
  3982  0036A0  0EFF               	movlw	255
  3983  0036A2  6E0E               	movwf	(??_tolower+1)^0,c
  3984  0036A4  C00B  F00F         	movff	tolower@c,??_tolower+2
  3985  0036A8  C00C  F010         	movff	tolower@c+1,??_tolower+3
  3986  0036AC  500D               	movf	??_tolower^0,w,c
  3987  0036AE  260F               	addwf	(??_tolower+2)^0,f,c
  3988  0036B0  500E               	movf	(??_tolower+1)^0,w,c
  3989  0036B2  2210               	addwfc	(??_tolower+3)^0,f,c
  3990  0036B4  5010               	movf	(??_tolower+3)^0,w,c
  3991  0036B6  E10A               	bnz	u3790
  3992  0036B8  0E1A               	movlw	26
  3993  0036BA  5C0F               	subwf	(??_tolower+2)^0,w,c
  3994  0036BC  A0D8               	btfss	status,0,c
  3995  0036BE  EF63  F01B         	goto	u3791
  3996  0036C2  EF66  F01B         	goto	u3790
  3997  0036C6                     u3791:
  3998  0036C6  0E01               	movlw	1
  3999  0036C8  EF67  F01B         	goto	u3800
  4000  0036CC                     u3790:
  4001  0036CC  0E00               	movlw	0
  4002  0036CE                     u3800:
  4003  0036CE  6E11               	movwf	_tolower$1393^0,c
  4004  0036D0  6A12               	clrf	(_tolower$1393+1)^0,c
  4005  0036D2  5011               	movf	_tolower$1393^0,w,c
  4006  0036D4  1012               	iorwf	(_tolower$1393+1)^0,w,c
  4007  0036D6  B4D8               	btfsc	status,2,c
  4008  0036D8  EF70  F01B         	goto	u3811
  4009  0036DC  EF72  F01B         	goto	u3810
  4010  0036E0                     u3811:
  4011  0036E0  EF79  F01B         	goto	l1102
  4012  0036E4                     u3810:
  4013  0036E4  0E20               	movlw	32
  4014  0036E6  100B               	iorwf	tolower@c^0,w,c
  4015  0036E8  6E0B               	movwf	?_tolower^0,c
  4016  0036EA  500C               	movf	(tolower@c+1)^0,w,c
  4017  0036EC  6E0C               	movwf	(?_tolower+1)^0,c
  4018  0036EE  EF7D  F01B         	goto	l1107
  4019  0036F2                     l1102:
  4020  0036F2  C00B  F00B         	movff	tolower@c,?_tolower
  4021  0036F6  C00C  F00C         	movff	tolower@c+1,?_tolower+1
  4022  0036FA                     l1107:
  4023  0036FA  0012               	return		;funcret
  4024  0036FC                     __end_of_tolower:
  4025                           	callstack 0
  4026                           
  4027 ;; *************** function _isupper *****************
  4028 ;; Defined at:
  4029 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isupper.c"
  4030 ;; Parameters:    Size  Location     Type
  4031 ;;  c               2    4[COMRAM] int 
  4032 ;; Auto vars:     Size  Location     Type
  4033 ;;		None
  4034 ;; Return value:  Size  Location     Type
  4035 ;;                  2    4[COMRAM] int 
  4036 ;; Registers used:
  4037 ;;		wreg, status,2, status,0
  4038 ;; Tracked objects:
  4039 ;;		On entry : 0/0
  4040 ;;		On exit  : 0/0
  4041 ;;		Unchanged: 0/0
  4042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4043 ;;      Params:         2       0       0       0       0       0       0       0       0
  4044 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4045 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4046 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4047 ;;Total ram usage:        6 bytes
  4048 ;; Hardware stack levels used:    1
  4049 ;; Hardware stack levels required when called:    2
  4050 ;; This function calls:
  4051 ;;		Nothing
  4052 ;; This function is called by:
  4053 ;;		_efgtoa
  4054 ;;		_vfpfcnvrt
  4055 ;;		_tolower
  4056 ;; This function uses a non-reentrant model
  4057 ;;
  4058                           
  4059                           	psect	text7
  4060  00390A                     __ptext7:
  4061                           	callstack 0
  4062  00390A                     _isupper:
  4063                           	callstack 24
  4064  00390A  0EBF               	movlw	191
  4065  00390C  6E07               	movwf	??_isupper^0,c
  4066  00390E  0EFF               	movlw	255
  4067  003910  6E08               	movwf	(??_isupper+1)^0,c
  4068  003912  C005  F009         	movff	isupper@c,??_isupper+2
  4069  003916  C006  F00A         	movff	isupper@c+1,??_isupper+3
  4070  00391A  5007               	movf	??_isupper^0,w,c
  4071  00391C  2609               	addwf	(??_isupper+2)^0,f,c
  4072  00391E  5008               	movf	(??_isupper+1)^0,w,c
  4073  003920  220A               	addwfc	(??_isupper+3)^0,f,c
  4074  003922  500A               	movf	(??_isupper+3)^0,w,c
  4075  003924  E10A               	bnz	u2940
  4076  003926  0E1A               	movlw	26
  4077  003928  5C09               	subwf	(??_isupper+2)^0,w,c
  4078  00392A  A0D8               	btfss	status,0,c
  4079  00392C  EF9A  F01C         	goto	u2941
  4080  003930  EF9D  F01C         	goto	u2940
  4081  003934                     u2941:
  4082  003934  0E01               	movlw	1
  4083  003936  EF9E  F01C         	goto	u2950
  4084  00393A                     u2940:
  4085  00393A  0E00               	movlw	0
  4086  00393C                     u2950:
  4087  00393C  6E05               	movwf	?_isupper^0,c
  4088  00393E  6A06               	clrf	(?_isupper+1)^0,c
  4089  003940  0012               	return		;funcret
  4090  003942                     __end_of_isupper:
  4091                           	callstack 0
  4092                           
  4093 ;; *************** function _strcpy *****************
  4094 ;; Defined at:
  4095 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strcpy.c"
  4096 ;; Parameters:    Size  Location     Type
  4097 ;;  dest            2    4[COMRAM] PTR unsigned char 
  4098 ;;		 -> dbuf(80), 
  4099 ;;  src             2    6[COMRAM] PTR const unsigned char 
  4100 ;;		 -> STR_10(4), STR_9(4), STR_6(4), STR_5(4), 
  4101 ;;		 -> dbuf(80), 
  4102 ;; Auto vars:     Size  Location     Type
  4103 ;;  d               2   12[COMRAM] PTR unsigned char 
  4104 ;;		 -> dbuf(80), 
  4105 ;;  s               2   10[COMRAM] PTR const unsigned char 
  4106 ;;		 -> STR_10(4), STR_9(4), STR_6(4), STR_5(4), 
  4107 ;;		 -> dbuf(80), 
  4108 ;; Return value:  Size  Location     Type
  4109 ;;                  2    4[COMRAM] PTR unsigned char 
  4110 ;; Registers used:
  4111 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4112 ;; Tracked objects:
  4113 ;;		On entry : 0/0
  4114 ;;		On exit  : 0/0
  4115 ;;		Unchanged: 0/0
  4116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4117 ;;      Params:         4       0       0       0       0       0       0       0       0
  4118 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4119 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4120 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4121 ;;Total ram usage:       10 bytes
  4122 ;; Hardware stack levels used:    1
  4123 ;; Hardware stack levels required when called:    2
  4124 ;; This function calls:
  4125 ;;		Nothing
  4126 ;; This function is called by:
  4127 ;;		_efgtoa
  4128 ;; This function uses a non-reentrant model
  4129 ;;
  4130                           
  4131                           	psect	text8
  4132  0036FC                     __ptext8:
  4133                           	callstack 0
  4134  0036FC                     _strcpy:
  4135                           	callstack 24
  4136  0036FC  C007  F00B         	movff	strcpy@src,strcpy@s
  4137  003700  C008  F00C         	movff	strcpy@src+1,strcpy@s+1
  4138  003704  C005  F00D         	movff	strcpy@dest,strcpy@d
  4139  003708  C006  F00E         	movff	strcpy@dest+1,strcpy@d+1
  4140  00370C                     l3358:
  4141  00370C  500B               	movf	strcpy@s^0,w,c
  4142  00370E  6E09               	movwf	??_strcpy^0,c
  4143  003710  500C               	movf	(strcpy@s+1)^0,w,c
  4144  003712  6E0A               	movwf	(??_strcpy+1)^0,c
  4145  003714  4A0B               	infsnz	strcpy@s^0,f,c
  4146  003716  2A0C               	incf	(strcpy@s+1)^0,f,c
  4147  003718  C009  FFF6         	movff	??_strcpy,tblptrl
  4148  00371C  C00A  FFF7         	movff	??_strcpy+1,tblptrh
  4149  003720  6AF8               	clrf	tblptru,c
  4150  003722  C00D  FFD9         	movff	strcpy@d,fsr2l
  4151  003726  C00E  FFDA         	movff	strcpy@d+1,fsr2h
  4152  00372A  4A0D               	infsnz	strcpy@d^0,f,c
  4153  00372C  2A0E               	incf	(strcpy@d+1)^0,f,c
  4154  00372E  0E07               	movlw	(high __ramtop+-1)
  4155  003730  64F7               	cpfsgt	tblptrh,c
  4156  003732  D003               	bra	u3777
  4157  003734  0008               	tblrd		*
  4158  003736  50F5               	movf	tablat,w,c
  4159  003738  D005               	bra	u3770
  4160  00373A                     u3777:
  4161  00373A  CFF6 FFE1          	movff	tblptrl,fsr1l
  4162  00373E  CFF7 FFE2          	movff	tblptrh,fsr1h
  4163  003742  50E7               	movf	indf1,w,c
  4164  003744                     u3770:
  4165  003744  6EDF               	movwf	indf2,c
  4166  003746  50DF               	movf	indf2,w,c
  4167  003748  A4D8               	btfss	status,2,c
  4168  00374A  EFA9  F01B         	goto	u3781
  4169  00374E  EFAB  F01B         	goto	u3780
  4170  003752                     u3781:
  4171  003752  EF86  F01B         	goto	l3358
  4172  003756                     u3780:
  4173  003756  0012               	return		;funcret
  4174  003758                     __end_of_strcpy:
  4175                           	callstack 0
  4176                           
  4177 ;; *************** function _pad *****************
  4178 ;; Defined at:
  4179 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  4180 ;; Parameters:    Size  Location     Type
  4181 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  4182 ;;		 -> sprintf@f(6), 
  4183 ;;  buf             2   22[COMRAM] PTR unsigned char 
  4184 ;;		 -> dbuf(80), 
  4185 ;;  p               2   24[COMRAM] int 
  4186 ;; Auto vars:     Size  Location     Type
  4187 ;;  w               2   29[COMRAM] int 
  4188 ;;  i               2   27[COMRAM] int 
  4189 ;; Return value:  Size  Location     Type
  4190 ;;                  2   20[COMRAM] int 
  4191 ;; Registers used:
  4192 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4193 ;; Tracked objects:
  4194 ;;		On entry : 0/0
  4195 ;;		On exit  : 0/0
  4196 ;;		Unchanged: 0/0
  4197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4198 ;;      Params:         6       0       0       0       0       0       0       0       0
  4199 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4200 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4201 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4202 ;;Total ram usage:       11 bytes
  4203 ;; Hardware stack levels used:    1
  4204 ;; Hardware stack levels required when called:    5
  4205 ;; This function calls:
  4206 ;;		_fputc
  4207 ;;		_fputs
  4208 ;;		_strlen
  4209 ;; This function is called by:
  4210 ;;		_efgtoa
  4211 ;; This function uses a non-reentrant model
  4212 ;;
  4213                           
  4214                           	psect	text9
  4215  0032D4                     __ptext9:
  4216                           	callstack 0
  4217  0032D4                     _pad:
  4218                           	callstack 21
  4219  0032D4                     
  4220                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4221  0032D4  A058               	btfss	_flags^0,0,c
  4222  0032D6  EF6F  F019         	goto	u3661
  4223  0032DA  EF71  F019         	goto	u3660
  4224  0032DE                     u3661:
  4225  0032DE  EF7B  F019         	goto	l3316
  4226  0032E2                     u3660:
  4227  0032E2                     
  4228                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4229  0032E2  C017  F00E         	movff	pad@buf,fputs@s
  4230  0032E6  C018  F00F         	movff	pad@buf+1,fputs@s+1
  4231  0032EA  C015  F010         	movff	pad@fp,fputs@fp
  4232  0032EE  C016  F011         	movff	pad@fp+1,fputs@fp+1
  4233  0032F2  EC44  F01C         	call	_fputs	;wreg free
  4234  0032F6                     l3316:
  4235                           
  4236                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4237  0032F6  BE1A               	btfsc	(pad@p+1)^0,7,c
  4238  0032F8  EF80  F019         	goto	u3671
  4239  0032FC  EF82  F019         	goto	u3670
  4240  003300                     u3671:
  4241  003300  EF88  F019         	goto	l3320
  4242  003304                     u3670:
  4243  003304  C019  F01E         	movff	pad@p,pad@w
  4244  003308  C01A  F01F         	movff	pad@p+1,pad@w+1
  4245  00330C  EF8C  F019         	goto	l851
  4246  003310                     l3320:
  4247  003310  0E00               	movlw	0
  4248  003312  6E1F               	movwf	(pad@w+1)^0,c
  4249  003314  0E00               	movlw	0
  4250  003316  6E1E               	movwf	pad@w^0,c
  4251  003318                     l851:
  4252                           
  4253                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4254  003318  0E00               	movlw	0
  4255  00331A  6E1D               	movwf	(pad@i+1)^0,c
  4256  00331C  0E00               	movlw	0
  4257  00331E  6E1C               	movwf	pad@i^0,c
  4258                           
  4259                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4260  003320  EF9E  F019         	goto	l3326
  4261  003324                     l3322:
  4262                           
  4263                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4264  003324  0E00               	movlw	0
  4265  003326  6E06               	movwf	(fputc@c+1)^0,c
  4266  003328  0E20               	movlw	32
  4267  00332A  6E05               	movwf	fputc@c^0,c
  4268  00332C  C015  F007         	movff	pad@fp,fputc@fp
  4269  003330  C016  F008         	movff	pad@fp+1,fputc@fp+1
  4270  003334  ECA3  F018         	call	_fputc	;wreg free
  4271  003338                     
  4272                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4273  003338  4A1C               	infsnz	pad@i^0,f,c
  4274  00333A  2A1D               	incf	(pad@i+1)^0,f,c
  4275  00333C                     l3326:
  4276                           
  4277                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4278  00333C  501E               	movf	pad@w^0,w,c
  4279  00333E  5C1C               	subwf	pad@i^0,w,c
  4280  003340  501D               	movf	(pad@i+1)^0,w,c
  4281  003342  0A80               	xorlw	128
  4282  003344  6E1B               	movwf	??_pad^0,c
  4283  003346  501F               	movf	(pad@w+1)^0,w,c
  4284  003348  0A80               	xorlw	128
  4285  00334A  581B               	subwfb	??_pad^0,w,c
  4286  00334C  A0D8               	btfss	status,0,c
  4287  00334E  EFAB  F019         	goto	u3681
  4288  003352  EFAD  F019         	goto	u3680
  4289  003356                     u3681:
  4290  003356  EF92  F019         	goto	l3322
  4291  00335A                     u3680:
  4292  00335A                     
  4293                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4294  00335A  B058               	btfsc	_flags^0,0,c
  4295  00335C  EFB2  F019         	goto	u3691
  4296  003360  EFB4  F019         	goto	u3690
  4297  003364                     u3691:
  4298  003364  EFBE  F019         	goto	l3330
  4299  003368                     u3690:
  4300  003368                     
  4301                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4302  003368  C017  F00E         	movff	pad@buf,fputs@s
  4303  00336C  C018  F00F         	movff	pad@buf+1,fputs@s+1
  4304  003370  C015  F010         	movff	pad@fp,fputs@fp
  4305  003374  C016  F011         	movff	pad@fp+1,fputs@fp+1
  4306  003378  EC44  F01C         	call	_fputs	;wreg free
  4307  00337C                     l3330:
  4308                           
  4309                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
  4310  00337C  C017  F005         	movff	pad@buf,strlen@s
  4311  003380  C018  F006         	movff	pad@buf+1,strlen@s+1
  4312  003384  ECF5  F01C         	call	_strlen	;wreg free
  4313  003388  501E               	movf	pad@w^0,w,c
  4314  00338A  2405               	addwf	?_strlen^0,w,c
  4315  00338C  6E15               	movwf	?_pad^0,c
  4316  00338E  501F               	movf	(pad@w+1)^0,w,c
  4317  003390  2006               	addwfc	(?_strlen+1)^0,w,c
  4318  003392  6E16               	movwf	(?_pad+1)^0,c
  4319  003394  0012               	return		;funcret
  4320  003396                     __end_of_pad:
  4321                           	callstack 0
  4322                           
  4323 ;; *************** function _strlen *****************
  4324 ;; Defined at:
  4325 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
  4326 ;; Parameters:    Size  Location     Type
  4327 ;;  s               2    4[COMRAM] PTR const unsigned char 
  4328 ;;		 -> dbuf(80), 
  4329 ;; Auto vars:     Size  Location     Type
  4330 ;;  a               2    6[COMRAM] PTR const unsigned char 
  4331 ;;		 -> dbuf(80), 
  4332 ;; Return value:  Size  Location     Type
  4333 ;;                  2    4[COMRAM] unsigned int 
  4334 ;; Registers used:
  4335 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4336 ;; Tracked objects:
  4337 ;;		On entry : 0/0
  4338 ;;		On exit  : 0/0
  4339 ;;		Unchanged: 0/0
  4340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4341 ;;      Params:         2       0       0       0       0       0       0       0       0
  4342 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4343 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4344 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4345 ;;Total ram usage:        4 bytes
  4346 ;; Hardware stack levels used:    1
  4347 ;; Hardware stack levels required when called:    2
  4348 ;; This function calls:
  4349 ;;		Nothing
  4350 ;; This function is called by:
  4351 ;;		_pad
  4352 ;; This function uses a non-reentrant model
  4353 ;;
  4354                           
  4355                           	psect	text10
  4356  0039EA                     __ptext10:
  4357                           	callstack 0
  4358  0039EA                     _strlen:
  4359                           	callstack 23
  4360  0039EA  C005  F007         	movff	strlen@s,strlen@a
  4361  0039EE  C006  F008         	movff	strlen@s+1,strlen@a+1
  4362  0039F2  EFFD  F01C         	goto	l2852
  4363  0039F6                     l2850:
  4364  0039F6  4A05               	infsnz	strlen@s^0,f,c
  4365  0039F8  2A06               	incf	(strlen@s+1)^0,f,c
  4366  0039FA                     l2852:
  4367  0039FA  C005  FFD9         	movff	strlen@s,fsr2l
  4368  0039FE  C006  FFDA         	movff	strlen@s+1,fsr2h
  4369  003A02  50DF               	movf	indf2,w,c
  4370  003A04  A4D8               	btfss	status,2,c
  4371  003A06  EF07  F01D         	goto	u2931
  4372  003A0A  EF09  F01D         	goto	u2930
  4373  003A0E                     u2931:
  4374  003A0E  EFFB  F01C         	goto	l2850
  4375  003A12                     u2930:
  4376  003A12  5007               	movf	strlen@a^0,w,c
  4377  003A14  5C05               	subwf	strlen@s^0,w,c
  4378  003A16  6E05               	movwf	?_strlen^0,c
  4379  003A18  5008               	movf	(strlen@a+1)^0,w,c
  4380  003A1A  5806               	subwfb	(strlen@s+1)^0,w,c
  4381  003A1C  6E06               	movwf	(?_strlen+1)^0,c
  4382  003A1E  0012               	return		;funcret
  4383  003A20                     __end_of_strlen:
  4384                           	callstack 0
  4385                           
  4386 ;; *************** function _fputs *****************
  4387 ;; Defined at:
  4388 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  4389 ;; Parameters:    Size  Location     Type
  4390 ;;  s               2   13[COMRAM] PTR const unsigned char 
  4391 ;;		 -> dbuf(80), 
  4392 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  4393 ;;		 -> sprintf@f(6), 
  4394 ;; Auto vars:     Size  Location     Type
  4395 ;;  i               2   18[COMRAM] int 
  4396 ;;  c               1   17[COMRAM] unsigned char 
  4397 ;; Return value:  Size  Location     Type
  4398 ;;                  2   13[COMRAM] int 
  4399 ;; Registers used:
  4400 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4401 ;; Tracked objects:
  4402 ;;		On entry : 0/0
  4403 ;;		On exit  : 0/0
  4404 ;;		Unchanged: 0/0
  4405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4406 ;;      Params:         4       0       0       0       0       0       0       0       0
  4407 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4408 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4409 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4410 ;;Total ram usage:        7 bytes
  4411 ;; Hardware stack levels used:    1
  4412 ;; Hardware stack levels required when called:    4
  4413 ;; This function calls:
  4414 ;;		_fputc
  4415 ;; This function is called by:
  4416 ;;		_pad
  4417 ;; This function uses a non-reentrant model
  4418 ;;
  4419                           
  4420                           	psect	text11
  4421  003888                     __ptext11:
  4422                           	callstack 0
  4423  003888                     _fputs:
  4424                           	callstack 21
  4425  003888  0E00               	movlw	0
  4426  00388A  6E14               	movwf	(fputs@i+1)^0,c
  4427  00388C  0E00               	movlw	0
  4428  00388E  6E13               	movwf	fputs@i^0,c
  4429  003890  EF55  F01C         	goto	l2846
  4430  003894                     l2842:
  4431  003894  C012  F005         	movff	fputs@c,fputc@c
  4432  003898  6A06               	clrf	(fputc@c+1)^0,c
  4433  00389A  C010  F007         	movff	fputs@fp,fputc@fp
  4434  00389E  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  4435  0038A2  ECA3  F018         	call	_fputc	;wreg free
  4436  0038A6  4A13               	infsnz	fputs@i^0,f,c
  4437  0038A8  2A14               	incf	(fputs@i+1)^0,f,c
  4438  0038AA                     l2846:
  4439  0038AA  5013               	movf	fputs@i^0,w,c
  4440  0038AC  240E               	addwf	fputs@s^0,w,c
  4441  0038AE  6ED9               	movwf	fsr2l,c
  4442  0038B0  5014               	movf	(fputs@i+1)^0,w,c
  4443  0038B2  200F               	addwfc	(fputs@s+1)^0,w,c
  4444  0038B4  6EDA               	movwf	fsr2h,c
  4445  0038B6  50DF               	movf	indf2,w,c
  4446  0038B8  6E12               	movwf	fputs@c^0,c
  4447  0038BA  5012               	movf	fputs@c^0,w,c
  4448  0038BC  A4D8               	btfss	status,2,c
  4449  0038BE  EF63  F01C         	goto	u2921
  4450  0038C2  EF65  F01C         	goto	u2920
  4451  0038C6                     u2921:
  4452  0038C6  EF4A  F01C         	goto	l2842
  4453  0038CA                     u2920:
  4454  0038CA  0012               	return		;funcret
  4455  0038CC                     __end_of_fputs:
  4456                           	callstack 0
  4457                           
  4458 ;; *************** function _fputc *****************
  4459 ;; Defined at:
  4460 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  4461 ;; Parameters:    Size  Location     Type
  4462 ;;  c               2    4[COMRAM] int 
  4463 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  4464 ;;		 -> sprintf@f(6), 
  4465 ;; Auto vars:     Size  Location     Type
  4466 ;;		None
  4467 ;; Return value:  Size  Location     Type
  4468 ;;                  2    4[COMRAM] int 
  4469 ;; Registers used:
  4470 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4471 ;; Tracked objects:
  4472 ;;		On entry : 0/0
  4473 ;;		On exit  : 0/0
  4474 ;;		Unchanged: 0/0
  4475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4476 ;;      Params:         4       0       0       0       0       0       0       0       0
  4477 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4478 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4479 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4480 ;;Total ram usage:        9 bytes
  4481 ;; Hardware stack levels used:    1
  4482 ;; Hardware stack levels required when called:    3
  4483 ;; This function calls:
  4484 ;;		_putch
  4485 ;; This function is called by:
  4486 ;;		_pad
  4487 ;;		_vfpfcnvrt
  4488 ;;		_fputs
  4489 ;; This function uses a non-reentrant model
  4490 ;;
  4491                           
  4492                           	psect	text12
  4493  003146                     __ptext12:
  4494                           	callstack 0
  4495  003146                     _fputc:
  4496                           	callstack 24
  4497  003146  5007               	movf	fputc@fp^0,w,c
  4498  003148  1008               	iorwf	(fputc@fp+1)^0,w,c
  4499  00314A  B4D8               	btfsc	status,2,c
  4500  00314C  EFAA  F018         	goto	u2491
  4501  003150  EFAC  F018         	goto	u2490
  4502  003154                     u2491:
  4503  003154  EFB5  F018         	goto	l2628
  4504  003158                     u2490:
  4505  003158  5007               	movf	fputc@fp^0,w,c
  4506  00315A  1008               	iorwf	(fputc@fp+1)^0,w,c
  4507  00315C  A4D8               	btfss	status,2,c
  4508  00315E  EFB3  F018         	goto	u2501
  4509  003162  EFB5  F018         	goto	u2500
  4510  003166                     u2501:
  4511  003166  EFBA  F018         	goto	l2630
  4512  00316A                     u2500:
  4513  00316A                     l2628:
  4514  00316A  5005               	movf	fputc@c^0,w,c
  4515  00316C  EC8C  F01D         	call	_putch
  4516  003170  EF07  F019         	goto	l1065
  4517  003174                     l2630:
  4518  003174  EE20 F004          	lfsr	2,4
  4519  003178  5007               	movf	fputc@fp^0,w,c
  4520  00317A  26D9               	addwf	fsr2l,f,c
  4521  00317C  5008               	movf	(fputc@fp+1)^0,w,c
  4522  00317E  22DA               	addwfc	fsr2h,f,c
  4523  003180  50DE               	movf	postinc2,w,c
  4524  003182  10DE               	iorwf	postinc2,w,c
  4525  003184  B4D8               	btfsc	status,2,c
  4526  003186  EFC7  F018         	goto	u2511
  4527  00318A  EFC9  F018         	goto	u2510
  4528  00318E                     u2511:
  4529  00318E  EFE4  F018         	goto	l2634
  4530  003192                     u2510:
  4531  003192  EE20 F004          	lfsr	2,4
  4532  003196  5007               	movf	fputc@fp^0,w,c
  4533  003198  26D9               	addwf	fsr2l,f,c
  4534  00319A  5008               	movf	(fputc@fp+1)^0,w,c
  4535  00319C  22DA               	addwfc	fsr2h,f,c
  4536  00319E  EE10 F002          	lfsr	1,2
  4537  0031A2  5007               	movf	fputc@fp^0,w,c
  4538  0031A4  26E1               	addwf	fsr1l,f,c
  4539  0031A6  5008               	movf	(fputc@fp+1)^0,w,c
  4540  0031A8  22E2               	addwfc	fsr1h,f,c
  4541  0031AA  50DE               	movf	postinc2,w,c
  4542  0031AC  5CE6               	subwf	postinc1,w,c
  4543  0031AE  50E6               	movf	postinc1,w,c
  4544  0031B0  0A80               	xorlw	128
  4545  0031B2  6E0D               	movwf	(??_fputc+4)^0,c
  4546  0031B4  50DE               	movf	postinc2,w,c
  4547  0031B6  0A80               	xorlw	128
  4548  0031B8  580D               	subwfb	(??_fputc+4)^0,w,c
  4549  0031BA  B0D8               	btfsc	status,0,c
  4550  0031BC  EFE2  F018         	goto	u2521
  4551  0031C0  EFE4  F018         	goto	u2520
  4552  0031C4                     u2521:
  4553  0031C4  EF07  F019         	goto	l1065
  4554  0031C8                     u2520:
  4555  0031C8                     l2634:
  4556  0031C8  EE20 F002          	lfsr	2,2
  4557  0031CC  5007               	movf	fputc@fp^0,w,c
  4558  0031CE  26D9               	addwf	fsr2l,f,c
  4559  0031D0  5008               	movf	(fputc@fp+1)^0,w,c
  4560  0031D2  22DA               	addwfc	fsr2h,f,c
  4561  0031D4  CFDE F009          	movff	postinc2,??_fputc
  4562  0031D8  CFDD F00A          	movff	postdec2,??_fputc+1
  4563  0031DC  C007  FFD9         	movff	fputc@fp,fsr2l
  4564  0031E0  C008  FFDA         	movff	fputc@fp+1,fsr2h
  4565  0031E4  CFDE F00B          	movff	postinc2,??_fputc+2
  4566  0031E8  CFDD F00C          	movff	postdec2,??_fputc+3
  4567  0031EC  5009               	movf	??_fputc^0,w,c
  4568  0031EE  240B               	addwf	(??_fputc+2)^0,w,c
  4569  0031F0  6ED9               	movwf	fsr2l,c
  4570  0031F2  500A               	movf	(??_fputc+1)^0,w,c
  4571  0031F4  200C               	addwfc	(??_fputc+3)^0,w,c
  4572  0031F6  6EDA               	movwf	fsr2h,c
  4573  0031F8  C005  FFDF         	movff	fputc@c,indf2
  4574  0031FC  EE20 F002          	lfsr	2,2
  4575  003200  5007               	movf	fputc@fp^0,w,c
  4576  003202  26D9               	addwf	fsr2l,f,c
  4577  003204  5008               	movf	(fputc@fp+1)^0,w,c
  4578  003206  22DA               	addwfc	fsr2h,f,c
  4579  003208  2ADE               	incf	postinc2,f,c
  4580  00320A  0E00               	movlw	0
  4581  00320C  22DD               	addwfc	postdec2,f,c
  4582  00320E                     l1065:
  4583  00320E  0012               	return		;funcret
  4584  003210                     __end_of_fputc:
  4585                           	callstack 0
  4586                           
  4587 ;; *************** function _putch *****************
  4588 ;; Defined at:
  4589 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\putch.c"
  4590 ;; Parameters:    Size  Location     Type
  4591 ;;  c               1    wreg     unsigned char 
  4592 ;; Auto vars:     Size  Location     Type
  4593 ;;  c               1    0[COMRAM] unsigned char 
  4594 ;; Return value:  Size  Location     Type
  4595 ;;                  1    wreg      void 
  4596 ;; Registers used:
  4597 ;;		wreg
  4598 ;; Tracked objects:
  4599 ;;		On entry : 0/0
  4600 ;;		On exit  : 0/0
  4601 ;;		Unchanged: 0/0
  4602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4603 ;;      Params:         0       0       0       0       0       0       0       0       0
  4604 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4605 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4606 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4607 ;;Total ram usage:        0 bytes
  4608 ;; Hardware stack levels used:    1
  4609 ;; Hardware stack levels required when called:    2
  4610 ;; This function calls:
  4611 ;;		Nothing
  4612 ;; This function is called by:
  4613 ;;		_fputc
  4614 ;; This function uses a non-reentrant model
  4615 ;;
  4616                           
  4617                           	psect	text13
  4618  003B18                     __ptext13:
  4619                           	callstack 0
  4620  003B18                     _putch:
  4621                           	callstack 24
  4622  003B18  0012               	return		;funcret
  4623  003B1A                     __end_of_putch:
  4624                           	callstack 0
  4625                           
  4626 ;; *************** function _floorf *****************
  4627 ;; Defined at:
  4628 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\floorf.c"
  4629 ;; Parameters:    Size  Location     Type
  4630 ;;  x               4   29[COMRAM] float 
  4631 ;; Auto vars:     Size  Location     Type
  4632 ;;  u               4   45[COMRAM] struct .
  4633 ;;  m               4   39[COMRAM] unsigned long 
  4634 ;;  e               2   43[COMRAM] int 
  4635 ;; Return value:  Size  Location     Type
  4636 ;;                  4   29[COMRAM] float 
  4637 ;; Registers used:
  4638 ;;		wreg, status,2, status,0
  4639 ;; Tracked objects:
  4640 ;;		On entry : 0/0
  4641 ;;		On exit  : 0/0
  4642 ;;		Unchanged: 0/0
  4643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4644 ;;      Params:         4       0       0       0       0       0       0       0       0
  4645 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4646 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4647 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4648 ;;Total ram usage:       20 bytes
  4649 ;; Hardware stack levels used:    1
  4650 ;; Hardware stack levels required when called:    2
  4651 ;; This function calls:
  4652 ;;		Nothing
  4653 ;; This function is called by:
  4654 ;;		_efgtoa
  4655 ;; This function uses a non-reentrant model
  4656 ;;
  4657                           
  4658                           	psect	text14
  4659  002812                     __ptext14:
  4660                           	callstack 0
  4661  002812                     _floorf:
  4662                           	callstack 24
  4663  002812  C0BE  F02E         	movff	floorf@F524,floorf@u
  4664  002816  C0BF  F02F         	movff	floorf@F524+1,floorf@u+1
  4665  00281A  C0C0  F030         	movff	floorf@F524+2,floorf@u+2
  4666  00281E  C0C1  F031         	movff	floorf@F524+3,floorf@u+3
  4667  002822  C01E  F02E         	movff	floorf@x,floorf@u
  4668  002826  C01F  F02F         	movff	floorf@x+1,floorf@u+1
  4669  00282A  C020  F030         	movff	floorf@x+2,floorf@u+2
  4670  00282E  C021  F031         	movff	floorf@x+3,floorf@u+3
  4671  002832  0E81               	movlw	129
  4672  002834  6E22               	movwf	??_floorf^0,c
  4673  002836  0EFF               	movlw	255
  4674  002838  6E23               	movwf	(??_floorf+1)^0,c
  4675  00283A  C02E  F024         	movff	floorf@u,??_floorf+2
  4676  00283E  C02F  F025         	movff	floorf@u+1,??_floorf+3
  4677  002842  C030  F026         	movff	floorf@u+2,??_floorf+4
  4678  002846  C031  F027         	movff	floorf@u+3,??_floorf+5
  4679  00284A  0E18               	movlw	24
  4680  00284C  EF2D  F014         	goto	u3820
  4681  002850                     u3825:
  4682  002850  90D8               	bcf	status,0,c
  4683  002852  3227               	rrcf	(??_floorf+5)^0,f,c
  4684  002854  3226               	rrcf	(??_floorf+4)^0,f,c
  4685  002856  3225               	rrcf	(??_floorf+3)^0,f,c
  4686  002858  3224               	rrcf	(??_floorf+2)^0,f,c
  4687  00285A                     u3820:
  4688  00285A  2EE8               	decfsz	wreg,f,c
  4689  00285C  EF28  F014         	goto	u3825
  4690  002860  5024               	movf	(??_floorf+2)^0,w,c
  4691  002862  2422               	addwf	??_floorf^0,w,c
  4692  002864  6E2C               	movwf	floorf@e^0,c
  4693  002866  0E00               	movlw	0
  4694  002868  2023               	addwfc	(??_floorf+1)^0,w,c
  4695  00286A  6E2D               	movwf	(floorf@e+1)^0,c
  4696  00286C  BE2D               	btfsc	(floorf@e+1)^0,7,c
  4697  00286E  EF42  F014         	goto	u3831
  4698  002872  502D               	movf	(floorf@e+1)^0,w,c
  4699  002874  E109               	bnz	u3830
  4700  002876  0E17               	movlw	23
  4701  002878  5C2C               	subwf	floorf@e^0,w,c
  4702  00287A  A0D8               	btfss	status,0,c
  4703  00287C  EF42  F014         	goto	u3831
  4704  002880  EF44  F014         	goto	u3830
  4705  002884                     u3831:
  4706  002884  EF4E  F014         	goto	l3376
  4707  002888                     u3830:
  4708  002888                     l3374:
  4709  002888  C01E  F01E         	movff	floorf@x,?_floorf
  4710  00288C  C01F  F01F         	movff	floorf@x+1,?_floorf+1
  4711  002890  C020  F020         	movff	floorf@x+2,?_floorf+2
  4712  002894  C021  F021         	movff	floorf@x+3,?_floorf+3
  4713  002898  EF11  F015         	goto	l1026
  4714  00289C                     l3376:
  4715  00289C  BE2D               	btfsc	(floorf@e+1)^0,7,c
  4716  00289E  EF53  F014         	goto	u3841
  4717  0028A2  EF55  F014         	goto	u3840
  4718  0028A6                     u3841:
  4719  0028A6  EFC5  F014         	goto	l3386
  4720  0028AA                     u3840:
  4721  0028AA  C02C  F022         	movff	floorf@e,??_floorf
  4722  0028AE  0EFF               	movlw	255
  4723  0028B0  6E23               	movwf	(??_floorf+1)^0,c
  4724  0028B2  0EFF               	movlw	255
  4725  0028B4  6E24               	movwf	(??_floorf+2)^0,c
  4726  0028B6  0E7F               	movlw	127
  4727  0028B8  6E25               	movwf	(??_floorf+3)^0,c
  4728  0028BA  0E00               	movlw	0
  4729  0028BC  6E26               	movwf	(??_floorf+4)^0,c
  4730  0028BE                     u3855:
  4731  0028BE  6622               	tstfsz	??_floorf^0,c
  4732  0028C0  EF64  F014         	goto	u3856
  4733  0028C4  EF6C  F014         	goto	u3857
  4734  0028C8                     u3856:
  4735  0028C8  3426               	rlcf	(??_floorf+4)^0,w,c
  4736  0028CA  3226               	rrcf	(??_floorf+4)^0,f,c
  4737  0028CC  3225               	rrcf	(??_floorf+3)^0,f,c
  4738  0028CE  3224               	rrcf	(??_floorf+2)^0,f,c
  4739  0028D0  3223               	rrcf	(??_floorf+1)^0,f,c
  4740  0028D2  2E22               	decfsz	??_floorf^0,f,c
  4741  0028D4  EF5F  F014         	goto	u3855
  4742  0028D8                     u3857:
  4743  0028D8  C023  F028         	movff	??_floorf+1,floorf@m
  4744  0028DC  C024  F029         	movff	??_floorf+2,floorf@m+1
  4745  0028E0  C025  F02A         	movff	??_floorf+3,floorf@m+2
  4746  0028E4  C026  F02B         	movff	??_floorf+4,floorf@m+3
  4747  0028E8  5028               	movf	floorf@m^0,w,c
  4748  0028EA  142E               	andwf	floorf@u^0,w,c
  4749  0028EC  6E22               	movwf	??_floorf^0,c
  4750  0028EE  5029               	movf	(floorf@m+1)^0,w,c
  4751  0028F0  142F               	andwf	(floorf@u+1)^0,w,c
  4752  0028F2  6E23               	movwf	(??_floorf+1)^0,c
  4753  0028F4  502A               	movf	(floorf@m+2)^0,w,c
  4754  0028F6  1430               	andwf	(floorf@u+2)^0,w,c
  4755  0028F8  6E24               	movwf	(??_floorf+2)^0,c
  4756  0028FA  502B               	movf	(floorf@m+3)^0,w,c
  4757  0028FC  1431               	andwf	(floorf@u+3)^0,w,c
  4758  0028FE  6E25               	movwf	(??_floorf+3)^0,c
  4759  002900  5022               	movf	??_floorf^0,w,c
  4760  002902  1023               	iorwf	(??_floorf+1)^0,w,c
  4761  002904  1024               	iorwf	(??_floorf+2)^0,w,c
  4762  002906  1025               	iorwf	(??_floorf+3)^0,w,c
  4763  002908  A4D8               	btfss	status,2,c
  4764  00290A  EF89  F014         	goto	u3861
  4765  00290E  EF8B  F014         	goto	u3860
  4766  002912                     u3861:
  4767  002912  EF8D  F014         	goto	l3382
  4768  002916                     u3860:
  4769  002916  EF44  F014         	goto	l3374
  4770  00291A                     l3382:
  4771  00291A  C02E  F022         	movff	floorf@u,??_floorf
  4772  00291E  C02F  F023         	movff	floorf@u+1,??_floorf+1
  4773  002922  C030  F024         	movff	floorf@u+2,??_floorf+2
  4774  002926  C031  F025         	movff	floorf@u+3,??_floorf+3
  4775  00292A  0E20               	movlw	32
  4776  00292C  EF9D  F014         	goto	u3870
  4777  002930                     u3875:
  4778  002930  90D8               	bcf	status,0,c
  4779  002932  3225               	rrcf	(??_floorf+3)^0,f,c
  4780  002934  3224               	rrcf	(??_floorf+2)^0,f,c
  4781  002936  3223               	rrcf	(??_floorf+1)^0,f,c
  4782  002938  3222               	rrcf	??_floorf^0,f,c
  4783  00293A                     u3870:
  4784  00293A  2EE8               	decfsz	wreg,f,c
  4785  00293C  EF98  F014         	goto	u3875
  4786  002940  5022               	movf	??_floorf^0,w,c
  4787  002942  1023               	iorwf	(??_floorf+1)^0,w,c
  4788  002944  1024               	iorwf	(??_floorf+2)^0,w,c
  4789  002946  1025               	iorwf	(??_floorf+3)^0,w,c
  4790  002948  B4D8               	btfsc	status,2,c
  4791  00294A  EFA9  F014         	goto	u3881
  4792  00294E  EFAB  F014         	goto	u3880
  4793  002952                     u3881:
  4794  002952  EFB3  F014         	goto	l1029
  4795  002956                     u3880:
  4796  002956  5028               	movf	floorf@m^0,w,c
  4797  002958  262E               	addwf	floorf@u^0,f,c
  4798  00295A  5029               	movf	(floorf@m+1)^0,w,c
  4799  00295C  222F               	addwfc	(floorf@u+1)^0,f,c
  4800  00295E  502A               	movf	(floorf@m+2)^0,w,c
  4801  002960  2230               	addwfc	(floorf@u+2)^0,f,c
  4802  002962  502B               	movf	(floorf@m+3)^0,w,c
  4803  002964  2231               	addwfc	(floorf@u+3)^0,f,c
  4804  002966                     l1029:
  4805  002966  1C28               	comf	floorf@m^0,w,c
  4806  002968  6E22               	movwf	??_floorf^0,c
  4807  00296A  1C29               	comf	(floorf@m+1)^0,w,c
  4808  00296C  6E23               	movwf	(??_floorf+1)^0,c
  4809  00296E  1C2A               	comf	(floorf@m+2)^0,w,c
  4810  002970  6E24               	movwf	(??_floorf+2)^0,c
  4811  002972  1C2B               	comf	(floorf@m+3)^0,w,c
  4812  002974  6E25               	movwf	(??_floorf+3)^0,c
  4813  002976  5022               	movf	??_floorf^0,w,c
  4814  002978  162E               	andwf	floorf@u^0,f,c
  4815  00297A  5023               	movf	(??_floorf+1)^0,w,c
  4816  00297C  162F               	andwf	(floorf@u+1)^0,f,c
  4817  00297E  5024               	movf	(??_floorf+2)^0,w,c
  4818  002980  1630               	andwf	(floorf@u+2)^0,f,c
  4819  002982  5025               	movf	(??_floorf+3)^0,w,c
  4820  002984  1631               	andwf	(floorf@u+3)^0,f,c
  4821  002986  EF09  F015         	goto	l3394
  4822  00298A                     l3386:
  4823  00298A  C02E  F022         	movff	floorf@u,??_floorf
  4824  00298E  C02F  F023         	movff	floorf@u+1,??_floorf+1
  4825  002992  C030  F024         	movff	floorf@u+2,??_floorf+2
  4826  002996  C031  F025         	movff	floorf@u+3,??_floorf+3
  4827  00299A  0E20               	movlw	32
  4828  00299C  EFD5  F014         	goto	u3890
  4829  0029A0                     u3895:
  4830  0029A0  90D8               	bcf	status,0,c
  4831  0029A2  3225               	rrcf	(??_floorf+3)^0,f,c
  4832  0029A4  3224               	rrcf	(??_floorf+2)^0,f,c
  4833  0029A6  3223               	rrcf	(??_floorf+1)^0,f,c
  4834  0029A8  3222               	rrcf	??_floorf^0,f,c
  4835  0029AA                     u3890:
  4836  0029AA  2EE8               	decfsz	wreg,f,c
  4837  0029AC  EFD0  F014         	goto	u3895
  4838  0029B0  5022               	movf	??_floorf^0,w,c
  4839  0029B2  1023               	iorwf	(??_floorf+1)^0,w,c
  4840  0029B4  1024               	iorwf	(??_floorf+2)^0,w,c
  4841  0029B6  1025               	iorwf	(??_floorf+3)^0,w,c
  4842  0029B8  A4D8               	btfss	status,2,c
  4843  0029BA  EFE1  F014         	goto	u3901
  4844  0029BE  EFE3  F014         	goto	u3900
  4845  0029C2                     u3901:
  4846  0029C2  EFED  F014         	goto	l3390
  4847  0029C6                     u3900:
  4848  0029C6  0E00               	movlw	0
  4849  0029C8  6E2E               	movwf	floorf@u^0,c
  4850  0029CA  0E00               	movlw	0
  4851  0029CC  6E2F               	movwf	(floorf@u+1)^0,c
  4852  0029CE  0E00               	movlw	0
  4853  0029D0  6E30               	movwf	(floorf@u+2)^0,c
  4854  0029D2  0E00               	movlw	0
  4855  0029D4  6E31               	movwf	(floorf@u+3)^0,c
  4856  0029D6  EF09  F015         	goto	l3394
  4857  0029DA                     l3390:
  4858  0029DA  90D8               	bcf	status,0,c
  4859  0029DC  342E               	rlcf	floorf@u^0,w,c
  4860  0029DE  6E22               	movwf	??_floorf^0,c
  4861  0029E0  342F               	rlcf	(floorf@u+1)^0,w,c
  4862  0029E2  6E23               	movwf	(??_floorf+1)^0,c
  4863  0029E4  3430               	rlcf	(floorf@u+2)^0,w,c
  4864  0029E6  6E24               	movwf	(??_floorf+2)^0,c
  4865  0029E8  3431               	rlcf	(floorf@u+3)^0,w,c
  4866  0029EA  6E25               	movwf	(??_floorf+3)^0,c
  4867  0029EC  5022               	movf	??_floorf^0,w,c
  4868  0029EE  1023               	iorwf	(??_floorf+1)^0,w,c
  4869  0029F0  1024               	iorwf	(??_floorf+2)^0,w,c
  4870  0029F2  1025               	iorwf	(??_floorf+3)^0,w,c
  4871  0029F4  B4D8               	btfsc	status,2,c
  4872  0029F6  EFFF  F014         	goto	u3911
  4873  0029FA  EF01  F015         	goto	u3910
  4874  0029FE                     u3911:
  4875  0029FE  EF09  F015         	goto	l3394
  4876  002A02                     u3910:
  4877  002A02  0E00               	movlw	0
  4878  002A04  6E2E               	movwf	floorf@u^0,c
  4879  002A06  0E00               	movlw	0
  4880  002A08  6E2F               	movwf	(floorf@u+1)^0,c
  4881  002A0A  0E80               	movlw	128
  4882  002A0C  6E30               	movwf	(floorf@u+2)^0,c
  4883  002A0E  0EBF               	movlw	191
  4884  002A10  6E31               	movwf	(floorf@u+3)^0,c
  4885  002A12                     l3394:
  4886  002A12  C02E  F01E         	movff	floorf@u,?_floorf
  4887  002A16  C02F  F01F         	movff	floorf@u+1,?_floorf+1
  4888  002A1A  C030  F020         	movff	floorf@u+2,?_floorf+2
  4889  002A1E  C031  F021         	movff	floorf@u+3,?_floorf+3
  4890  002A22                     l1026:
  4891  002A22  0012               	return		;funcret
  4892  002A24                     __end_of_floorf:
  4893                           	callstack 0
  4894                           
  4895 ;; *************** function ___fpclassifyf *****************
  4896 ;; Defined at:
  4897 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\__fpclassifyf.c"
  4898 ;; Parameters:    Size  Location     Type
  4899 ;;  x               4    4[COMRAM] float 
  4900 ;; Auto vars:     Size  Location     Type
  4901 ;;  u               4   14[COMRAM] struct .
  4902 ;;  e               2   12[COMRAM] int 
  4903 ;; Return value:  Size  Location     Type
  4904 ;;                  2    4[COMRAM] int 
  4905 ;; Registers used:
  4906 ;;		wreg, status,2, status,0
  4907 ;; Tracked objects:
  4908 ;;		On entry : 0/0
  4909 ;;		On exit  : 0/0
  4910 ;;		Unchanged: 0/0
  4911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4912 ;;      Params:         4       0       0       0       0       0       0       0       0
  4913 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4914 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4915 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4916 ;;Total ram usage:       14 bytes
  4917 ;; Hardware stack levels used:    1
  4918 ;; Hardware stack levels required when called:    2
  4919 ;; This function calls:
  4920 ;;		Nothing
  4921 ;; This function is called by:
  4922 ;;		_efgtoa
  4923 ;; This function uses a non-reentrant model
  4924 ;;
  4925                           
  4926                           	psect	text15
  4927  002F72                     __ptext15:
  4928                           	callstack 0
  4929  002F72                     ___fpclassifyf:
  4930                           	callstack 24
  4931  002F72  C050  F00F         	movff	___fpclassifyf@F463,___fpclassifyf@u
  4932  002F76  C051  F010         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  4933  002F7A  C052  F011         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  4934  002F7E  C053  F012         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  4935  002F82  C005  F00F         	movff	___fpclassifyf@x,___fpclassifyf@u
  4936  002F86  C006  F010         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4937  002F8A  C007  F011         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4938  002F8E  C008  F012         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4939  002F92  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  4940  002F96  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4941  002F9A  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4942  002F9E  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4943  002FA2  0E18               	movlw	24
  4944  002FA4  EFD9  F017         	goto	u3700
  4945  002FA8                     u3705:
  4946  002FA8  90D8               	bcf	status,0,c
  4947  002FAA  320C               	rrcf	(??___fpclassifyf+3)^0,f,c
  4948  002FAC  320B               	rrcf	(??___fpclassifyf+2)^0,f,c
  4949  002FAE  320A               	rrcf	(??___fpclassifyf+1)^0,f,c
  4950  002FB0  3209               	rrcf	??___fpclassifyf^0,f,c
  4951  002FB2                     u3700:
  4952  002FB2  2EE8               	decfsz	wreg,f,c
  4953  002FB4  EFD4  F017         	goto	u3705
  4954  002FB8  5009               	movf	??___fpclassifyf^0,w,c
  4955  002FBA  6E0D               	movwf	___fpclassifyf@e^0,c
  4956  002FBC  6A0E               	clrf	(___fpclassifyf@e+1)^0,c
  4957  002FBE  500D               	movf	___fpclassifyf@e^0,w,c
  4958  002FC0  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4959  002FC2  A4D8               	btfss	status,2,c
  4960  002FC4  EFE6  F017         	goto	u3711
  4961  002FC8  EFE8  F017         	goto	u3710
  4962  002FCC                     u3711:
  4963  002FCC  EF08  F018         	goto	l3346
  4964  002FD0                     u3710:
  4965  002FD0  90D8               	bcf	status,0,c
  4966  002FD2  340F               	rlcf	___fpclassifyf@u^0,w,c
  4967  002FD4  6E09               	movwf	??___fpclassifyf^0,c
  4968  002FD6  3410               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4969  002FD8  6E0A               	movwf	(??___fpclassifyf+1)^0,c
  4970  002FDA  3411               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4971  002FDC  6E0B               	movwf	(??___fpclassifyf+2)^0,c
  4972  002FDE  3412               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4973  002FE0  6E0C               	movwf	(??___fpclassifyf+3)^0,c
  4974  002FE2  5009               	movf	??___fpclassifyf^0,w,c
  4975  002FE4  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  4976  002FE6  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  4977  002FE8  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  4978  002FEA  A4D8               	btfss	status,2,c
  4979  002FEC  EFFA  F017         	goto	u3721
  4980  002FF0  EFFC  F017         	goto	u3720
  4981  002FF4                     u3721:
  4982  002FF4  EF02  F018         	goto	l3342
  4983  002FF8                     u3720:
  4984  002FF8  0E00               	movlw	0
  4985  002FFA  6E06               	movwf	(?___fpclassifyf+1)^0,c
  4986  002FFC  0E02               	movlw	2
  4987  002FFE  6E05               	movwf	?___fpclassifyf^0,c
  4988  003000  EF37  F018         	goto	l988
  4989  003004                     l3342:
  4990  003004  0E00               	movlw	0
  4991  003006  6E06               	movwf	(?___fpclassifyf+1)^0,c
  4992  003008  0E03               	movlw	3
  4993  00300A  6E05               	movwf	?___fpclassifyf^0,c
  4994  00300C  EF37  F018         	goto	l988
  4995  003010                     l3346:
  4996  003010  280D               	incf	___fpclassifyf@e^0,w,c
  4997  003012  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4998  003014  A4D8               	btfss	status,2,c
  4999  003016  EF0F  F018         	goto	u3731
  5000  00301A  EF11  F018         	goto	u3730
  5001  00301E                     u3731:
  5002  00301E  EF33  F018         	goto	l3352
  5003  003022                     u3730:
  5004  003022  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  5005  003026  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5006  00302A  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5007  00302E  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5008  003032  0E09               	movlw	9
  5009  003034                     u3745:
  5010  003034  90D8               	bcf	status,0,c
  5011  003036  3609               	rlcf	??___fpclassifyf^0,f,c
  5012  003038  360A               	rlcf	(??___fpclassifyf+1)^0,f,c
  5013  00303A  360B               	rlcf	(??___fpclassifyf+2)^0,f,c
  5014  00303C  360C               	rlcf	(??___fpclassifyf+3)^0,f,c
  5015  00303E  2EE8               	decfsz	wreg,f,c
  5016  003040  EF1A  F018         	goto	u3745
  5017  003044  5009               	movf	??___fpclassifyf^0,w,c
  5018  003046  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  5019  003048  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  5020  00304A  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  5021  00304C  B4D8               	btfsc	status,2,c
  5022  00304E  EF2B  F018         	goto	u3751
  5023  003052  EF2E  F018         	goto	u3750
  5024  003056                     u3751:
  5025  003056  0E01               	movlw	1
  5026  003058  EF2F  F018         	goto	u3760
  5027  00305C                     u3750:
  5028  00305C  0E00               	movlw	0
  5029  00305E                     u3760:
  5030  00305E  6E05               	movwf	?___fpclassifyf^0,c
  5031  003060  6A06               	clrf	(?___fpclassifyf+1)^0,c
  5032  003062  EF37  F018         	goto	l988
  5033  003066                     l3352:
  5034  003066  0E00               	movlw	0
  5035  003068  6E06               	movwf	(?___fpclassifyf+1)^0,c
  5036  00306A  0E04               	movlw	4
  5037  00306C  6E05               	movwf	?___fpclassifyf^0,c
  5038  00306E                     l988:
  5039  00306E  0012               	return		;funcret
  5040  003070                     __end_of___fpclassifyf:
  5041                           	callstack 0
  5042                           
  5043 ;; *************** function ___fltol *****************
  5044 ;; Defined at:
  5045 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fltol.c"
  5046 ;; Parameters:    Size  Location     Type
  5047 ;;  f1              4    4[COMRAM] int 
  5048 ;; Auto vars:     Size  Location     Type
  5049 ;;  exp1            1   13[COMRAM] unsigned char 
  5050 ;;  sign1           1   12[COMRAM] unsigned char 
  5051 ;; Return value:  Size  Location     Type
  5052 ;;                  4    4[COMRAM] long 
  5053 ;; Registers used:
  5054 ;;		wreg, status,2, status,0
  5055 ;; Tracked objects:
  5056 ;;		On entry : 0/0
  5057 ;;		On exit  : 0/0
  5058 ;;		Unchanged: 0/0
  5059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5060 ;;      Params:         4       0       0       0       0       0       0       0       0
  5061 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5062 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5063 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5064 ;;Total ram usage:       10 bytes
  5065 ;; Hardware stack levels used:    1
  5066 ;; Hardware stack levels required when called:    2
  5067 ;; This function calls:
  5068 ;;		Nothing
  5069 ;; This function is called by:
  5070 ;;		_efgtoa
  5071 ;; This function uses a non-reentrant model
  5072 ;;
  5073                           
  5074                           	psect	text16
  5075  002D68                     __ptext16:
  5076                           	callstack 0
  5077  002D68                     ___fltol:
  5078                           	callstack 24
  5079  002D68  3407               	rlcf	(___fltol@f1+2)^0,w,c
  5080  002D6A  3408               	rlcf	(___fltol@f1+3)^0,w,c
  5081  002D6C  6E0E               	movwf	___fltol@exp1^0,c
  5082  002D6E  500E               	movf	___fltol@exp1^0,w,c
  5083  002D70  A4D8               	btfss	status,2,c
  5084  002D72  EFBD  F016         	goto	u3591
  5085  002D76  EFBF  F016         	goto	u3590
  5086  002D7A                     u3591:
  5087  002D7A  EFC9  F016         	goto	l3274
  5088  002D7E                     u3590:
  5089  002D7E                     l3270:
  5090  002D7E  0E00               	movlw	0
  5091  002D80  6E05               	movwf	?___fltol^0,c
  5092  002D82  0E00               	movlw	0
  5093  002D84  6E06               	movwf	(?___fltol+1)^0,c
  5094  002D86  0E00               	movlw	0
  5095  002D88  6E07               	movwf	(?___fltol+2)^0,c
  5096  002D8A  0E00               	movlw	0
  5097  002D8C  6E08               	movwf	(?___fltol+3)^0,c
  5098  002D8E  EF36  F017         	goto	l429
  5099  002D92                     l3274:
  5100  002D92  C005  F009         	movff	___fltol@f1,??___fltol
  5101  002D96  C006  F00A         	movff	___fltol@f1+1,??___fltol+1
  5102  002D9A  C007  F00B         	movff	___fltol@f1+2,??___fltol+2
  5103  002D9E  C008  F00C         	movff	___fltol@f1+3,??___fltol+3
  5104  002DA2  0E20               	movlw	32
  5105  002DA4  EFD9  F016         	goto	u3600
  5106  002DA8                     u3605:
  5107  002DA8  90D8               	bcf	status,0,c
  5108  002DAA  320C               	rrcf	(??___fltol+3)^0,f,c
  5109  002DAC  320B               	rrcf	(??___fltol+2)^0,f,c
  5110  002DAE  320A               	rrcf	(??___fltol+1)^0,f,c
  5111  002DB0  3209               	rrcf	??___fltol^0,f,c
  5112  002DB2                     u3600:
  5113  002DB2  2EE8               	decfsz	wreg,f,c
  5114  002DB4  EFD4  F016         	goto	u3605
  5115  002DB8  5009               	movf	??___fltol^0,w,c
  5116  002DBA  6E0D               	movwf	___fltol@sign1^0,c
  5117  002DBC  8E07               	bsf	(___fltol@f1+2)^0,7,c
  5118  002DBE  0EFF               	movlw	255
  5119  002DC0  1605               	andwf	___fltol@f1^0,f,c
  5120  002DC2  0EFF               	movlw	255
  5121  002DC4  1606               	andwf	(___fltol@f1+1)^0,f,c
  5122  002DC6  0EFF               	movlw	255
  5123  002DC8  1607               	andwf	(___fltol@f1+2)^0,f,c
  5124  002DCA  0E00               	movlw	0
  5125  002DCC  1608               	andwf	(___fltol@f1+3)^0,f,c
  5126  002DCE  0E96               	movlw	150
  5127  002DD0  5E0E               	subwf	___fltol@exp1^0,f,c
  5128  002DD2  BE0E               	btfsc	___fltol@exp1^0,7,c
  5129  002DD4  EFF0  F016         	goto	u3610
  5130  002DD8  EFEE  F016         	goto	u3611
  5131  002DDC                     u3611:
  5132  002DDC  EF06  F017         	goto	l3294
  5133  002DE0                     u3610:
  5134  002DE0  500E               	movf	___fltol@exp1^0,w,c
  5135  002DE2  0A80               	xorlw	128
  5136  002DE4  0F97               	addlw	151
  5137  002DE6  B0D8               	btfsc	status,0,c
  5138  002DE8  EFF8  F016         	goto	u3621
  5139  002DEC  EFFA  F016         	goto	u3620
  5140  002DF0                     u3621:
  5141  002DF0  EFFC  F016         	goto	l3290
  5142  002DF4                     u3620:
  5143  002DF4  EFBF  F016         	goto	l3270
  5144  002DF8                     l3290:
  5145  002DF8  90D8               	bcf	status,0,c
  5146  002DFA  3208               	rrcf	(___fltol@f1+3)^0,f,c
  5147  002DFC  3207               	rrcf	(___fltol@f1+2)^0,f,c
  5148  002DFE  3206               	rrcf	(___fltol@f1+1)^0,f,c
  5149  002E00  3205               	rrcf	___fltol@f1^0,f,c
  5150  002E02  3E0E               	incfsz	___fltol@exp1^0,f,c
  5151  002E04  EFFC  F016         	goto	l3290
  5152  002E08  EF1E  F017         	goto	l3304
  5153  002E0C                     l3294:
  5154  002E0C  0E1F               	movlw	31
  5155  002E0E  640E               	cpfsgt	___fltol@exp1^0,c
  5156  002E10  EF0C  F017         	goto	u3631
  5157  002E14  EF0E  F017         	goto	u3630
  5158  002E18                     u3631:
  5159  002E18  EF16  F017         	goto	l3302
  5160  002E1C                     u3630:
  5161  002E1C  EFBF  F016         	goto	l3270
  5162  002E20                     l3300:
  5163  002E20  90D8               	bcf	status,0,c
  5164  002E22  3605               	rlcf	___fltol@f1^0,f,c
  5165  002E24  3606               	rlcf	(___fltol@f1+1)^0,f,c
  5166  002E26  3607               	rlcf	(___fltol@f1+2)^0,f,c
  5167  002E28  3608               	rlcf	(___fltol@f1+3)^0,f,c
  5168  002E2A  060E               	decf	___fltol@exp1^0,f,c
  5169  002E2C                     l3302:
  5170  002E2C  500E               	movf	___fltol@exp1^0,w,c
  5171  002E2E  A4D8               	btfss	status,2,c
  5172  002E30  EF1C  F017         	goto	u3641
  5173  002E34  EF1E  F017         	goto	u3640
  5174  002E38                     u3641:
  5175  002E38  EF10  F017         	goto	l3300
  5176  002E3C                     u3640:
  5177  002E3C                     l3304:
  5178  002E3C  500D               	movf	___fltol@sign1^0,w,c
  5179  002E3E  B4D8               	btfsc	status,2,c
  5180  002E40  EF24  F017         	goto	u3651
  5181  002E44  EF26  F017         	goto	u3650
  5182  002E48                     u3651:
  5183  002E48  EF2E  F017         	goto	l3308
  5184  002E4C                     u3650:
  5185  002E4C  1E08               	comf	(___fltol@f1+3)^0,f,c
  5186  002E4E  1E07               	comf	(___fltol@f1+2)^0,f,c
  5187  002E50  1E06               	comf	(___fltol@f1+1)^0,f,c
  5188  002E52  6C05               	negf	___fltol@f1^0,c
  5189  002E54  0E00               	movlw	0
  5190  002E56  2206               	addwfc	(___fltol@f1+1)^0,f,c
  5191  002E58  2207               	addwfc	(___fltol@f1+2)^0,f,c
  5192  002E5A  2208               	addwfc	(___fltol@f1+3)^0,f,c
  5193  002E5C                     l3308:
  5194  002E5C  C005  F005         	movff	___fltol@f1,?___fltol
  5195  002E60  C006  F006         	movff	___fltol@f1+1,?___fltol+1
  5196  002E64  C007  F007         	movff	___fltol@f1+2,?___fltol+2
  5197  002E68  C008  F008         	movff	___fltol@f1+3,?___fltol+3
  5198  002E6C                     l429:
  5199  002E6C  0012               	return		;funcret
  5200  002E6E                     __end_of___fltol:
  5201                           	callstack 0
  5202                           
  5203 ;; *************** function ___flsub *****************
  5204 ;; Defined at:
  5205 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  5206 ;; Parameters:    Size  Location     Type
  5207 ;;  b               4   43[COMRAM] long 
  5208 ;;  a               4   47[COMRAM] long 
  5209 ;; Auto vars:     Size  Location     Type
  5210 ;;		None
  5211 ;; Return value:  Size  Location     Type
  5212 ;;                  4   43[COMRAM] long 
  5213 ;; Registers used:
  5214 ;;		wreg, status,2, status,0, cstack
  5215 ;; Tracked objects:
  5216 ;;		On entry : 0/0
  5217 ;;		On exit  : 0/0
  5218 ;;		Unchanged: 0/0
  5219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5220 ;;      Params:         8       0       0       0       0       0       0       0       0
  5221 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5222 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5223 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5224 ;;Total ram usage:        8 bytes
  5225 ;; Hardware stack levels used:    1
  5226 ;; Hardware stack levels required when called:    3
  5227 ;; This function calls:
  5228 ;;		___fladd
  5229 ;; This function is called by:
  5230 ;;		_efgtoa
  5231 ;; This function uses a non-reentrant model
  5232 ;;
  5233                           
  5234                           	psect	text17
  5235  0037FC                     __ptext17:
  5236                           	callstack 0
  5237  0037FC                     ___flsub:
  5238                           	callstack 23
  5239  0037FC  0E00               	movlw	0
  5240  0037FE  1A30               	xorwf	___flsub@a^0,f,c
  5241  003800  0E00               	movlw	0
  5242  003802  1A31               	xorwf	(___flsub@a+1)^0,f,c
  5243  003804  0E00               	movlw	0
  5244  003806  1A32               	xorwf	(___flsub@a+2)^0,f,c
  5245  003808  0E80               	movlw	128
  5246  00380A  1A33               	xorwf	(___flsub@a+3)^0,f,c
  5247  00380C  C02C  F005         	movff	___flsub@b,___fladd@b
  5248  003810  C02D  F006         	movff	___flsub@b+1,___fladd@b+1
  5249  003814  C02E  F007         	movff	___flsub@b+2,___fladd@b+2
  5250  003818  C02F  F008         	movff	___flsub@b+3,___fladd@b+3
  5251  00381C  C030  F009         	movff	___flsub@a,___fladd@a
  5252  003820  C031  F00A         	movff	___flsub@a+1,___fladd@a+1
  5253  003824  C032  F00B         	movff	___flsub@a+2,___fladd@a+2
  5254  003828  C033  F00C         	movff	___flsub@a+3,___fladd@a+3
  5255  00382C  ECEE  F009         	call	___fladd	;wreg free
  5256  003830  C005  F02C         	movff	?___fladd,?___flsub
  5257  003834  C006  F02D         	movff	?___fladd+1,?___flsub+1
  5258  003838  C007  F02E         	movff	?___fladd+2,?___flsub+2
  5259  00383C  C008  F02F         	movff	?___fladd+3,?___flsub+3
  5260  003840  0012               	return		;funcret
  5261  003842                     __end_of___flsub:
  5262                           	callstack 0
  5263                           
  5264 ;; *************** function ___fladd *****************
  5265 ;; Defined at:
  5266 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  5267 ;; Parameters:    Size  Location     Type
  5268 ;;  b               4    4[COMRAM] long 
  5269 ;;  a               4    8[COMRAM] long 
  5270 ;; Auto vars:     Size  Location     Type
  5271 ;;  grs             1   19[COMRAM] unsigned char 
  5272 ;;  bexp            1   18[COMRAM] unsigned char 
  5273 ;;  aexp            1   17[COMRAM] unsigned char 
  5274 ;;  signs           1   16[COMRAM] unsigned char 
  5275 ;; Return value:  Size  Location     Type
  5276 ;;                  4    4[COMRAM] unsigned char 
  5277 ;; Registers used:
  5278 ;;		wreg, status,2, status,0
  5279 ;; Tracked objects:
  5280 ;;		On entry : 0/0
  5281 ;;		On exit  : 0/0
  5282 ;;		Unchanged: 0/0
  5283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5284 ;;      Params:         8       0       0       0       0       0       0       0       0
  5285 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5286 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5287 ;;      Totals:        16       0       0       0       0       0       0       0       0
  5288 ;;Total ram usage:       16 bytes
  5289 ;; Hardware stack levels used:    1
  5290 ;; Hardware stack levels required when called:    2
  5291 ;; This function calls:
  5292 ;;		Nothing
  5293 ;; This function is called by:
  5294 ;;		___flsub
  5295 ;;		_efgtoa
  5296 ;; This function uses a non-reentrant model
  5297 ;;
  5298                           
  5299                           	psect	text18
  5300  0013DC                     __ptext18:
  5301                           	callstack 0
  5302  0013DC                     ___fladd:
  5303                           	callstack 23
  5304  0013DC  5008               	movf	(___fladd@b+3)^0,w,c
  5305  0013DE  0B80               	andlw	128
  5306  0013E0  6E11               	movwf	___fladd@signs^0,c
  5307  0013E2  5008               	movf	(___fladd@b+3)^0,w,c
  5308  0013E4  2408               	addwf	(___fladd@b+3)^0,w,c
  5309  0013E6  6E13               	movwf	___fladd@bexp^0,c
  5310  0013E8  AE07               	btfss	(___fladd@b+2)^0,7,c
  5311  0013EA  EFF9  F009         	goto	u2531
  5312  0013EE  EFFB  F009         	goto	u2530
  5313  0013F2                     u2531:
  5314  0013F2  EFFC  F009         	goto	l2644
  5315  0013F6                     u2530:
  5316  0013F6  8013               	bsf	___fladd@bexp^0,0,c
  5317  0013F8                     l2644:
  5318  0013F8  5013               	movf	___fladd@bexp^0,w,c
  5319  0013FA  B4D8               	btfsc	status,2,c
  5320  0013FC  EF02  F00A         	goto	u2541
  5321  001400  EF04  F00A         	goto	u2540
  5322  001404                     u2541:
  5323  001404  EF19  F00A         	goto	l2654
  5324  001408                     u2540:
  5325  001408  2813               	incf	___fladd@bexp^0,w,c
  5326  00140A  A4D8               	btfss	status,2,c
  5327  00140C  EF0A  F00A         	goto	u2551
  5328  001410  EF0C  F00A         	goto	u2550
  5329  001414                     u2551:
  5330  001414  EF14  F00A         	goto	l2650
  5331  001418                     u2550:
  5332  001418  0E00               	movlw	0
  5333  00141A  6E05               	movwf	___fladd@b^0,c
  5334  00141C  0E00               	movlw	0
  5335  00141E  6E06               	movwf	(___fladd@b+1)^0,c
  5336  001420  0E00               	movlw	0
  5337  001422  6E07               	movwf	(___fladd@b+2)^0,c
  5338  001424  0E00               	movlw	0
  5339  001426  6E08               	movwf	(___fladd@b+3)^0,c
  5340  001428                     l2650:
  5341  001428  8E07               	bsf	(___fladd@b+2)^0,7,c
  5342  00142A  0E00               	movlw	0
  5343  00142C  6E08               	movwf	(___fladd@b+3)^0,c
  5344  00142E  EF21  F00A         	goto	l2656
  5345  001432                     l2654:
  5346  001432  0E00               	movlw	0
  5347  001434  6E05               	movwf	___fladd@b^0,c
  5348  001436  0E00               	movlw	0
  5349  001438  6E06               	movwf	(___fladd@b+1)^0,c
  5350  00143A  0E00               	movlw	0
  5351  00143C  6E07               	movwf	(___fladd@b+2)^0,c
  5352  00143E  0E00               	movlw	0
  5353  001440  6E08               	movwf	(___fladd@b+3)^0,c
  5354  001442                     l2656:
  5355  001442  500C               	movf	(___fladd@a+3)^0,w,c
  5356  001444  0B80               	andlw	128
  5357  001446  6E12               	movwf	___fladd@aexp^0,c
  5358  001448  5011               	movf	___fladd@signs^0,w,c
  5359  00144A  1812               	xorwf	___fladd@aexp^0,w,c
  5360  00144C  B4D8               	btfsc	status,2,c
  5361  00144E  EF2B  F00A         	goto	u2561
  5362  001452  EF2D  F00A         	goto	u2560
  5363  001456                     u2561:
  5364  001456  EF2E  F00A         	goto	l2662
  5365  00145A                     u2560:
  5366  00145A  8C11               	bsf	___fladd@signs^0,6,c
  5367  00145C                     l2662:
  5368  00145C  500C               	movf	(___fladd@a+3)^0,w,c
  5369  00145E  240C               	addwf	(___fladd@a+3)^0,w,c
  5370  001460  6E12               	movwf	___fladd@aexp^0,c
  5371  001462  AE0B               	btfss	(___fladd@a+2)^0,7,c
  5372  001464  EF36  F00A         	goto	u2571
  5373  001468  EF38  F00A         	goto	u2570
  5374  00146C                     u2571:
  5375  00146C  EF39  F00A         	goto	l2668
  5376  001470                     u2570:
  5377  001470  8012               	bsf	___fladd@aexp^0,0,c
  5378  001472                     l2668:
  5379  001472  5012               	movf	___fladd@aexp^0,w,c
  5380  001474  B4D8               	btfsc	status,2,c
  5381  001476  EF3F  F00A         	goto	u2581
  5382  00147A  EF41  F00A         	goto	u2580
  5383  00147E                     u2581:
  5384  00147E  EF56  F00A         	goto	l2678
  5385  001482                     u2580:
  5386  001482  2812               	incf	___fladd@aexp^0,w,c
  5387  001484  A4D8               	btfss	status,2,c
  5388  001486  EF47  F00A         	goto	u2591
  5389  00148A  EF49  F00A         	goto	u2590
  5390  00148E                     u2591:
  5391  00148E  EF51  F00A         	goto	l2674
  5392  001492                     u2590:
  5393  001492  0E00               	movlw	0
  5394  001494  6E09               	movwf	___fladd@a^0,c
  5395  001496  0E00               	movlw	0
  5396  001498  6E0A               	movwf	(___fladd@a+1)^0,c
  5397  00149A  0E00               	movlw	0
  5398  00149C  6E0B               	movwf	(___fladd@a+2)^0,c
  5399  00149E  0E00               	movlw	0
  5400  0014A0  6E0C               	movwf	(___fladd@a+3)^0,c
  5401  0014A2                     l2674:
  5402  0014A2  8E0B               	bsf	(___fladd@a+2)^0,7,c
  5403  0014A4  0E00               	movlw	0
  5404  0014A6  6E0C               	movwf	(___fladd@a+3)^0,c
  5405  0014A8  EF5E  F00A         	goto	l2680
  5406  0014AC                     l2678:
  5407  0014AC  0E00               	movlw	0
  5408  0014AE  6E09               	movwf	___fladd@a^0,c
  5409  0014B0  0E00               	movlw	0
  5410  0014B2  6E0A               	movwf	(___fladd@a+1)^0,c
  5411  0014B4  0E00               	movlw	0
  5412  0014B6  6E0B               	movwf	(___fladd@a+2)^0,c
  5413  0014B8  0E00               	movlw	0
  5414  0014BA  6E0C               	movwf	(___fladd@a+3)^0,c
  5415  0014BC                     l2680:
  5416  0014BC  5013               	movf	___fladd@bexp^0,w,c
  5417  0014BE  5C12               	subwf	___fladd@aexp^0,w,c
  5418  0014C0  B0D8               	btfsc	status,0,c
  5419  0014C2  EF65  F00A         	goto	u2601
  5420  0014C6  EF67  F00A         	goto	u2600
  5421  0014CA                     u2601:
  5422  0014CA  EF8E  F00A         	goto	l2716
  5423  0014CE                     u2600:
  5424  0014CE  AC11               	btfss	___fladd@signs^0,6,c
  5425  0014D0  EF6C  F00A         	goto	u2611
  5426  0014D4  EF6E  F00A         	goto	u2610
  5427  0014D8                     u2611:
  5428  0014D8  EF70  F00A         	goto	l2686
  5429  0014DC                     u2610:
  5430  0014DC  0E80               	movlw	128
  5431  0014DE  1A11               	xorwf	___fladd@signs^0,f,c
  5432  0014E0                     l2686:
  5433  0014E0  C013  F014         	movff	___fladd@bexp,___fladd@grs
  5434  0014E4  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  5435  0014E8  C014  F012         	movff	___fladd@grs,___fladd@aexp
  5436  0014EC  C005  F014         	movff	___fladd@b,___fladd@grs
  5437  0014F0  C009  F005         	movff	___fladd@a,___fladd@b
  5438  0014F4  C014  F009         	movff	___fladd@grs,___fladd@a
  5439  0014F8  C006  F014         	movff	___fladd@b+1,___fladd@grs
  5440  0014FC  C00A  F006         	movff	___fladd@a+1,___fladd@b+1
  5441  001500  C014  F00A         	movff	___fladd@grs,___fladd@a+1
  5442  001504  C007  F014         	movff	___fladd@b+2,___fladd@grs
  5443  001508  C00B  F007         	movff	___fladd@a+2,___fladd@b+2
  5444  00150C  C014  F00B         	movff	___fladd@grs,___fladd@a+2
  5445  001510  C008  F014         	movff	___fladd@b+3,___fladd@grs
  5446  001514  C00C  F008         	movff	___fladd@a+3,___fladd@b+3
  5447  001518  C014  F00C         	movff	___fladd@grs,___fladd@a+3
  5448  00151C                     l2716:
  5449  00151C  0E00               	movlw	0
  5450  00151E  6E14               	movwf	___fladd@grs^0,c
  5451  001520  5013               	movf	___fladd@bexp^0,w,c
  5452  001522  C012  F00D         	movff	___fladd@aexp,??___fladd
  5453  001526  6A0E               	clrf	(??___fladd+1)^0,c
  5454  001528  5E0D               	subwf	??___fladd^0,f,c
  5455  00152A  0E00               	movlw	0
  5456  00152C  5A0E               	subwfb	(??___fladd+1)^0,f,c
  5457  00152E  BE0E               	btfsc	(??___fladd+1)^0,7,c
  5458  001530  EFA3  F00A         	goto	u2621
  5459  001534  500E               	movf	(??___fladd+1)^0,w,c
  5460  001536  E109               	bnz	u2620
  5461  001538  0E1A               	movlw	26
  5462  00153A  5C0D               	subwf	??___fladd^0,w,c
  5463  00153C  A0D8               	btfss	status,0,c
  5464  00153E  EFA3  F00A         	goto	u2621
  5465  001542  EFA5  F00A         	goto	u2620
  5466  001546                     u2621:
  5467  001546  EFDC  F00A         	goto	l661
  5468  00154A                     u2620:
  5469  00154A  5005               	movf	___fladd@b^0,w,c
  5470  00154C  1006               	iorwf	(___fladd@b+1)^0,w,c
  5471  00154E  1007               	iorwf	(___fladd@b+2)^0,w,c
  5472  001550  1008               	iorwf	(___fladd@b+3)^0,w,c
  5473  001552  A4D8               	btfss	status,2,c
  5474  001554  EFAE  F00A         	goto	u2631
  5475  001558  EFB1  F00A         	goto	u2630
  5476  00155C                     u2631:
  5477  00155C  0E01               	movlw	1
  5478  00155E  EFB2  F00A         	goto	u2640
  5479  001562                     u2630:
  5480  001562  0E00               	movlw	0
  5481  001564                     u2640:
  5482  001564  6E14               	movwf	___fladd@grs^0,c
  5483  001566  0E00               	movlw	0
  5484  001568  6E05               	movwf	___fladd@b^0,c
  5485  00156A  0E00               	movlw	0
  5486  00156C  6E06               	movwf	(___fladd@b+1)^0,c
  5487  00156E  0E00               	movlw	0
  5488  001570  6E07               	movwf	(___fladd@b+2)^0,c
  5489  001572  0E00               	movlw	0
  5490  001574  6E08               	movwf	(___fladd@b+3)^0,c
  5491  001576  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  5492  00157A  EFE5  F00A         	goto	l660
  5493  00157E                     l662:
  5494  00157E  A014               	btfss	___fladd@grs^0,0,c
  5495  001580  EFC4  F00A         	goto	u2651
  5496  001584  EFC6  F00A         	goto	u2650
  5497  001588                     u2651:
  5498  001588  EFCC  F00A         	goto	l2728
  5499  00158C                     u2650:
  5500  00158C  90D8               	bcf	status,0,c
  5501  00158E  3014               	rrcf	___fladd@grs^0,w,c
  5502  001590  0901               	iorlw	1
  5503  001592  6E14               	movwf	___fladd@grs^0,c
  5504  001594  EFCE  F00A         	goto	l2730
  5505  001598                     l2728:
  5506  001598  90D8               	bcf	status,0,c
  5507  00159A  3214               	rrcf	___fladd@grs^0,f,c
  5508  00159C                     l2730:
  5509  00159C  A005               	btfss	___fladd@b^0,0,c
  5510  00159E  EFD3  F00A         	goto	u2661
  5511  0015A2  EFD5  F00A         	goto	u2660
  5512  0015A6                     u2661:
  5513  0015A6  EFD6  F00A         	goto	l2734
  5514  0015AA                     u2660:
  5515  0015AA  8E14               	bsf	___fladd@grs^0,7,c
  5516  0015AC                     l2734:
  5517  0015AC  3408               	rlcf	(___fladd@b+3)^0,w,c
  5518  0015AE  3208               	rrcf	(___fladd@b+3)^0,f,c
  5519  0015B0  3207               	rrcf	(___fladd@b+2)^0,f,c
  5520  0015B2  3206               	rrcf	(___fladd@b+1)^0,f,c
  5521  0015B4  3205               	rrcf	___fladd@b^0,f,c
  5522  0015B6  2A13               	incf	___fladd@bexp^0,f,c
  5523  0015B8                     l661:
  5524  0015B8  5012               	movf	___fladd@aexp^0,w,c
  5525  0015BA  5C13               	subwf	___fladd@bexp^0,w,c
  5526  0015BC  A0D8               	btfss	status,0,c
  5527  0015BE  EFE3  F00A         	goto	u2671
  5528  0015C2  EFE5  F00A         	goto	u2670
  5529  0015C6                     u2671:
  5530  0015C6  EFBF  F00A         	goto	l662
  5531  0015CA                     u2670:
  5532  0015CA                     l660:
  5533  0015CA  BC11               	btfsc	___fladd@signs^0,6,c
  5534  0015CC  EFEA  F00A         	goto	u2681
  5535  0015D0  EFEC  F00A         	goto	u2680
  5536  0015D4                     u2681:
  5537  0015D4  EF2C  F00B         	goto	l2762
  5538  0015D8                     u2680:
  5539  0015D8  5013               	movf	___fladd@bexp^0,w,c
  5540  0015DA  A4D8               	btfss	status,2,c
  5541  0015DC  EFF2  F00A         	goto	u2691
  5542  0015E0  EFF4  F00A         	goto	u2690
  5543  0015E4                     u2691:
  5544  0015E4  EFFE  F00A         	goto	l2744
  5545  0015E8                     u2690:
  5546  0015E8  0E00               	movlw	0
  5547  0015EA  6E05               	movwf	?___fladd^0,c
  5548  0015EC  0E00               	movlw	0
  5549  0015EE  6E06               	movwf	(?___fladd+1)^0,c
  5550  0015F0  0E00               	movlw	0
  5551  0015F2  6E07               	movwf	(?___fladd+2)^0,c
  5552  0015F4  0E00               	movlw	0
  5553  0015F6  6E08               	movwf	(?___fladd+3)^0,c
  5554  0015F8  EF4D  F00C         	goto	l669
  5555  0015FC                     l2744:
  5556  0015FC  5009               	movf	___fladd@a^0,w,c
  5557  0015FE  2605               	addwf	___fladd@b^0,f,c
  5558  001600  500A               	movf	(___fladd@a+1)^0,w,c
  5559  001602  2206               	addwfc	(___fladd@b+1)^0,f,c
  5560  001604  500B               	movf	(___fladd@a+2)^0,w,c
  5561  001606  2207               	addwfc	(___fladd@b+2)^0,f,c
  5562  001608  500C               	movf	(___fladd@a+3)^0,w,c
  5563  00160A  2208               	addwfc	(___fladd@b+3)^0,f,c
  5564  00160C  A008               	btfss	(___fladd@b+3)^0,0,c
  5565  00160E  EF0B  F00B         	goto	u2701
  5566  001612  EF0D  F00B         	goto	u2700
  5567  001616                     u2701:
  5568  001616  EFB9  F00B         	goto	l2798
  5569  00161A                     u2700:
  5570  00161A  A014               	btfss	___fladd@grs^0,0,c
  5571  00161C  EF12  F00B         	goto	u2711
  5572  001620  EF14  F00B         	goto	u2710
  5573  001624                     u2711:
  5574  001624  EF1A  F00B         	goto	l2752
  5575  001628                     u2710:
  5576  001628  90D8               	bcf	status,0,c
  5577  00162A  3014               	rrcf	___fladd@grs^0,w,c
  5578  00162C  0901               	iorlw	1
  5579  00162E  6E14               	movwf	___fladd@grs^0,c
  5580  001630  EF1C  F00B         	goto	l2754
  5581  001634                     l2752:
  5582  001634  90D8               	bcf	status,0,c
  5583  001636  3214               	rrcf	___fladd@grs^0,f,c
  5584  001638                     l2754:
  5585  001638  A005               	btfss	___fladd@b^0,0,c
  5586  00163A  EF21  F00B         	goto	u2721
  5587  00163E  EF23  F00B         	goto	u2720
  5588  001642                     u2721:
  5589  001642  EF24  F00B         	goto	l2758
  5590  001646                     u2720:
  5591  001646  8E14               	bsf	___fladd@grs^0,7,c
  5592  001648                     l2758:
  5593  001648  3408               	rlcf	(___fladd@b+3)^0,w,c
  5594  00164A  3208               	rrcf	(___fladd@b+3)^0,f,c
  5595  00164C  3207               	rrcf	(___fladd@b+2)^0,f,c
  5596  00164E  3206               	rrcf	(___fladd@b+1)^0,f,c
  5597  001650  3205               	rrcf	___fladd@b^0,f,c
  5598  001652  2A13               	incf	___fladd@bexp^0,f,c
  5599  001654  EFB9  F00B         	goto	l2798
  5600  001658                     l2762:
  5601  001658  5009               	movf	___fladd@a^0,w,c
  5602  00165A  5C05               	subwf	___fladd@b^0,w,c
  5603  00165C  500A               	movf	(___fladd@a+1)^0,w,c
  5604  00165E  5806               	subwfb	(___fladd@b+1)^0,w,c
  5605  001660  500B               	movf	(___fladd@a+2)^0,w,c
  5606  001662  5807               	subwfb	(___fladd@b+2)^0,w,c
  5607  001664  5008               	movf	(___fladd@b+3)^0,w,c
  5608  001666  0A80               	xorlw	128
  5609  001668  6E0D               	movwf	??___fladd^0,c
  5610  00166A  500C               	movf	(___fladd@a+3)^0,w,c
  5611  00166C  0A80               	xorlw	128
  5612  00166E  580D               	subwfb	??___fladd^0,w,c
  5613  001670  B0D8               	btfsc	status,0,c
  5614  001672  EF3D  F00B         	goto	u2731
  5615  001676  EF3F  F00B         	goto	u2730
  5616  00167A                     u2731:
  5617  00167A  EF6A  F00B         	goto	l2772
  5618  00167E                     u2730:
  5619  00167E  5005               	movf	___fladd@b^0,w,c
  5620  001680  5C09               	subwf	___fladd@a^0,w,c
  5621  001682  6E0D               	movwf	??___fladd^0,c
  5622  001684  5006               	movf	(___fladd@b+1)^0,w,c
  5623  001686  580A               	subwfb	(___fladd@a+1)^0,w,c
  5624  001688  6E0E               	movwf	(??___fladd+1)^0,c
  5625  00168A  5007               	movf	(___fladd@b+2)^0,w,c
  5626  00168C  580B               	subwfb	(___fladd@a+2)^0,w,c
  5627  00168E  6E0F               	movwf	(??___fladd+2)^0,c
  5628  001690  5008               	movf	(___fladd@b+3)^0,w,c
  5629  001692  580C               	subwfb	(___fladd@a+3)^0,w,c
  5630  001694  6E10               	movwf	(??___fladd+3)^0,c
  5631  001696  0EFF               	movlw	255
  5632  001698  240D               	addwf	??___fladd^0,w,c
  5633  00169A  6E05               	movwf	___fladd@b^0,c
  5634  00169C  0EFF               	movlw	255
  5635  00169E  200E               	addwfc	(??___fladd+1)^0,w,c
  5636  0016A0  6E06               	movwf	(___fladd@b+1)^0,c
  5637  0016A2  0EFF               	movlw	255
  5638  0016A4  200F               	addwfc	(??___fladd+2)^0,w,c
  5639  0016A6  6E07               	movwf	(___fladd@b+2)^0,c
  5640  0016A8  0EFF               	movlw	255
  5641  0016AA  2010               	addwfc	(??___fladd+3)^0,w,c
  5642  0016AC  6E08               	movwf	(___fladd@b+3)^0,c
  5643  0016AE  0E80               	movlw	128
  5644  0016B0  1A11               	xorwf	___fladd@signs^0,f,c
  5645  0016B2  6C14               	negf	___fladd@grs^0,c
  5646  0016B4  5014               	movf	___fladd@grs^0,w,c
  5647  0016B6  A4D8               	btfss	status,2,c
  5648  0016B8  EF60  F00B         	goto	u2741
  5649  0016BC  EF62  F00B         	goto	u2740
  5650  0016C0                     u2741:
  5651  0016C0  EF72  F00B         	goto	l677
  5652  0016C4                     u2740:
  5653  0016C4  0E01               	movlw	1
  5654  0016C6  2605               	addwf	___fladd@b^0,f,c
  5655  0016C8  0E00               	movlw	0
  5656  0016CA  2206               	addwfc	(___fladd@b+1)^0,f,c
  5657  0016CC  2207               	addwfc	(___fladd@b+2)^0,f,c
  5658  0016CE  2208               	addwfc	(___fladd@b+3)^0,f,c
  5659  0016D0  EF72  F00B         	goto	l677
  5660  0016D4                     l2772:
  5661  0016D4  5009               	movf	___fladd@a^0,w,c
  5662  0016D6  5E05               	subwf	___fladd@b^0,f,c
  5663  0016D8  500A               	movf	(___fladd@a+1)^0,w,c
  5664  0016DA  5A06               	subwfb	(___fladd@b+1)^0,f,c
  5665  0016DC  500B               	movf	(___fladd@a+2)^0,w,c
  5666  0016DE  5A07               	subwfb	(___fladd@b+2)^0,f,c
  5667  0016E0  500C               	movf	(___fladd@a+3)^0,w,c
  5668  0016E2  5A08               	subwfb	(___fladd@b+3)^0,f,c
  5669  0016E4                     l677:
  5670  0016E4  5005               	movf	___fladd@b^0,w,c
  5671  0016E6  1006               	iorwf	(___fladd@b+1)^0,w,c
  5672  0016E8  1007               	iorwf	(___fladd@b+2)^0,w,c
  5673  0016EA  1008               	iorwf	(___fladd@b+3)^0,w,c
  5674  0016EC  A4D8               	btfss	status,2,c
  5675  0016EE  EF7B  F00B         	goto	u2751
  5676  0016F2  EF7D  F00B         	goto	u2750
  5677  0016F6                     u2751:
  5678  0016F6  EFB2  F00B         	goto	l2796
  5679  0016FA                     u2750:
  5680  0016FA  5014               	movf	___fladd@grs^0,w,c
  5681  0016FC  A4D8               	btfss	status,2,c
  5682  0016FE  EF83  F00B         	goto	u2761
  5683  001702  EF85  F00B         	goto	u2760
  5684  001706                     u2761:
  5685  001706  EFB2  F00B         	goto	l2796
  5686  00170A                     u2760:
  5687  00170A  0E00               	movlw	0
  5688  00170C  6E05               	movwf	?___fladd^0,c
  5689  00170E  0E00               	movlw	0
  5690  001710  6E06               	movwf	(?___fladd+1)^0,c
  5691  001712  0E00               	movlw	0
  5692  001714  6E07               	movwf	(?___fladd+2)^0,c
  5693  001716  0E00               	movlw	0
  5694  001718  6E08               	movwf	(?___fladd+3)^0,c
  5695  00171A  EF4D  F00C         	goto	l669
  5696  00171E                     l2780:
  5697  00171E  90D8               	bcf	status,0,c
  5698  001720  3605               	rlcf	___fladd@b^0,f,c
  5699  001722  3606               	rlcf	(___fladd@b+1)^0,f,c
  5700  001724  3607               	rlcf	(___fladd@b+2)^0,f,c
  5701  001726  3608               	rlcf	(___fladd@b+3)^0,f,c
  5702  001728  AE14               	btfss	___fladd@grs^0,7,c
  5703  00172A  EF99  F00B         	goto	u2771
  5704  00172E  EF9B  F00B         	goto	u2770
  5705  001732                     u2771:
  5706  001732  EF9C  F00B         	goto	l2786
  5707  001736                     u2770:
  5708  001736  8005               	bsf	___fladd@b^0,0,c
  5709  001738                     l2786:
  5710  001738  A014               	btfss	___fladd@grs^0,0,c
  5711  00173A  EFA1  F00B         	goto	u2781
  5712  00173E  EFA3  F00B         	goto	u2780
  5713  001742                     u2781:
  5714  001742  EFA7  F00B         	goto	l2790
  5715  001746                     u2780:
  5716  001746  80D8               	bsf	status,0,c
  5717  001748  3614               	rlcf	___fladd@grs^0,f,c
  5718  00174A  EFA9  F00B         	goto	l2792
  5719  00174E                     l2790:
  5720  00174E  90D8               	bcf	status,0,c
  5721  001750  3614               	rlcf	___fladd@grs^0,f,c
  5722  001752                     l2792:
  5723  001752  5013               	movf	___fladd@bexp^0,w,c
  5724  001754  B4D8               	btfsc	status,2,c
  5725  001756  EFAF  F00B         	goto	u2791
  5726  00175A  EFB1  F00B         	goto	u2790
  5727  00175E                     u2791:
  5728  00175E  EFB2  F00B         	goto	l2796
  5729  001762                     u2790:
  5730  001762  0613               	decf	___fladd@bexp^0,f,c
  5731  001764                     l2796:
  5732  001764  AE07               	btfss	(___fladd@b+2)^0,7,c
  5733  001766  EFB7  F00B         	goto	u2801
  5734  00176A  EFB9  F00B         	goto	u2800
  5735  00176E                     u2801:
  5736  00176E  EF8F  F00B         	goto	l2780
  5737  001772                     u2800:
  5738  001772                     l2798:
  5739  001772  0E00               	movlw	0
  5740  001774  6E12               	movwf	___fladd@aexp^0,c
  5741  001776  AE14               	btfss	___fladd@grs^0,7,c
  5742  001778  EFC0  F00B         	goto	u2811
  5743  00177C  EFC2  F00B         	goto	u2810
  5744  001780                     u2811:
  5745  001780  EFDA  F00B         	goto	l686
  5746  001784                     u2810:
  5747  001784  C014  F00D         	movff	___fladd@grs,??___fladd
  5748  001788  0E7F               	movlw	127
  5749  00178A  160D               	andwf	??___fladd^0,f,c
  5750  00178C  B4D8               	btfsc	status,2,c
  5751  00178E  EFCB  F00B         	goto	u2821
  5752  001792  EFCD  F00B         	goto	u2820
  5753  001796                     u2821:
  5754  001796  EFD1  F00B         	goto	l687
  5755  00179A                     u2820:
  5756  00179A                     l2804:
  5757  00179A  0E01               	movlw	1
  5758  00179C  6E12               	movwf	___fladd@aexp^0,c
  5759  00179E  EFDA  F00B         	goto	l686
  5760  0017A2                     l687:
  5761  0017A2  A005               	btfss	___fladd@b^0,0,c
  5762  0017A4  EFD6  F00B         	goto	u2831
  5763  0017A8  EFD8  F00B         	goto	u2830
  5764  0017AC                     u2831:
  5765  0017AC  EFDA  F00B         	goto	l686
  5766  0017B0                     u2830:
  5767  0017B0  EFCD  F00B         	goto	l2804
  5768  0017B4                     l686:
  5769  0017B4  5012               	movf	___fladd@aexp^0,w,c
  5770  0017B6  B4D8               	btfsc	status,2,c
  5771  0017B8  EFE0  F00B         	goto	u2841
  5772  0017BC  EFE2  F00B         	goto	u2840
  5773  0017C0                     u2841:
  5774  0017C0  EF0D  F00C         	goto	l2816
  5775  0017C4                     u2840:
  5776  0017C4  0E01               	movlw	1
  5777  0017C6  2605               	addwf	___fladd@b^0,f,c
  5778  0017C8  0E00               	movlw	0
  5779  0017CA  2206               	addwfc	(___fladd@b+1)^0,f,c
  5780  0017CC  2207               	addwfc	(___fladd@b+2)^0,f,c
  5781  0017CE  2208               	addwfc	(___fladd@b+3)^0,f,c
  5782  0017D0  A008               	btfss	(___fladd@b+3)^0,0,c
  5783  0017D2  EFED  F00B         	goto	u2851
  5784  0017D6  EFEF  F00B         	goto	u2850
  5785  0017DA                     u2851:
  5786  0017DA  EF0D  F00C         	goto	l2816
  5787  0017DE                     u2850:
  5788  0017DE  C005  F00D         	movff	___fladd@b,??___fladd
  5789  0017E2  C006  F00E         	movff	___fladd@b+1,??___fladd+1
  5790  0017E6  C007  F00F         	movff	___fladd@b+2,??___fladd+2
  5791  0017EA  C008  F010         	movff	___fladd@b+3,??___fladd+3
  5792  0017EE  3410               	rlcf	(??___fladd+3)^0,w,c
  5793  0017F0  3210               	rrcf	(??___fladd+3)^0,f,c
  5794  0017F2  320F               	rrcf	(??___fladd+2)^0,f,c
  5795  0017F4  320E               	rrcf	(??___fladd+1)^0,f,c
  5796  0017F6  320D               	rrcf	??___fladd^0,f,c
  5797  0017F8  C00D  F005         	movff	??___fladd,___fladd@b
  5798  0017FC  C00E  F006         	movff	??___fladd+1,___fladd@b+1
  5799  001800  C00F  F007         	movff	??___fladd+2,___fladd@b+2
  5800  001804  C010  F008         	movff	??___fladd+3,___fladd@b+3
  5801  001808  2813               	incf	___fladd@bexp^0,w,c
  5802  00180A  B4D8               	btfsc	status,2,c
  5803  00180C  EF0A  F00C         	goto	u2861
  5804  001810  EF0C  F00C         	goto	u2860
  5805  001814                     u2861:
  5806  001814  EF0D  F00C         	goto	l2816
  5807  001818                     u2860:
  5808  001818  2A13               	incf	___fladd@bexp^0,f,c
  5809  00181A                     l2816:
  5810  00181A  2813               	incf	___fladd@bexp^0,w,c
  5811  00181C  B4D8               	btfsc	status,2,c
  5812  00181E  EF13  F00C         	goto	u2871
  5813  001822  EF15  F00C         	goto	u2870
  5814  001826                     u2871:
  5815  001826  EF1D  F00C         	goto	l2820
  5816  00182A                     u2870:
  5817  00182A  5013               	movf	___fladd@bexp^0,w,c
  5818  00182C  A4D8               	btfss	status,2,c
  5819  00182E  EF1B  F00C         	goto	u2881
  5820  001832  EF1D  F00C         	goto	u2880
  5821  001836                     u2881:
  5822  001836  EF2F  F00C         	goto	l2824
  5823  00183A                     u2880:
  5824  00183A                     l2820:
  5825  00183A  0E00               	movlw	0
  5826  00183C  6E05               	movwf	___fladd@b^0,c
  5827  00183E  0E00               	movlw	0
  5828  001840  6E06               	movwf	(___fladd@b+1)^0,c
  5829  001842  0E00               	movlw	0
  5830  001844  6E07               	movwf	(___fladd@b+2)^0,c
  5831  001846  0E00               	movlw	0
  5832  001848  6E08               	movwf	(___fladd@b+3)^0,c
  5833  00184A  5013               	movf	___fladd@bexp^0,w,c
  5834  00184C  A4D8               	btfss	status,2,c
  5835  00184E  EF2B  F00C         	goto	u2891
  5836  001852  EF2D  F00C         	goto	u2890
  5837  001856                     u2891:
  5838  001856  EF2F  F00C         	goto	l2824
  5839  00185A                     u2890:
  5840  00185A  0E00               	movlw	0
  5841  00185C  6E11               	movwf	___fladd@signs^0,c
  5842  00185E                     l2824:
  5843  00185E  A013               	btfss	___fladd@bexp^0,0,c
  5844  001860  EF34  F00C         	goto	u2901
  5845  001864  EF36  F00C         	goto	u2900
  5846  001868                     u2901:
  5847  001868  EF39  F00C         	goto	l2828
  5848  00186C                     u2900:
  5849  00186C  8E07               	bsf	(___fladd@b+2)^0,7,c
  5850  00186E  EF3A  F00C         	goto	l2830
  5851  001872                     l2828:
  5852  001872  9E07               	bcf	(___fladd@b+2)^0,7,c
  5853  001874                     l2830:
  5854  001874  90D8               	bcf	status,0,c
  5855  001876  3013               	rrcf	___fladd@bexp^0,w,c
  5856  001878  6E08               	movwf	(___fladd@b+3)^0,c
  5857  00187A  AE11               	btfss	___fladd@signs^0,7,c
  5858  00187C  EF42  F00C         	goto	u2911
  5859  001880  EF44  F00C         	goto	u2910
  5860  001884                     u2911:
  5861  001884  EF45  F00C         	goto	l2836
  5862  001888                     u2910:
  5863  001888  8E08               	bsf	(___fladd@b+3)^0,7,c
  5864  00188A                     l2836:
  5865  00188A  C005  F005         	movff	___fladd@b,?___fladd
  5866  00188E  C006  F006         	movff	___fladd@b+1,?___fladd+1
  5867  001892  C007  F007         	movff	___fladd@b+2,?___fladd+2
  5868  001896  C008  F008         	movff	___fladd@b+3,?___fladd+3
  5869  00189A                     l669:
  5870  00189A  0012               	return		;funcret
  5871  00189C                     __end_of___fladd:
  5872                           	callstack 0
  5873                           
  5874 ;; *************** function ___flneg *****************
  5875 ;; Defined at:
  5876 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flneg.c"
  5877 ;; Parameters:    Size  Location     Type
  5878 ;;  f1              4    4[COMRAM] unsigned char 
  5879 ;; Auto vars:     Size  Location     Type
  5880 ;;		None
  5881 ;; Return value:  Size  Location     Type
  5882 ;;                  4    4[COMRAM] unsigned char 
  5883 ;; Registers used:
  5884 ;;		wreg, status,2, status,0
  5885 ;; Tracked objects:
  5886 ;;		On entry : 0/0
  5887 ;;		On exit  : 0/0
  5888 ;;		Unchanged: 0/0
  5889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5890 ;;      Params:         4       0       0       0       0       0       0       0       0
  5891 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5892 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5893 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5894 ;;Total ram usage:        4 bytes
  5895 ;; Hardware stack levels used:    1
  5896 ;; Hardware stack levels required when called:    2
  5897 ;; This function calls:
  5898 ;;		Nothing
  5899 ;; This function is called by:
  5900 ;;		_efgtoa
  5901 ;; This function uses a non-reentrant model
  5902 ;;
  5903                           
  5904                           	psect	text19
  5905  003942                     __ptext19:
  5906                           	callstack 0
  5907  003942                     ___flneg:
  5908                           	callstack 24
  5909  003942  5005               	movf	___flneg@f1^0,w,c
  5910  003944  1006               	iorwf	(___flneg@f1+1)^0,w,c
  5911  003946  1007               	iorwf	(___flneg@f1+2)^0,w,c
  5912  003948  1008               	iorwf	(___flneg@f1+3)^0,w,c
  5913  00394A  B4D8               	btfsc	status,2,c
  5914  00394C  EFAA  F01C         	goto	u3581
  5915  003950  EFAC  F01C         	goto	u3580
  5916  003954                     u3581:
  5917  003954  EFB4  F01C         	goto	l3264
  5918  003958                     u3580:
  5919  003958  0E00               	movlw	0
  5920  00395A  1A05               	xorwf	___flneg@f1^0,f,c
  5921  00395C  0E00               	movlw	0
  5922  00395E  1A06               	xorwf	(___flneg@f1+1)^0,f,c
  5923  003960  0E00               	movlw	0
  5924  003962  1A07               	xorwf	(___flneg@f1+2)^0,f,c
  5925  003964  0E80               	movlw	128
  5926  003966  1A08               	xorwf	(___flneg@f1+3)^0,f,c
  5927  003968                     l3264:
  5928  003968  C005  F005         	movff	___flneg@f1,?___flneg
  5929  00396C  C006  F006         	movff	___flneg@f1+1,?___flneg+1
  5930  003970  C007  F007         	movff	___flneg@f1+2,?___flneg+2
  5931  003974  C008  F008         	movff	___flneg@f1+3,?___flneg+3
  5932  003978  0012               	return		;funcret
  5933  00397A                     __end_of___flneg:
  5934                           	callstack 0
  5935                           
  5936 ;; *************** function ___flmul *****************
  5937 ;; Defined at:
  5938 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
  5939 ;; Parameters:    Size  Location     Type
  5940 ;;  b               4   18[COMRAM] unsigned char 
  5941 ;;  a               4   22[COMRAM] unsigned char 
  5942 ;; Auto vars:     Size  Location     Type
  5943 ;;  prod            4   37[COMRAM] struct .
  5944 ;;  grs             4   31[COMRAM] unsigned long 
  5945 ;;  temp            2   41[COMRAM] struct .
  5946 ;;  bexp            1   36[COMRAM] unsigned char 
  5947 ;;  aexp            1   35[COMRAM] unsigned char 
  5948 ;;  sign            1   30[COMRAM] unsigned char 
  5949 ;; Return value:  Size  Location     Type
  5950 ;;                  4   18[COMRAM] unsigned char 
  5951 ;; Registers used:
  5952 ;;		wreg, status,2, status,0, prodl, prodh
  5953 ;; Tracked objects:
  5954 ;;		On entry : 0/0
  5955 ;;		On exit  : 0/0
  5956 ;;		Unchanged: 0/0
  5957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5958 ;;      Params:         8       0       0       0       0       0       0       0       0
  5959 ;;      Locals:        13       0       0       0       0       0       0       0       0
  5960 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5961 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5962 ;;Total ram usage:       25 bytes
  5963 ;; Hardware stack levels used:    1
  5964 ;; Hardware stack levels required when called:    2
  5965 ;; This function calls:
  5966 ;;		Nothing
  5967 ;; This function is called by:
  5968 ;;		_main
  5969 ;;		_efgtoa
  5970 ;; This function uses a non-reentrant model
  5971 ;;
  5972                           
  5973                           	psect	text20
  5974  001D04                     __ptext20:
  5975                           	callstack 0
  5976  001D04                     ___flmul:
  5977                           	callstack 24
  5978  001D04  5016               	movf	(___flmul@b+3)^0,w,c
  5979  001D06  0B80               	andlw	128
  5980  001D08  6E1F               	movwf	___flmul@sign^0,c
  5981  001D0A  5016               	movf	(___flmul@b+3)^0,w,c
  5982  001D0C  2416               	addwf	(___flmul@b+3)^0,w,c
  5983  001D0E  6E25               	movwf	___flmul@bexp^0,c
  5984  001D10  AE15               	btfss	(___flmul@b+2)^0,7,c
  5985  001D12  EF8D  F00E         	goto	u3191
  5986  001D16  EF8F  F00E         	goto	u3190
  5987  001D1A                     u3191:
  5988  001D1A  EF90  F00E         	goto	l3012
  5989  001D1E                     u3190:
  5990  001D1E  8025               	bsf	___flmul@bexp^0,0,c
  5991  001D20                     l3012:
  5992  001D20  5025               	movf	___flmul@bexp^0,w,c
  5993  001D22  B4D8               	btfsc	status,2,c
  5994  001D24  EF96  F00E         	goto	u3201
  5995  001D28  EF98  F00E         	goto	u3200
  5996  001D2C                     u3201:
  5997  001D2C  EFAB  F00E         	goto	l3020
  5998  001D30                     u3200:
  5999  001D30  2825               	incf	___flmul@bexp^0,w,c
  6000  001D32  A4D8               	btfss	status,2,c
  6001  001D34  EF9E  F00E         	goto	u3211
  6002  001D38  EFA0  F00E         	goto	u3210
  6003  001D3C                     u3211:
  6004  001D3C  EFA8  F00E         	goto	l3018
  6005  001D40                     u3210:
  6006  001D40  0E00               	movlw	0
  6007  001D42  6E13               	movwf	___flmul@b^0,c
  6008  001D44  0E00               	movlw	0
  6009  001D46  6E14               	movwf	(___flmul@b+1)^0,c
  6010  001D48  0E00               	movlw	0
  6011  001D4A  6E15               	movwf	(___flmul@b+2)^0,c
  6012  001D4C  0E00               	movlw	0
  6013  001D4E  6E16               	movwf	(___flmul@b+3)^0,c
  6014  001D50                     l3018:
  6015  001D50  8E15               	bsf	(___flmul@b+2)^0,7,c
  6016  001D52  EFB3  F00E         	goto	l3022
  6017  001D56                     l3020:
  6018  001D56  0E00               	movlw	0
  6019  001D58  6E13               	movwf	___flmul@b^0,c
  6020  001D5A  0E00               	movlw	0
  6021  001D5C  6E14               	movwf	(___flmul@b+1)^0,c
  6022  001D5E  0E00               	movlw	0
  6023  001D60  6E15               	movwf	(___flmul@b+2)^0,c
  6024  001D62  0E00               	movlw	0
  6025  001D64  6E16               	movwf	(___flmul@b+3)^0,c
  6026  001D66                     l3022:
  6027  001D66  501A               	movf	(___flmul@a+3)^0,w,c
  6028  001D68  0B80               	andlw	128
  6029  001D6A  1A1F               	xorwf	___flmul@sign^0,f,c
  6030  001D6C  501A               	movf	(___flmul@a+3)^0,w,c
  6031  001D6E  241A               	addwf	(___flmul@a+3)^0,w,c
  6032  001D70  6E24               	movwf	___flmul@aexp^0,c
  6033  001D72  AE19               	btfss	(___flmul@a+2)^0,7,c
  6034  001D74  EFBE  F00E         	goto	u3221
  6035  001D78  EFC0  F00E         	goto	u3220
  6036  001D7C                     u3221:
  6037  001D7C  EFC1  F00E         	goto	l3030
  6038  001D80                     u3220:
  6039  001D80  8024               	bsf	___flmul@aexp^0,0,c
  6040  001D82                     l3030:
  6041  001D82  5024               	movf	___flmul@aexp^0,w,c
  6042  001D84  B4D8               	btfsc	status,2,c
  6043  001D86  EFC7  F00E         	goto	u3231
  6044  001D8A  EFC9  F00E         	goto	u3230
  6045  001D8E                     u3231:
  6046  001D8E  EFDC  F00E         	goto	l3038
  6047  001D92                     u3230:
  6048  001D92  2824               	incf	___flmul@aexp^0,w,c
  6049  001D94  A4D8               	btfss	status,2,c
  6050  001D96  EFCF  F00E         	goto	u3241
  6051  001D9A  EFD1  F00E         	goto	u3240
  6052  001D9E                     u3241:
  6053  001D9E  EFD9  F00E         	goto	l3036
  6054  001DA2                     u3240:
  6055  001DA2  0E00               	movlw	0
  6056  001DA4  6E17               	movwf	___flmul@a^0,c
  6057  001DA6  0E00               	movlw	0
  6058  001DA8  6E18               	movwf	(___flmul@a+1)^0,c
  6059  001DAA  0E00               	movlw	0
  6060  001DAC  6E19               	movwf	(___flmul@a+2)^0,c
  6061  001DAE  0E00               	movlw	0
  6062  001DB0  6E1A               	movwf	(___flmul@a+3)^0,c
  6063  001DB2                     l3036:
  6064  001DB2  8E19               	bsf	(___flmul@a+2)^0,7,c
  6065  001DB4  EFE4  F00E         	goto	l746
  6066  001DB8                     l3038:
  6067  001DB8  0E00               	movlw	0
  6068  001DBA  6E17               	movwf	___flmul@a^0,c
  6069  001DBC  0E00               	movlw	0
  6070  001DBE  6E18               	movwf	(___flmul@a+1)^0,c
  6071  001DC0  0E00               	movlw	0
  6072  001DC2  6E19               	movwf	(___flmul@a+2)^0,c
  6073  001DC4  0E00               	movlw	0
  6074  001DC6  6E1A               	movwf	(___flmul@a+3)^0,c
  6075  001DC8                     l746:
  6076  001DC8  5024               	movf	___flmul@aexp^0,w,c
  6077  001DCA  B4D8               	btfsc	status,2,c
  6078  001DCC  EFEA  F00E         	goto	u3251
  6079  001DD0  EFEC  F00E         	goto	u3250
  6080  001DD4                     u3251:
  6081  001DD4  EFF4  F00E         	goto	l3042
  6082  001DD8                     u3250:
  6083  001DD8  5025               	movf	___flmul@bexp^0,w,c
  6084  001DDA  A4D8               	btfss	status,2,c
  6085  001DDC  EFF2  F00E         	goto	u3261
  6086  001DE0  EFF4  F00E         	goto	u3260
  6087  001DE4                     u3261:
  6088  001DE4  EFFE  F00E         	goto	l3046
  6089  001DE8                     u3260:
  6090  001DE8                     l3042:
  6091  001DE8  0E00               	movlw	0
  6092  001DEA  6E13               	movwf	?___flmul^0,c
  6093  001DEC  0E00               	movlw	0
  6094  001DEE  6E14               	movwf	(?___flmul+1)^0,c
  6095  001DF0  0E00               	movlw	0
  6096  001DF2  6E15               	movwf	(?___flmul+2)^0,c
  6097  001DF4  0E00               	movlw	0
  6098  001DF6  6E16               	movwf	(?___flmul+3)^0,c
  6099  001DF8  EF96  F010         	goto	l750
  6100  001DFC                     l3046:
  6101  001DFC  5019               	movf	(___flmul@a+2)^0,w,c
  6102  001DFE  0213               	mulwf	___flmul@b^0,c
  6103  001E00  CFF3 F02A          	movff	prodl,___flmul@temp
  6104  001E04  CFF4 F02B          	movff	prodh,___flmul@temp+1
  6105  001E08  502A               	movf	___flmul@temp^0,w,c
  6106  001E0A  6E20               	movwf	___flmul@grs^0,c
  6107  001E0C  6A21               	clrf	(___flmul@grs+1)^0,c
  6108  001E0E  6A22               	clrf	(___flmul@grs+2)^0,c
  6109  001E10  6A23               	clrf	(___flmul@grs+3)^0,c
  6110  001E12  502B               	movf	(___flmul@temp+1)^0,w,c
  6111  001E14  6E26               	movwf	___flmul@prod^0,c
  6112  001E16  6A27               	clrf	(___flmul@prod+1)^0,c
  6113  001E18  6A28               	clrf	(___flmul@prod+2)^0,c
  6114  001E1A  6A29               	clrf	(___flmul@prod+3)^0,c
  6115  001E1C  5018               	movf	(___flmul@a+1)^0,w,c
  6116  001E1E  0214               	mulwf	(___flmul@b+1)^0,c
  6117  001E20  CFF3 F02A          	movff	prodl,___flmul@temp
  6118  001E24  CFF4 F02B          	movff	prodh,___flmul@temp+1
  6119  001E28  502A               	movf	___flmul@temp^0,w,c
  6120  001E2A  2620               	addwf	___flmul@grs^0,f,c
  6121  001E2C  0E00               	movlw	0
  6122  001E2E  2221               	addwfc	(___flmul@grs+1)^0,f,c
  6123  001E30  2222               	addwfc	(___flmul@grs+2)^0,f,c
  6124  001E32  2223               	addwfc	(___flmul@grs+3)^0,f,c
  6125  001E34  502B               	movf	(___flmul@temp+1)^0,w,c
  6126  001E36  2626               	addwf	___flmul@prod^0,f,c
  6127  001E38  0E00               	movlw	0
  6128  001E3A  2227               	addwfc	(___flmul@prod+1)^0,f,c
  6129  001E3C  2228               	addwfc	(___flmul@prod+2)^0,f,c
  6130  001E3E  2229               	addwfc	(___flmul@prod+3)^0,f,c
  6131  001E40  5017               	movf	___flmul@a^0,w,c
  6132  001E42  0215               	mulwf	(___flmul@b+2)^0,c
  6133  001E44  CFF3 F02A          	movff	prodl,___flmul@temp
  6134  001E48  CFF4 F02B          	movff	prodh,___flmul@temp+1
  6135  001E4C  502A               	movf	___flmul@temp^0,w,c
  6136  001E4E  2620               	addwf	___flmul@grs^0,f,c
  6137  001E50  0E00               	movlw	0
  6138  001E52  2221               	addwfc	(___flmul@grs+1)^0,f,c
  6139  001E54  2222               	addwfc	(___flmul@grs+2)^0,f,c
  6140  001E56  2223               	addwfc	(___flmul@grs+3)^0,f,c
  6141  001E58  502B               	movf	(___flmul@temp+1)^0,w,c
  6142  001E5A  2626               	addwf	___flmul@prod^0,f,c
  6143  001E5C  0E00               	movlw	0
  6144  001E5E  2227               	addwfc	(___flmul@prod+1)^0,f,c
  6145  001E60  2228               	addwfc	(___flmul@prod+2)^0,f,c
  6146  001E62  2229               	addwfc	(___flmul@prod+3)^0,f,c
  6147  001E64  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
  6148  001E68  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
  6149  001E6C  C020  F021         	movff	___flmul@grs,___flmul@grs+1
  6150  001E70  6A20               	clrf	___flmul@grs^0,c
  6151  001E72  5017               	movf	___flmul@a^0,w,c
  6152  001E74  0214               	mulwf	(___flmul@b+1)^0,c
  6153  001E76  CFF3 F02A          	movff	prodl,___flmul@temp
  6154  001E7A  CFF4 F02B          	movff	prodh,___flmul@temp+1
  6155  001E7E  502A               	movf	___flmul@temp^0,w,c
  6156  001E80  2620               	addwf	___flmul@grs^0,f,c
  6157  001E82  502B               	movf	(___flmul@temp+1)^0,w,c
  6158  001E84  2221               	addwfc	(___flmul@grs+1)^0,f,c
  6159  001E86  0E00               	movlw	0
  6160  001E88  2222               	addwfc	(___flmul@grs+2)^0,f,c
  6161  001E8A  0E00               	movlw	0
  6162  001E8C  2223               	addwfc	(___flmul@grs+3)^0,f,c
  6163  001E8E  5018               	movf	(___flmul@a+1)^0,w,c
  6164  001E90  0213               	mulwf	___flmul@b^0,c
  6165  001E92  CFF3 F02A          	movff	prodl,___flmul@temp
  6166  001E96  CFF4 F02B          	movff	prodh,___flmul@temp+1
  6167  001E9A  502A               	movf	___flmul@temp^0,w,c
  6168  001E9C  2620               	addwf	___flmul@grs^0,f,c
  6169  001E9E  502B               	movf	(___flmul@temp+1)^0,w,c
  6170  001EA0  2221               	addwfc	(___flmul@grs+1)^0,f,c
  6171  001EA2  0E00               	movlw	0
  6172  001EA4  2222               	addwfc	(___flmul@grs+2)^0,f,c
  6173  001EA6  0E00               	movlw	0
  6174  001EA8  2223               	addwfc	(___flmul@grs+3)^0,f,c
  6175  001EAA  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
  6176  001EAE  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
  6177  001EB2  C020  F021         	movff	___flmul@grs,___flmul@grs+1
  6178  001EB6  6A20               	clrf	___flmul@grs^0,c
  6179  001EB8  5017               	movf	___flmul@a^0,w,c
  6180  001EBA  0213               	mulwf	___flmul@b^0,c
  6181  001EBC  CFF3 F02A          	movff	prodl,___flmul@temp
  6182  001EC0  CFF4 F02B          	movff	prodh,___flmul@temp+1
  6183  001EC4  502A               	movf	___flmul@temp^0,w,c
  6184  001EC6  2620               	addwf	___flmul@grs^0,f,c
  6185  001EC8  502B               	movf	(___flmul@temp+1)^0,w,c
  6186  001ECA  2221               	addwfc	(___flmul@grs+1)^0,f,c
  6187  001ECC  0E00               	movlw	0
  6188  001ECE  2222               	addwfc	(___flmul@grs+2)^0,f,c
  6189  001ED0  0E00               	movlw	0
  6190  001ED2  2223               	addwfc	(___flmul@grs+3)^0,f,c
  6191  001ED4  5019               	movf	(___flmul@a+2)^0,w,c
  6192  001ED6  0214               	mulwf	(___flmul@b+1)^0,c
  6193  001ED8  CFF3 F02A          	movff	prodl,___flmul@temp
  6194  001EDC  CFF4 F02B          	movff	prodh,___flmul@temp+1
  6195  001EE0  502A               	movf	___flmul@temp^0,w,c
  6196  001EE2  2626               	addwf	___flmul@prod^0,f,c
  6197  001EE4  502B               	movf	(___flmul@temp+1)^0,w,c
  6198  001EE6  2227               	addwfc	(___flmul@prod+1)^0,f,c
  6199  001EE8  0E00               	movlw	0
  6200  001EEA  2228               	addwfc	(___flmul@prod+2)^0,f,c
  6201  001EEC  0E00               	movlw	0
  6202  001EEE  2229               	addwfc	(___flmul@prod+3)^0,f,c
  6203  001EF0  5018               	movf	(___flmul@a+1)^0,w,c
  6204  001EF2  0215               	mulwf	(___flmul@b+2)^0,c
  6205  001EF4  CFF3 F02A          	movff	prodl,___flmul@temp
  6206  001EF8  CFF4 F02B          	movff	prodh,___flmul@temp+1
  6207  001EFC  502A               	movf	___flmul@temp^0,w,c
  6208  001EFE  2626               	addwf	___flmul@prod^0,f,c
  6209  001F00  502B               	movf	(___flmul@temp+1)^0,w,c
  6210  001F02  2227               	addwfc	(___flmul@prod+1)^0,f,c
  6211  001F04  0E00               	movlw	0
  6212  001F06  2228               	addwfc	(___flmul@prod+2)^0,f,c
  6213  001F08  0E00               	movlw	0
  6214  001F0A  2229               	addwfc	(___flmul@prod+3)^0,f,c
  6215  001F0C  5019               	movf	(___flmul@a+2)^0,w,c
  6216  001F0E  0215               	mulwf	(___flmul@b+2)^0,c
  6217  001F10  CFF3 F02A          	movff	prodl,___flmul@temp
  6218  001F14  CFF4 F02B          	movff	prodh,___flmul@temp+1
  6219  001F18  502A               	movf	___flmul@temp^0,w,c
  6220  001F1A  6E1B               	movwf	??___flmul^0,c
  6221  001F1C  502B               	movf	(___flmul@temp+1)^0,w,c
  6222  001F1E  6E1C               	movwf	(??___flmul+1)^0,c
  6223  001F20  6A1D               	clrf	(??___flmul+2)^0,c
  6224  001F22  6A1E               	clrf	(??___flmul+3)^0,c
  6225  001F24  C01D  F01E         	movff	??___flmul+2,??___flmul+3
  6226  001F28  C01C  F01D         	movff	??___flmul+1,??___flmul+2
  6227  001F2C  C01B  F01C         	movff	??___flmul,??___flmul+1
  6228  001F30  6A1B               	clrf	??___flmul^0,c
  6229  001F32  501B               	movf	??___flmul^0,w,c
  6230  001F34  2626               	addwf	___flmul@prod^0,f,c
  6231  001F36  501C               	movf	(??___flmul+1)^0,w,c
  6232  001F38  2227               	addwfc	(___flmul@prod+1)^0,f,c
  6233  001F3A  501D               	movf	(??___flmul+2)^0,w,c
  6234  001F3C  2228               	addwfc	(___flmul@prod+2)^0,f,c
  6235  001F3E  501E               	movf	(??___flmul+3)^0,w,c
  6236  001F40  2229               	addwfc	(___flmul@prod+3)^0,f,c
  6237  001F42  C020  F01B         	movff	___flmul@grs,??___flmul
  6238  001F46  C021  F01C         	movff	___flmul@grs+1,??___flmul+1
  6239  001F4A  C022  F01D         	movff	___flmul@grs+2,??___flmul+2
  6240  001F4E  C023  F01E         	movff	___flmul@grs+3,??___flmul+3
  6241  001F52  0E19               	movlw	25
  6242  001F54  EFB1  F00F         	goto	u3270
  6243  001F58                     u3275:
  6244  001F58  90D8               	bcf	status,0,c
  6245  001F5A  321E               	rrcf	(??___flmul+3)^0,f,c
  6246  001F5C  321D               	rrcf	(??___flmul+2)^0,f,c
  6247  001F5E  321C               	rrcf	(??___flmul+1)^0,f,c
  6248  001F60  321B               	rrcf	??___flmul^0,f,c
  6249  001F62                     u3270:
  6250  001F62  2EE8               	decfsz	wreg,f,c
  6251  001F64  EFAC  F00F         	goto	u3275
  6252  001F68  501B               	movf	??___flmul^0,w,c
  6253  001F6A  2626               	addwf	___flmul@prod^0,f,c
  6254  001F6C  501C               	movf	(??___flmul+1)^0,w,c
  6255  001F6E  2227               	addwfc	(___flmul@prod+1)^0,f,c
  6256  001F70  501D               	movf	(??___flmul+2)^0,w,c
  6257  001F72  2228               	addwfc	(___flmul@prod+2)^0,f,c
  6258  001F74  501E               	movf	(??___flmul+3)^0,w,c
  6259  001F76  2229               	addwfc	(___flmul@prod+3)^0,f,c
  6260  001F78  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
  6261  001F7C  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
  6262  001F80  C020  F021         	movff	___flmul@grs,___flmul@grs+1
  6263  001F84  6A20               	clrf	___flmul@grs^0,c
  6264  001F86  5024               	movf	___flmul@aexp^0,w,c
  6265  001F88  C025  F01B         	movff	___flmul@bexp,??___flmul
  6266  001F8C  6A1C               	clrf	(??___flmul+1)^0,c
  6267  001F8E  261B               	addwf	??___flmul^0,f,c
  6268  001F90  0E00               	movlw	0
  6269  001F92  221C               	addwfc	(??___flmul+1)^0,f,c
  6270  001F94  0E82               	movlw	130
  6271  001F96  241B               	addwf	??___flmul^0,w,c
  6272  001F98  6E2A               	movwf	___flmul@temp^0,c
  6273  001F9A  0EFF               	movlw	255
  6274  001F9C  201C               	addwfc	(??___flmul+1)^0,w,c
  6275  001F9E  6E2B               	movwf	(___flmul@temp+1)^0,c
  6276  001FA0  EFE7  F00F         	goto	l3094
  6277  001FA4                     l3088:
  6278  001FA4  90D8               	bcf	status,0,c
  6279  001FA6  3626               	rlcf	___flmul@prod^0,f,c
  6280  001FA8  3627               	rlcf	(___flmul@prod+1)^0,f,c
  6281  001FAA  3628               	rlcf	(___flmul@prod+2)^0,f,c
  6282  001FAC  3629               	rlcf	(___flmul@prod+3)^0,f,c
  6283  001FAE  AE23               	btfss	(___flmul@grs+3)^0,7,c
  6284  001FB0  EFDC  F00F         	goto	u3281
  6285  001FB4  EFDE  F00F         	goto	u3280
  6286  001FB8                     u3281:
  6287  001FB8  EFDF  F00F         	goto	l753
  6288  001FBC                     u3280:
  6289  001FBC  8026               	bsf	___flmul@prod^0,0,c
  6290  001FBE                     l753:
  6291  001FBE  90D8               	bcf	status,0,c
  6292  001FC0  3620               	rlcf	___flmul@grs^0,f,c
  6293  001FC2  3621               	rlcf	(___flmul@grs+1)^0,f,c
  6294  001FC4  3622               	rlcf	(___flmul@grs+2)^0,f,c
  6295  001FC6  3623               	rlcf	(___flmul@grs+3)^0,f,c
  6296  001FC8  062A               	decf	___flmul@temp^0,f,c
  6297  001FCA  A0D8               	btfss	status,0,c
  6298  001FCC  062B               	decf	(___flmul@temp+1)^0,f,c
  6299  001FCE                     l3094:
  6300  001FCE  AE28               	btfss	(___flmul@prod+2)^0,7,c
  6301  001FD0  EFEC  F00F         	goto	u3291
  6302  001FD4  EFEE  F00F         	goto	u3290
  6303  001FD8                     u3291:
  6304  001FD8  EFD2  F00F         	goto	l3088
  6305  001FDC                     u3290:
  6306  001FDC  0E00               	movlw	0
  6307  001FDE  6E24               	movwf	___flmul@aexp^0,c
  6308  001FE0  AE23               	btfss	(___flmul@grs+3)^0,7,c
  6309  001FE2  EFF5  F00F         	goto	u3301
  6310  001FE6  EFF7  F00F         	goto	u3300
  6311  001FEA                     u3301:
  6312  001FEA  EF1B  F010         	goto	l755
  6313  001FEE                     u3300:
  6314  001FEE  0EFF               	movlw	255
  6315  001FF0  1420               	andwf	___flmul@grs^0,w,c
  6316  001FF2  6E1B               	movwf	??___flmul^0,c
  6317  001FF4  0EFF               	movlw	255
  6318  001FF6  1421               	andwf	(___flmul@grs+1)^0,w,c
  6319  001FF8  6E1C               	movwf	(??___flmul+1)^0,c
  6320  001FFA  0EFF               	movlw	255
  6321  001FFC  1422               	andwf	(___flmul@grs+2)^0,w,c
  6322  001FFE  6E1D               	movwf	(??___flmul+2)^0,c
  6323  002000  0E7F               	movlw	127
  6324  002002  1423               	andwf	(___flmul@grs+3)^0,w,c
  6325  002004  6E1E               	movwf	(??___flmul+3)^0,c
  6326  002006  501B               	movf	??___flmul^0,w,c
  6327  002008  101C               	iorwf	(??___flmul+1)^0,w,c
  6328  00200A  101D               	iorwf	(??___flmul+2)^0,w,c
  6329  00200C  101E               	iorwf	(??___flmul+3)^0,w,c
  6330  00200E  B4D8               	btfsc	status,2,c
  6331  002010  EF0C  F010         	goto	u3311
  6332  002014  EF0E  F010         	goto	u3310
  6333  002018                     u3311:
  6334  002018  EF12  F010         	goto	l756
  6335  00201C                     u3310:
  6336  00201C                     l3102:
  6337  00201C  0E01               	movlw	1
  6338  00201E  6E24               	movwf	___flmul@aexp^0,c
  6339  002020  EF1B  F010         	goto	l755
  6340  002024                     l756:
  6341  002024  A026               	btfss	___flmul@prod^0,0,c
  6342  002026  EF17  F010         	goto	u3321
  6343  00202A  EF19  F010         	goto	u3320
  6344  00202E                     u3321:
  6345  00202E  EF1B  F010         	goto	l755
  6346  002032                     u3320:
  6347  002032  EF0E  F010         	goto	l3102
  6348  002036                     l755:
  6349  002036  5024               	movf	___flmul@aexp^0,w,c
  6350  002038  B4D8               	btfsc	status,2,c
  6351  00203A  EF21  F010         	goto	u3331
  6352  00203E  EF23  F010         	goto	u3330
  6353  002042                     u3331:
  6354  002042  EF47  F010         	goto	l3114
  6355  002046                     u3330:
  6356  002046  0E01               	movlw	1
  6357  002048  2626               	addwf	___flmul@prod^0,f,c
  6358  00204A  0E00               	movlw	0
  6359  00204C  2227               	addwfc	(___flmul@prod+1)^0,f,c
  6360  00204E  2228               	addwfc	(___flmul@prod+2)^0,f,c
  6361  002050  2229               	addwfc	(___flmul@prod+3)^0,f,c
  6362  002052  A029               	btfss	(___flmul@prod+3)^0,0,c
  6363  002054  EF2E  F010         	goto	u3341
  6364  002058  EF30  F010         	goto	u3340
  6365  00205C                     u3341:
  6366  00205C  EF47  F010         	goto	l3114
  6367  002060                     u3340:
  6368  002060  C026  F01B         	movff	___flmul@prod,??___flmul
  6369  002064  C027  F01C         	movff	___flmul@prod+1,??___flmul+1
  6370  002068  C028  F01D         	movff	___flmul@prod+2,??___flmul+2
  6371  00206C  C029  F01E         	movff	___flmul@prod+3,??___flmul+3
  6372  002070  341E               	rlcf	(??___flmul+3)^0,w,c
  6373  002072  321E               	rrcf	(??___flmul+3)^0,f,c
  6374  002074  321D               	rrcf	(??___flmul+2)^0,f,c
  6375  002076  321C               	rrcf	(??___flmul+1)^0,f,c
  6376  002078  321B               	rrcf	??___flmul^0,f,c
  6377  00207A  C01B  F026         	movff	??___flmul,___flmul@prod
  6378  00207E  C01C  F027         	movff	??___flmul+1,___flmul@prod+1
  6379  002082  C01D  F028         	movff	??___flmul+2,___flmul@prod+2
  6380  002086  C01E  F029         	movff	??___flmul+3,___flmul@prod+3
  6381  00208A  4A2A               	infsnz	___flmul@temp^0,f,c
  6382  00208C  2A2B               	incf	(___flmul@temp+1)^0,f,c
  6383  00208E                     l3114:
  6384  00208E  BE2B               	btfsc	(___flmul@temp+1)^0,7,c
  6385  002090  EF52  F010         	goto	u3351
  6386  002094  502B               	movf	(___flmul@temp+1)^0,w,c
  6387  002096  E108               	bnz	u3350
  6388  002098  282A               	incf	___flmul@temp^0,w,c
  6389  00209A  A0D8               	btfss	status,0,c
  6390  00209C  EF52  F010         	goto	u3351
  6391  0020A0  EF54  F010         	goto	u3350
  6392  0020A4                     u3351:
  6393  0020A4  EF5E  F010         	goto	l3118
  6394  0020A8                     u3350:
  6395  0020A8  0E00               	movlw	0
  6396  0020AA  6E26               	movwf	___flmul@prod^0,c
  6397  0020AC  0E00               	movlw	0
  6398  0020AE  6E27               	movwf	(___flmul@prod+1)^0,c
  6399  0020B0  0E80               	movlw	128
  6400  0020B2  6E28               	movwf	(___flmul@prod+2)^0,c
  6401  0020B4  0E7F               	movlw	127
  6402  0020B6  6E29               	movwf	(___flmul@prod+3)^0,c
  6403  0020B8  EF8C  F010         	goto	l3130
  6404  0020BC                     l3118:
  6405  0020BC  BE2B               	btfsc	(___flmul@temp+1)^0,7,c
  6406  0020BE  EF6B  F010         	goto	u3360
  6407  0020C2  502B               	movf	(___flmul@temp+1)^0,w,c
  6408  0020C4  E106               	bnz	u3361
  6409  0020C6  042A               	decf	___flmul@temp^0,w,c
  6410  0020C8  B0D8               	btfsc	status,0,c
  6411  0020CA  EF69  F010         	goto	u3361
  6412  0020CE  EF6B  F010         	goto	u3360
  6413  0020D2                     u3361:
  6414  0020D2  EF77  F010         	goto	l763
  6415  0020D6                     u3360:
  6416  0020D6  0E00               	movlw	0
  6417  0020D8  6E26               	movwf	___flmul@prod^0,c
  6418  0020DA  0E00               	movlw	0
  6419  0020DC  6E27               	movwf	(___flmul@prod+1)^0,c
  6420  0020DE  0E00               	movlw	0
  6421  0020E0  6E28               	movwf	(___flmul@prod+2)^0,c
  6422  0020E2  0E00               	movlw	0
  6423  0020E4  6E29               	movwf	(___flmul@prod+3)^0,c
  6424  0020E6  0E00               	movlw	0
  6425  0020E8  6E1F               	movwf	___flmul@sign^0,c
  6426  0020EA  EF8C  F010         	goto	l3130
  6427  0020EE                     l763:
  6428  0020EE  C02A  F025         	movff	___flmul@temp,___flmul@bexp
  6429  0020F2  0EFF               	movlw	255
  6430  0020F4  1626               	andwf	___flmul@prod^0,f,c
  6431  0020F6  0EFF               	movlw	255
  6432  0020F8  1627               	andwf	(___flmul@prod+1)^0,f,c
  6433  0020FA  0E7F               	movlw	127
  6434  0020FC  1628               	andwf	(___flmul@prod+2)^0,f,c
  6435  0020FE  0E00               	movlw	0
  6436  002100  1629               	andwf	(___flmul@prod+3)^0,f,c
  6437  002102  A025               	btfss	___flmul@bexp^0,0,c
  6438  002104  EF86  F010         	goto	u3371
  6439  002108  EF88  F010         	goto	u3370
  6440  00210C                     u3371:
  6441  00210C  EF89  F010         	goto	l3128
  6442  002110                     u3370:
  6443  002110  8E28               	bsf	(___flmul@prod+2)^0,7,c
  6444  002112                     l3128:
  6445  002112  90D8               	bcf	status,0,c
  6446  002114  3025               	rrcf	___flmul@bexp^0,w,c
  6447  002116  6E29               	movwf	(___flmul@prod+3)^0,c
  6448  002118                     l3130:
  6449  002118  501F               	movf	___flmul@sign^0,w,c
  6450  00211A  1229               	iorwf	(___flmul@prod+3)^0,f,c
  6451  00211C  C026  F013         	movff	___flmul@prod,?___flmul
  6452  002120  C027  F014         	movff	___flmul@prod+1,?___flmul+1
  6453  002124  C028  F015         	movff	___flmul@prod+2,?___flmul+2
  6454  002128  C029  F016         	movff	___flmul@prod+3,?___flmul+3
  6455  00212C                     l750:
  6456  00212C  0012               	return		;funcret
  6457  00212E                     __end_of___flmul:
  6458                           	callstack 0
  6459                           
  6460 ;; *************** function ___flge *****************
  6461 ;; Defined at:
  6462 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flge.c"
  6463 ;; Parameters:    Size  Location     Type
  6464 ;;  ff1             4   43[COMRAM] unsigned char 
  6465 ;;  ff2             4   47[COMRAM] unsigned char 
  6466 ;; Auto vars:     Size  Location     Type
  6467 ;;		None
  6468 ;; Return value:  Size  Location     Type
  6469 ;;		None               void
  6470 ;; Registers used:
  6471 ;;		wreg, status,2, status,0
  6472 ;; Tracked objects:
  6473 ;;		On entry : 0/0
  6474 ;;		On exit  : 0/0
  6475 ;;		Unchanged: 0/0
  6476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6477 ;;      Params:         8       0       0       0       0       0       0       0       0
  6478 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6479 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6480 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6481 ;;Total ram usage:       12 bytes
  6482 ;; Hardware stack levels used:    1
  6483 ;; Hardware stack levels required when called:    2
  6484 ;; This function calls:
  6485 ;;		Nothing
  6486 ;; This function is called by:
  6487 ;;		_efgtoa
  6488 ;; This function uses a non-reentrant model
  6489 ;;
  6490                           
  6491                           	psect	text21
  6492  002E6E                     __ptext21:
  6493                           	callstack 0
  6494  002E6E                     ___flge:
  6495                           	callstack 24
  6496  002E6E  0E00               	movlw	0
  6497  002E70  142C               	andwf	___flge@ff1^0,w,c
  6498  002E72  6E34               	movwf	??___flge^0,c
  6499  002E74  0E00               	movlw	0
  6500  002E76  142D               	andwf	(___flge@ff1+1)^0,w,c
  6501  002E78  6E35               	movwf	(??___flge+1)^0,c
  6502  002E7A  0E80               	movlw	128
  6503  002E7C  142E               	andwf	(___flge@ff1+2)^0,w,c
  6504  002E7E  6E36               	movwf	(??___flge+2)^0,c
  6505  002E80  0E7F               	movlw	127
  6506  002E82  142F               	andwf	(___flge@ff1+3)^0,w,c
  6507  002E84  6E37               	movwf	(??___flge+3)^0,c
  6508  002E86  5034               	movf	??___flge^0,w,c
  6509  002E88  1035               	iorwf	(??___flge+1)^0,w,c
  6510  002E8A  1036               	iorwf	(??___flge+2)^0,w,c
  6511  002E8C  1037               	iorwf	(??___flge+3)^0,w,c
  6512  002E8E  A4D8               	btfss	status,2,c
  6513  002E90  EF4C  F017         	goto	u3531
  6514  002E94  EF4E  F017         	goto	u3530
  6515  002E98                     u3531:
  6516  002E98  EF56  F017         	goto	l3242
  6517  002E9C                     u3530:
  6518  002E9C  0E00               	movlw	0
  6519  002E9E  6E2C               	movwf	___flge@ff1^0,c
  6520  002EA0  0E00               	movlw	0
  6521  002EA2  6E2D               	movwf	(___flge@ff1+1)^0,c
  6522  002EA4  0E00               	movlw	0
  6523  002EA6  6E2E               	movwf	(___flge@ff1+2)^0,c
  6524  002EA8  0E00               	movlw	0
  6525  002EAA  6E2F               	movwf	(___flge@ff1+3)^0,c
  6526  002EAC                     l3242:
  6527  002EAC  0E00               	movlw	0
  6528  002EAE  1430               	andwf	___flge@ff2^0,w,c
  6529  002EB0  6E34               	movwf	??___flge^0,c
  6530  002EB2  0E00               	movlw	0
  6531  002EB4  1431               	andwf	(___flge@ff2+1)^0,w,c
  6532  002EB6  6E35               	movwf	(??___flge+1)^0,c
  6533  002EB8  0E80               	movlw	128
  6534  002EBA  1432               	andwf	(___flge@ff2+2)^0,w,c
  6535  002EBC  6E36               	movwf	(??___flge+2)^0,c
  6536  002EBE  0E7F               	movlw	127
  6537  002EC0  1433               	andwf	(___flge@ff2+3)^0,w,c
  6538  002EC2  6E37               	movwf	(??___flge+3)^0,c
  6539  002EC4  5034               	movf	??___flge^0,w,c
  6540  002EC6  1035               	iorwf	(??___flge+1)^0,w,c
  6541  002EC8  1036               	iorwf	(??___flge+2)^0,w,c
  6542  002ECA  1037               	iorwf	(??___flge+3)^0,w,c
  6543  002ECC  A4D8               	btfss	status,2,c
  6544  002ECE  EF6B  F017         	goto	u3541
  6545  002ED2  EF6D  F017         	goto	u3540
  6546  002ED6                     u3541:
  6547  002ED6  EF75  F017         	goto	l3246
  6548  002EDA                     u3540:
  6549  002EDA  0E00               	movlw	0
  6550  002EDC  6E30               	movwf	___flge@ff2^0,c
  6551  002EDE  0E00               	movlw	0
  6552  002EE0  6E31               	movwf	(___flge@ff2+1)^0,c
  6553  002EE2  0E00               	movlw	0
  6554  002EE4  6E32               	movwf	(___flge@ff2+2)^0,c
  6555  002EE6  0E00               	movlw	0
  6556  002EE8  6E33               	movwf	(___flge@ff2+3)^0,c
  6557  002EEA                     l3246:
  6558  002EEA  AE2F               	btfss	(___flge@ff1+3)^0,7,c
  6559  002EEC  EF7A  F017         	goto	u3551
  6560  002EF0  EF7C  F017         	goto	u3550
  6561  002EF4                     u3551:
  6562  002EF4  EF85  F017         	goto	l3250
  6563  002EF8                     u3550:
  6564  002EF8  6C2C               	negf	___flge@ff1^0,c
  6565  002EFA  1E2D               	comf	(___flge@ff1+1)^0,f,c
  6566  002EFC  B0D8               	btfsc	status,0,c
  6567  002EFE  2A2D               	incf	(___flge@ff1+1)^0,f,c
  6568  002F00  1E2E               	comf	(___flge@ff1+2)^0,f,c
  6569  002F02  B0D8               	btfsc	status,0,c
  6570  002F04  2A2E               	incf	(___flge@ff1+2)^0,f,c
  6571  002F06  0E80               	movlw	128
  6572  002F08  562F               	subfwb	(___flge@ff1+3)^0,f,c
  6573  002F0A                     l3250:
  6574  002F0A  AE33               	btfss	(___flge@ff2+3)^0,7,c
  6575  002F0C  EF8A  F017         	goto	u3561
  6576  002F10  EF8C  F017         	goto	u3560
  6577  002F14                     u3561:
  6578  002F14  EF95  F017         	goto	l397
  6579  002F18                     u3560:
  6580  002F18  6C30               	negf	___flge@ff2^0,c
  6581  002F1A  1E31               	comf	(___flge@ff2+1)^0,f,c
  6582  002F1C  B0D8               	btfsc	status,0,c
  6583  002F1E  2A31               	incf	(___flge@ff2+1)^0,f,c
  6584  002F20  1E32               	comf	(___flge@ff2+2)^0,f,c
  6585  002F22  B0D8               	btfsc	status,0,c
  6586  002F24  2A32               	incf	(___flge@ff2+2)^0,f,c
  6587  002F26  0E80               	movlw	128
  6588  002F28  5633               	subfwb	(___flge@ff2+3)^0,f,c
  6589  002F2A                     l397:
  6590  002F2A  0E00               	movlw	0
  6591  002F2C  1A2C               	xorwf	___flge@ff1^0,f,c
  6592  002F2E  0E00               	movlw	0
  6593  002F30  1A2D               	xorwf	(___flge@ff1+1)^0,f,c
  6594  002F32  0E00               	movlw	0
  6595  002F34  1A2E               	xorwf	(___flge@ff1+2)^0,f,c
  6596  002F36  0E80               	movlw	128
  6597  002F38  1A2F               	xorwf	(___flge@ff1+3)^0,f,c
  6598  002F3A  0E00               	movlw	0
  6599  002F3C  1A30               	xorwf	___flge@ff2^0,f,c
  6600  002F3E  0E00               	movlw	0
  6601  002F40  1A31               	xorwf	(___flge@ff2+1)^0,f,c
  6602  002F42  0E00               	movlw	0
  6603  002F44  1A32               	xorwf	(___flge@ff2+2)^0,f,c
  6604  002F46  0E80               	movlw	128
  6605  002F48  1A33               	xorwf	(___flge@ff2+3)^0,f,c
  6606  002F4A  5030               	movf	___flge@ff2^0,w,c
  6607  002F4C  5C2C               	subwf	___flge@ff1^0,w,c
  6608  002F4E  5031               	movf	(___flge@ff2+1)^0,w,c
  6609  002F50  582D               	subwfb	(___flge@ff1+1)^0,w,c
  6610  002F52  5032               	movf	(___flge@ff2+2)^0,w,c
  6611  002F54  582E               	subwfb	(___flge@ff1+2)^0,w,c
  6612  002F56  5033               	movf	(___flge@ff2+3)^0,w,c
  6613  002F58  582F               	subwfb	(___flge@ff1+3)^0,w,c
  6614  002F5A  B0D8               	btfsc	status,0,c
  6615  002F5C  EFB2  F017         	goto	u3571
  6616  002F60  EFB4  F017         	goto	u3570
  6617  002F64                     u3571:
  6618  002F64  EFB7  F017         	goto	l3256
  6619  002F68                     u3570:
  6620  002F68  90D8               	bcf	status,0,c
  6621  002F6A  EFB8  F017         	goto	l402
  6622  002F6E                     l3256:
  6623  002F6E  80D8               	bsf	status,0,c
  6624  002F70                     l402:
  6625  002F70  0012               	return		;funcret
  6626  002F72                     __end_of___flge:
  6627                           	callstack 0
  6628                           
  6629 ;; *************** function ___fleq *****************
  6630 ;; Defined at:
  6631 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fleq.c"
  6632 ;; Parameters:    Size  Location     Type
  6633 ;;  ff1             4    4[COMRAM] unsigned char 
  6634 ;;  ff2             4    8[COMRAM] unsigned char 
  6635 ;; Auto vars:     Size  Location     Type
  6636 ;;		None
  6637 ;; Return value:  Size  Location     Type
  6638 ;;		None               void
  6639 ;; Registers used:
  6640 ;;		wreg, status,2, status,0
  6641 ;; Tracked objects:
  6642 ;;		On entry : 0/0
  6643 ;;		On exit  : 0/0
  6644 ;;		Unchanged: 0/0
  6645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6646 ;;      Params:         8       0       0       0       0       0       0       0       0
  6647 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6648 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6649 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6650 ;;Total ram usage:       12 bytes
  6651 ;; Hardware stack levels used:    1
  6652 ;; Hardware stack levels required when called:    2
  6653 ;; This function calls:
  6654 ;;		Nothing
  6655 ;; This function is called by:
  6656 ;;		_efgtoa
  6657 ;; This function uses a non-reentrant model
  6658 ;;
  6659                           
  6660                           	psect	text22
  6661  003446                     __ptext22:
  6662                           	callstack 0
  6663  003446                     ___fleq:
  6664                           	callstack 24
  6665  003446  0E00               	movlw	0
  6666  003448  1405               	andwf	___fleq@ff1^0,w,c
  6667  00344A  6E0D               	movwf	??___fleq^0,c
  6668  00344C  0E00               	movlw	0
  6669  00344E  1406               	andwf	(___fleq@ff1+1)^0,w,c
  6670  003450  6E0E               	movwf	(??___fleq+1)^0,c
  6671  003452  0E80               	movlw	128
  6672  003454  1407               	andwf	(___fleq@ff1+2)^0,w,c
  6673  003456  6E0F               	movwf	(??___fleq+2)^0,c
  6674  003458  0E7F               	movlw	127
  6675  00345A  1408               	andwf	(___fleq@ff1+3)^0,w,c
  6676  00345C  6E10               	movwf	(??___fleq+3)^0,c
  6677  00345E  500D               	movf	??___fleq^0,w,c
  6678  003460  100E               	iorwf	(??___fleq+1)^0,w,c
  6679  003462  100F               	iorwf	(??___fleq+2)^0,w,c
  6680  003464  1010               	iorwf	(??___fleq+3)^0,w,c
  6681  003466  A4D8               	btfss	status,2,c
  6682  003468  EF38  F01A         	goto	u3501
  6683  00346C  EF3A  F01A         	goto	u3500
  6684  003470                     u3501:
  6685  003470  EF42  F01A         	goto	l3226
  6686  003474                     u3500:
  6687  003474  0E00               	movlw	0
  6688  003476  6E05               	movwf	___fleq@ff1^0,c
  6689  003478  0E00               	movlw	0
  6690  00347A  6E06               	movwf	(___fleq@ff1+1)^0,c
  6691  00347C  0E00               	movlw	0
  6692  00347E  6E07               	movwf	(___fleq@ff1+2)^0,c
  6693  003480  0E00               	movlw	0
  6694  003482  6E08               	movwf	(___fleq@ff1+3)^0,c
  6695  003484                     l3226:
  6696  003484  0E00               	movlw	0
  6697  003486  1409               	andwf	___fleq@ff2^0,w,c
  6698  003488  6E0D               	movwf	??___fleq^0,c
  6699  00348A  0E00               	movlw	0
  6700  00348C  140A               	andwf	(___fleq@ff2+1)^0,w,c
  6701  00348E  6E0E               	movwf	(??___fleq+1)^0,c
  6702  003490  0E80               	movlw	128
  6703  003492  140B               	andwf	(___fleq@ff2+2)^0,w,c
  6704  003494  6E0F               	movwf	(??___fleq+2)^0,c
  6705  003496  0E7F               	movlw	127
  6706  003498  140C               	andwf	(___fleq@ff2+3)^0,w,c
  6707  00349A  6E10               	movwf	(??___fleq+3)^0,c
  6708  00349C  500D               	movf	??___fleq^0,w,c
  6709  00349E  100E               	iorwf	(??___fleq+1)^0,w,c
  6710  0034A0  100F               	iorwf	(??___fleq+2)^0,w,c
  6711  0034A2  1010               	iorwf	(??___fleq+3)^0,w,c
  6712  0034A4  A4D8               	btfss	status,2,c
  6713  0034A6  EF57  F01A         	goto	u3511
  6714  0034AA  EF59  F01A         	goto	u3510
  6715  0034AE                     u3511:
  6716  0034AE  EF61  F01A         	goto	l3230
  6717  0034B2                     u3510:
  6718  0034B2  0E00               	movlw	0
  6719  0034B4  6E09               	movwf	___fleq@ff2^0,c
  6720  0034B6  0E00               	movlw	0
  6721  0034B8  6E0A               	movwf	(___fleq@ff2+1)^0,c
  6722  0034BA  0E00               	movlw	0
  6723  0034BC  6E0B               	movwf	(___fleq@ff2+2)^0,c
  6724  0034BE  0E00               	movlw	0
  6725  0034C0  6E0C               	movwf	(___fleq@ff2+3)^0,c
  6726  0034C2                     l3230:
  6727  0034C2  5009               	movf	___fleq@ff2^0,w,c
  6728  0034C4  1805               	xorwf	___fleq@ff1^0,w,c
  6729  0034C6  E10F               	bnz	u3520
  6730  0034C8  500A               	movf	(___fleq@ff2+1)^0,w,c
  6731  0034CA  1806               	xorwf	(___fleq@ff1+1)^0,w,c
  6732  0034CC  E10C               	bnz	u3520
  6733  0034CE  500B               	movf	(___fleq@ff2+2)^0,w,c
  6734  0034D0  1807               	xorwf	(___fleq@ff1+2)^0,w,c
  6735  0034D2  E109               	bnz	u3520
  6736  0034D4  500C               	movf	(___fleq@ff2+3)^0,w,c
  6737  0034D6  1808               	xorwf	(___fleq@ff1+3)^0,w,c
  6738  0034D8  B4D8               	btfsc	status,2,c
  6739  0034DA  EF71  F01A         	goto	u3521
  6740  0034DE  EF73  F01A         	goto	u3520
  6741  0034E2                     u3521:
  6742  0034E2  EF76  F01A         	goto	l3234
  6743  0034E6                     u3520:
  6744  0034E6  90D8               	bcf	status,0,c
  6745  0034E8  EF77  F01A         	goto	l391
  6746  0034EC                     l3234:
  6747  0034EC  80D8               	bsf	status,0,c
  6748  0034EE                     l391:
  6749  0034EE  0012               	return		;funcret
  6750  0034F0                     __end_of___fleq:
  6751                           	callstack 0
  6752                           
  6753 ;; *************** function ___fldiv *****************
  6754 ;; Defined at:
  6755 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
  6756 ;; Parameters:    Size  Location     Type
  6757 ;;  b               4    4[COMRAM] unsigned char 
  6758 ;;  a               4    8[COMRAM] unsigned char 
  6759 ;; Auto vars:     Size  Location     Type
  6760 ;;  grs             4   23[COMRAM] unsigned long 
  6761 ;;  rem             4   16[COMRAM] unsigned long 
  6762 ;;  new_exp         2   21[COMRAM] short 
  6763 ;;  aexp            1   28[COMRAM] unsigned char 
  6764 ;;  bexp            1   27[COMRAM] unsigned char 
  6765 ;;  sign            1   20[COMRAM] unsigned char 
  6766 ;; Return value:  Size  Location     Type
  6767 ;;                  4    4[COMRAM] unsigned char 
  6768 ;; Registers used:
  6769 ;;		wreg, status,2, status,0
  6770 ;; Tracked objects:
  6771 ;;		On entry : 0/0
  6772 ;;		On exit  : 0/0
  6773 ;;		Unchanged: 0/0
  6774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6775 ;;      Params:         8       0       0       0       0       0       0       0       0
  6776 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6777 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6778 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6779 ;;Total ram usage:       25 bytes
  6780 ;; Hardware stack levels used:    1
  6781 ;; Hardware stack levels required when called:    2
  6782 ;; This function calls:
  6783 ;;		Nothing
  6784 ;; This function is called by:
  6785 ;;		_efgtoa
  6786 ;; This function uses a non-reentrant model
  6787 ;;
  6788                           
  6789                           	psect	text23
  6790  00212E                     __ptext23:
  6791                           	callstack 0
  6792  00212E                     ___fldiv:
  6793                           	callstack 24
  6794  00212E  5008               	movf	(___fldiv@b+3)^0,w,c
  6795  002130  0B80               	andlw	128
  6796  002132  6E15               	movwf	___fldiv@sign^0,c
  6797  002134  5008               	movf	(___fldiv@b+3)^0,w,c
  6798  002136  2408               	addwf	(___fldiv@b+3)^0,w,c
  6799  002138  6E1C               	movwf	___fldiv@bexp^0,c
  6800  00213A  AE07               	btfss	(___fldiv@b+2)^0,7,c
  6801  00213C  EFA2  F010         	goto	u2961
  6802  002140  EFA4  F010         	goto	u2960
  6803  002144                     u2961:
  6804  002144  EFA5  F010         	goto	l2874
  6805  002148                     u2960:
  6806  002148  801C               	bsf	___fldiv@bexp^0,0,c
  6807  00214A                     l2874:
  6808  00214A  501C               	movf	___fldiv@bexp^0,w,c
  6809  00214C  B4D8               	btfsc	status,2,c
  6810  00214E  EFAB  F010         	goto	u2971
  6811  002152  EFAD  F010         	goto	u2970
  6812  002156                     u2971:
  6813  002156  EFC2  F010         	goto	l2884
  6814  00215A                     u2970:
  6815  00215A  281C               	incf	___fldiv@bexp^0,w,c
  6816  00215C  A4D8               	btfss	status,2,c
  6817  00215E  EFB3  F010         	goto	u2981
  6818  002162  EFB5  F010         	goto	u2980
  6819  002166                     u2981:
  6820  002166  EFBD  F010         	goto	l2880
  6821  00216A                     u2980:
  6822  00216A  0E00               	movlw	0
  6823  00216C  6E05               	movwf	___fldiv@b^0,c
  6824  00216E  0E00               	movlw	0
  6825  002170  6E06               	movwf	(___fldiv@b+1)^0,c
  6826  002172  0E00               	movlw	0
  6827  002174  6E07               	movwf	(___fldiv@b+2)^0,c
  6828  002176  0E00               	movlw	0
  6829  002178  6E08               	movwf	(___fldiv@b+3)^0,c
  6830  00217A                     l2880:
  6831  00217A  8E07               	bsf	(___fldiv@b+2)^0,7,c
  6832  00217C  0E00               	movlw	0
  6833  00217E  6E08               	movwf	(___fldiv@b+3)^0,c
  6834  002180  EFCA  F010         	goto	l2886
  6835  002184                     l2884:
  6836  002184  0E00               	movlw	0
  6837  002186  6E05               	movwf	___fldiv@b^0,c
  6838  002188  0E00               	movlw	0
  6839  00218A  6E06               	movwf	(___fldiv@b+1)^0,c
  6840  00218C  0E00               	movlw	0
  6841  00218E  6E07               	movwf	(___fldiv@b+2)^0,c
  6842  002190  0E00               	movlw	0
  6843  002192  6E08               	movwf	(___fldiv@b+3)^0,c
  6844  002194                     l2886:
  6845  002194  500C               	movf	(___fldiv@a+3)^0,w,c
  6846  002196  0B80               	andlw	128
  6847  002198  1A15               	xorwf	___fldiv@sign^0,f,c
  6848  00219A  500C               	movf	(___fldiv@a+3)^0,w,c
  6849  00219C  240C               	addwf	(___fldiv@a+3)^0,w,c
  6850  00219E  6E1D               	movwf	___fldiv@aexp^0,c
  6851  0021A0  AE0B               	btfss	(___fldiv@a+2)^0,7,c
  6852  0021A2  EFD5  F010         	goto	u2991
  6853  0021A6  EFD7  F010         	goto	u2990
  6854  0021AA                     u2991:
  6855  0021AA  EFD8  F010         	goto	l2894
  6856  0021AE                     u2990:
  6857  0021AE  801D               	bsf	___fldiv@aexp^0,0,c
  6858  0021B0                     l2894:
  6859  0021B0  501D               	movf	___fldiv@aexp^0,w,c
  6860  0021B2  B4D8               	btfsc	status,2,c
  6861  0021B4  EFDE  F010         	goto	u3001
  6862  0021B8  EFE0  F010         	goto	u3000
  6863  0021BC                     u3001:
  6864  0021BC  EFF5  F010         	goto	l2904
  6865  0021C0                     u3000:
  6866  0021C0  281D               	incf	___fldiv@aexp^0,w,c
  6867  0021C2  A4D8               	btfss	status,2,c
  6868  0021C4  EFE6  F010         	goto	u3011
  6869  0021C8  EFE8  F010         	goto	u3010
  6870  0021CC                     u3011:
  6871  0021CC  EFF0  F010         	goto	l2900
  6872  0021D0                     u3010:
  6873  0021D0  0E00               	movlw	0
  6874  0021D2  6E09               	movwf	___fldiv@a^0,c
  6875  0021D4  0E00               	movlw	0
  6876  0021D6  6E0A               	movwf	(___fldiv@a+1)^0,c
  6877  0021D8  0E00               	movlw	0
  6878  0021DA  6E0B               	movwf	(___fldiv@a+2)^0,c
  6879  0021DC  0E00               	movlw	0
  6880  0021DE  6E0C               	movwf	(___fldiv@a+3)^0,c
  6881  0021E0                     l2900:
  6882  0021E0  8E0B               	bsf	(___fldiv@a+2)^0,7,c
  6883  0021E2  0E00               	movlw	0
  6884  0021E4  6E0C               	movwf	(___fldiv@a+3)^0,c
  6885  0021E6  EFFD  F010         	goto	l2906
  6886  0021EA                     l2904:
  6887  0021EA  0E00               	movlw	0
  6888  0021EC  6E09               	movwf	___fldiv@a^0,c
  6889  0021EE  0E00               	movlw	0
  6890  0021F0  6E0A               	movwf	(___fldiv@a+1)^0,c
  6891  0021F2  0E00               	movlw	0
  6892  0021F4  6E0B               	movwf	(___fldiv@a+2)^0,c
  6893  0021F6  0E00               	movlw	0
  6894  0021F8  6E0C               	movwf	(___fldiv@a+3)^0,c
  6895  0021FA                     l2906:
  6896  0021FA  5009               	movf	___fldiv@a^0,w,c
  6897  0021FC  100A               	iorwf	(___fldiv@a+1)^0,w,c
  6898  0021FE  100B               	iorwf	(___fldiv@a+2)^0,w,c
  6899  002200  100C               	iorwf	(___fldiv@a+3)^0,w,c
  6900  002202  A4D8               	btfss	status,2,c
  6901  002204  EF06  F011         	goto	u3021
  6902  002208  EF08  F011         	goto	u3020
  6903  00220C                     u3021:
  6904  00220C  EF20  F011         	goto	l2918
  6905  002210                     u3020:
  6906  002210  0E00               	movlw	0
  6907  002212  6E05               	movwf	___fldiv@b^0,c
  6908  002214  0E00               	movlw	0
  6909  002216  6E06               	movwf	(___fldiv@b+1)^0,c
  6910  002218  0E00               	movlw	0
  6911  00221A  6E07               	movwf	(___fldiv@b+2)^0,c
  6912  00221C  0E00               	movlw	0
  6913  00221E  6E08               	movwf	(___fldiv@b+3)^0,c
  6914  002220  0E80               	movlw	128
  6915  002222  1207               	iorwf	(___fldiv@b+2)^0,f,c
  6916  002224  0E7F               	movlw	127
  6917  002226  1208               	iorwf	(___fldiv@b+3)^0,f,c
  6918  002228                     l2912:
  6919  002228  5015               	movf	___fldiv@sign^0,w,c
  6920  00222A  1208               	iorwf	(___fldiv@b+3)^0,f,c
  6921  00222C  C005  F005         	movff	___fldiv@b,?___fldiv
  6922  002230  C006  F006         	movff	___fldiv@b+1,?___fldiv+1
  6923  002234  C007  F007         	movff	___fldiv@b+2,?___fldiv+2
  6924  002238  C008  F008         	movff	___fldiv@b+3,?___fldiv+3
  6925  00223C  EF63  F012         	goto	l714
  6926  002240                     l2918:
  6927  002240  501C               	movf	___fldiv@bexp^0,w,c
  6928  002242  A4D8               	btfss	status,2,c
  6929  002244  EF26  F011         	goto	u3031
  6930  002248  EF28  F011         	goto	u3030
  6931  00224C                     u3031:
  6932  00224C  EF32  F011         	goto	l2926
  6933  002250                     u3030:
  6934  002250  0E00               	movlw	0
  6935  002252  6E05               	movwf	?___fldiv^0,c
  6936  002254  0E00               	movlw	0
  6937  002256  6E06               	movwf	(?___fldiv+1)^0,c
  6938  002258  0E00               	movlw	0
  6939  00225A  6E07               	movwf	(?___fldiv+2)^0,c
  6940  00225C  0E00               	movlw	0
  6941  00225E  6E08               	movwf	(?___fldiv+3)^0,c
  6942  002260  EF63  F012         	goto	l714
  6943  002264                     l2926:
  6944  002264  501D               	movf	___fldiv@aexp^0,w,c
  6945  002266  C01C  F00D         	movff	___fldiv@bexp,??___fldiv
  6946  00226A  6A0E               	clrf	(??___fldiv+1)^0,c
  6947  00226C  5E0D               	subwf	??___fldiv^0,f,c
  6948  00226E  0E00               	movlw	0
  6949  002270  5A0E               	subwfb	(??___fldiv+1)^0,f,c
  6950  002272  0E7F               	movlw	127
  6951  002274  240D               	addwf	??___fldiv^0,w,c
  6952  002276  6E16               	movwf	___fldiv@new_exp^0,c
  6953  002278  0E00               	movlw	0
  6954  00227A  200E               	addwfc	(??___fldiv+1)^0,w,c
  6955  00227C  6E17               	movwf	(___fldiv@new_exp+1)^0,c
  6956  00227E  C005  F011         	movff	___fldiv@b,___fldiv@rem
  6957  002282  C006  F012         	movff	___fldiv@b+1,___fldiv@rem+1
  6958  002286  C007  F013         	movff	___fldiv@b+2,___fldiv@rem+2
  6959  00228A  C008  F014         	movff	___fldiv@b+3,___fldiv@rem+3
  6960  00228E  0E00               	movlw	0
  6961  002290  6E05               	movwf	___fldiv@b^0,c
  6962  002292  0E00               	movlw	0
  6963  002294  6E06               	movwf	(___fldiv@b+1)^0,c
  6964  002296  0E00               	movlw	0
  6965  002298  6E07               	movwf	(___fldiv@b+2)^0,c
  6966  00229A  0E00               	movlw	0
  6967  00229C  6E08               	movwf	(___fldiv@b+3)^0,c
  6968  00229E  0E00               	movlw	0
  6969  0022A0  6E18               	movwf	___fldiv@grs^0,c
  6970  0022A2  0E00               	movlw	0
  6971  0022A4  6E19               	movwf	(___fldiv@grs+1)^0,c
  6972  0022A6  0E00               	movlw	0
  6973  0022A8  6E1A               	movwf	(___fldiv@grs+2)^0,c
  6974  0022AA  0E00               	movlw	0
  6975  0022AC  6E1B               	movwf	(___fldiv@grs+3)^0,c
  6976  0022AE  0E00               	movlw	0
  6977  0022B0  6E1D               	movwf	___fldiv@aexp^0,c
  6978  0022B2  EF93  F011         	goto	l716
  6979  0022B6                     l2936:
  6980  0022B6  501D               	movf	___fldiv@aexp^0,w,c
  6981  0022B8  B4D8               	btfsc	status,2,c
  6982  0022BA  EF61  F011         	goto	u3041
  6983  0022BE  EF63  F011         	goto	u3040
  6984  0022C2                     u3041:
  6985  0022C2  EF7A  F011         	goto	l2944
  6986  0022C6                     u3040:
  6987  0022C6  90D8               	bcf	status,0,c
  6988  0022C8  3611               	rlcf	___fldiv@rem^0,f,c
  6989  0022CA  3612               	rlcf	(___fldiv@rem+1)^0,f,c
  6990  0022CC  3613               	rlcf	(___fldiv@rem+2)^0,f,c
  6991  0022CE  3614               	rlcf	(___fldiv@rem+3)^0,f,c
  6992  0022D0  90D8               	bcf	status,0,c
  6993  0022D2  3605               	rlcf	___fldiv@b^0,f,c
  6994  0022D4  3606               	rlcf	(___fldiv@b+1)^0,f,c
  6995  0022D6  3607               	rlcf	(___fldiv@b+2)^0,f,c
  6996  0022D8  3608               	rlcf	(___fldiv@b+3)^0,f,c
  6997  0022DA  AE1B               	btfss	(___fldiv@grs+3)^0,7,c
  6998  0022DC  EF72  F011         	goto	u3051
  6999  0022E0  EF74  F011         	goto	u3050
  7000  0022E4                     u3051:
  7001  0022E4  EF75  F011         	goto	l719
  7002  0022E8                     u3050:
  7003  0022E8  8005               	bsf	___fldiv@b^0,0,c
  7004  0022EA                     l719:
  7005  0022EA  90D8               	bcf	status,0,c
  7006  0022EC  3618               	rlcf	___fldiv@grs^0,f,c
  7007  0022EE  3619               	rlcf	(___fldiv@grs+1)^0,f,c
  7008  0022F0  361A               	rlcf	(___fldiv@grs+2)^0,f,c
  7009  0022F2  361B               	rlcf	(___fldiv@grs+3)^0,f,c
  7010  0022F4                     l2944:
  7011  0022F4  5009               	movf	___fldiv@a^0,w,c
  7012  0022F6  5C11               	subwf	___fldiv@rem^0,w,c
  7013  0022F8  500A               	movf	(___fldiv@a+1)^0,w,c
  7014  0022FA  5812               	subwfb	(___fldiv@rem+1)^0,w,c
  7015  0022FC  500B               	movf	(___fldiv@a+2)^0,w,c
  7016  0022FE  5813               	subwfb	(___fldiv@rem+2)^0,w,c
  7017  002300  500C               	movf	(___fldiv@a+3)^0,w,c
  7018  002302  5814               	subwfb	(___fldiv@rem+3)^0,w,c
  7019  002304  A0D8               	btfss	status,0,c
  7020  002306  EF87  F011         	goto	u3061
  7021  00230A  EF89  F011         	goto	u3060
  7022  00230E                     u3061:
  7023  00230E  EF92  F011         	goto	l2950
  7024  002312                     u3060:
  7025  002312  8C1B               	bsf	(___fldiv@grs+3)^0,6,c
  7026  002314  5009               	movf	___fldiv@a^0,w,c
  7027  002316  5E11               	subwf	___fldiv@rem^0,f,c
  7028  002318  500A               	movf	(___fldiv@a+1)^0,w,c
  7029  00231A  5A12               	subwfb	(___fldiv@rem+1)^0,f,c
  7030  00231C  500B               	movf	(___fldiv@a+2)^0,w,c
  7031  00231E  5A13               	subwfb	(___fldiv@rem+2)^0,f,c
  7032  002320  500C               	movf	(___fldiv@a+3)^0,w,c
  7033  002322  5A14               	subwfb	(___fldiv@rem+3)^0,f,c
  7034  002324                     l2950:
  7035  002324  2A1D               	incf	___fldiv@aexp^0,f,c
  7036  002326                     l716:
  7037  002326  0E19               	movlw	25
  7038  002328  641D               	cpfsgt	___fldiv@aexp^0,c
  7039  00232A  EF99  F011         	goto	u3071
  7040  00232E  EF9B  F011         	goto	u3070
  7041  002332                     u3071:
  7042  002332  EF5B  F011         	goto	l2936
  7043  002336                     u3070:
  7044  002336  5011               	movf	___fldiv@rem^0,w,c
  7045  002338  1012               	iorwf	(___fldiv@rem+1)^0,w,c
  7046  00233A  1013               	iorwf	(___fldiv@rem+2)^0,w,c
  7047  00233C  1014               	iorwf	(___fldiv@rem+3)^0,w,c
  7048  00233E  B4D8               	btfsc	status,2,c
  7049  002340  EFA4  F011         	goto	u3081
  7050  002344  EFA6  F011         	goto	u3080
  7051  002348                     u3081:
  7052  002348  EFBE  F011         	goto	l2962
  7053  00234C                     u3080:
  7054  00234C  8018               	bsf	___fldiv@grs^0,0,c
  7055  00234E  EFBE  F011         	goto	l2962
  7056  002352                     l2956:
  7057  002352  90D8               	bcf	status,0,c
  7058  002354  3605               	rlcf	___fldiv@b^0,f,c
  7059  002356  3606               	rlcf	(___fldiv@b+1)^0,f,c
  7060  002358  3607               	rlcf	(___fldiv@b+2)^0,f,c
  7061  00235A  3608               	rlcf	(___fldiv@b+3)^0,f,c
  7062  00235C  AE1B               	btfss	(___fldiv@grs+3)^0,7,c
  7063  00235E  EFB3  F011         	goto	u3091
  7064  002362  EFB5  F011         	goto	u3090
  7065  002366                     u3091:
  7066  002366  EFB6  F011         	goto	l725
  7067  00236A                     u3090:
  7068  00236A  8005               	bsf	___fldiv@b^0,0,c
  7069  00236C                     l725:
  7070  00236C  90D8               	bcf	status,0,c
  7071  00236E  3618               	rlcf	___fldiv@grs^0,f,c
  7072  002370  3619               	rlcf	(___fldiv@grs+1)^0,f,c
  7073  002372  361A               	rlcf	(___fldiv@grs+2)^0,f,c
  7074  002374  361B               	rlcf	(___fldiv@grs+3)^0,f,c
  7075  002376  0616               	decf	___fldiv@new_exp^0,f,c
  7076  002378  A0D8               	btfss	status,0,c
  7077  00237A  0617               	decf	(___fldiv@new_exp+1)^0,f,c
  7078  00237C                     l2962:
  7079  00237C  AE07               	btfss	(___fldiv@b+2)^0,7,c
  7080  00237E  EFC3  F011         	goto	u3101
  7081  002382  EFC5  F011         	goto	u3100
  7082  002386                     u3101:
  7083  002386  EFA9  F011         	goto	l2956
  7084  00238A                     u3100:
  7085  00238A  0E00               	movlw	0
  7086  00238C  6E1D               	movwf	___fldiv@aexp^0,c
  7087  00238E  AE1B               	btfss	(___fldiv@grs+3)^0,7,c
  7088  002390  EFCC  F011         	goto	u3111
  7089  002394  EFCE  F011         	goto	u3110
  7090  002398                     u3111:
  7091  002398  EFF2  F011         	goto	l727
  7092  00239C                     u3110:
  7093  00239C  0EFF               	movlw	255
  7094  00239E  1418               	andwf	___fldiv@grs^0,w,c
  7095  0023A0  6E0D               	movwf	??___fldiv^0,c
  7096  0023A2  0EFF               	movlw	255
  7097  0023A4  1419               	andwf	(___fldiv@grs+1)^0,w,c
  7098  0023A6  6E0E               	movwf	(??___fldiv+1)^0,c
  7099  0023A8  0EFF               	movlw	255
  7100  0023AA  141A               	andwf	(___fldiv@grs+2)^0,w,c
  7101  0023AC  6E0F               	movwf	(??___fldiv+2)^0,c
  7102  0023AE  0E7F               	movlw	127
  7103  0023B0  141B               	andwf	(___fldiv@grs+3)^0,w,c
  7104  0023B2  6E10               	movwf	(??___fldiv+3)^0,c
  7105  0023B4  500D               	movf	??___fldiv^0,w,c
  7106  0023B6  100E               	iorwf	(??___fldiv+1)^0,w,c
  7107  0023B8  100F               	iorwf	(??___fldiv+2)^0,w,c
  7108  0023BA  1010               	iorwf	(??___fldiv+3)^0,w,c
  7109  0023BC  B4D8               	btfsc	status,2,c
  7110  0023BE  EFE3  F011         	goto	u3121
  7111  0023C2  EFE5  F011         	goto	u3120
  7112  0023C6                     u3121:
  7113  0023C6  EFE9  F011         	goto	l728
  7114  0023CA                     u3120:
  7115  0023CA                     l2970:
  7116  0023CA  0E01               	movlw	1
  7117  0023CC  6E1D               	movwf	___fldiv@aexp^0,c
  7118  0023CE  EFF2  F011         	goto	l727
  7119  0023D2                     l728:
  7120  0023D2  A005               	btfss	___fldiv@b^0,0,c
  7121  0023D4  EFEE  F011         	goto	u3131
  7122  0023D8  EFF0  F011         	goto	u3130
  7123  0023DC                     u3131:
  7124  0023DC  EFF2  F011         	goto	l727
  7125  0023E0                     u3130:
  7126  0023E0  EFE5  F011         	goto	l2970
  7127  0023E4                     l727:
  7128  0023E4  501D               	movf	___fldiv@aexp^0,w,c
  7129  0023E6  B4D8               	btfsc	status,2,c
  7130  0023E8  EFF8  F011         	goto	u3141
  7131  0023EC  EFFA  F011         	goto	u3140
  7132  0023F0                     u3141:
  7133  0023F0  EF1E  F012         	goto	l2982
  7134  0023F4                     u3140:
  7135  0023F4  0E01               	movlw	1
  7136  0023F6  2605               	addwf	___fldiv@b^0,f,c
  7137  0023F8  0E00               	movlw	0
  7138  0023FA  2206               	addwfc	(___fldiv@b+1)^0,f,c
  7139  0023FC  2207               	addwfc	(___fldiv@b+2)^0,f,c
  7140  0023FE  2208               	addwfc	(___fldiv@b+3)^0,f,c
  7141  002400  A008               	btfss	(___fldiv@b+3)^0,0,c
  7142  002402  EF05  F012         	goto	u3151
  7143  002406  EF07  F012         	goto	u3150
  7144  00240A                     u3151:
  7145  00240A  EF1E  F012         	goto	l2982
  7146  00240E                     u3150:
  7147  00240E  C005  F00D         	movff	___fldiv@b,??___fldiv
  7148  002412  C006  F00E         	movff	___fldiv@b+1,??___fldiv+1
  7149  002416  C007  F00F         	movff	___fldiv@b+2,??___fldiv+2
  7150  00241A  C008  F010         	movff	___fldiv@b+3,??___fldiv+3
  7151  00241E  3410               	rlcf	(??___fldiv+3)^0,w,c
  7152  002420  3210               	rrcf	(??___fldiv+3)^0,f,c
  7153  002422  320F               	rrcf	(??___fldiv+2)^0,f,c
  7154  002424  320E               	rrcf	(??___fldiv+1)^0,f,c
  7155  002426  320D               	rrcf	??___fldiv^0,f,c
  7156  002428  C00D  F005         	movff	??___fldiv,___fldiv@b
  7157  00242C  C00E  F006         	movff	??___fldiv+1,___fldiv@b+1
  7158  002430  C00F  F007         	movff	??___fldiv+2,___fldiv@b+2
  7159  002434  C010  F008         	movff	??___fldiv+3,___fldiv@b+3
  7160  002438  4A16               	infsnz	___fldiv@new_exp^0,f,c
  7161  00243A  2A17               	incf	(___fldiv@new_exp+1)^0,f,c
  7162  00243C                     l2982:
  7163  00243C  BE17               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7164  00243E  EF29  F012         	goto	u3161
  7165  002442  5017               	movf	(___fldiv@new_exp+1)^0,w,c
  7166  002444  E108               	bnz	u3160
  7167  002446  2816               	incf	___fldiv@new_exp^0,w,c
  7168  002448  A0D8               	btfss	status,0,c
  7169  00244A  EF29  F012         	goto	u3161
  7170  00244E  EF2B  F012         	goto	u3160
  7171  002452                     u3161:
  7172  002452  EF36  F012         	goto	l2986
  7173  002456                     u3160:
  7174  002456  0E00               	movlw	0
  7175  002458  6E17               	movwf	(___fldiv@new_exp+1)^0,c
  7176  00245A  6816               	setf	___fldiv@new_exp^0,c
  7177  00245C  0E00               	movlw	0
  7178  00245E  6E05               	movwf	___fldiv@b^0,c
  7179  002460  0E00               	movlw	0
  7180  002462  6E06               	movwf	(___fldiv@b+1)^0,c
  7181  002464  0E00               	movlw	0
  7182  002466  6E07               	movwf	(___fldiv@b+2)^0,c
  7183  002468  0E00               	movlw	0
  7184  00246A  6E08               	movwf	(___fldiv@b+3)^0,c
  7185  00246C                     l2986:
  7186  00246C  BE17               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7187  00246E  EF43  F012         	goto	u3170
  7188  002472  5017               	movf	(___fldiv@new_exp+1)^0,w,c
  7189  002474  E106               	bnz	u3171
  7190  002476  0416               	decf	___fldiv@new_exp^0,w,c
  7191  002478  B0D8               	btfsc	status,0,c
  7192  00247A  EF41  F012         	goto	u3171
  7193  00247E  EF43  F012         	goto	u3170
  7194  002482                     u3171:
  7195  002482  EF51  F012         	goto	l2990
  7196  002486                     u3170:
  7197  002486  0E00               	movlw	0
  7198  002488  6E17               	movwf	(___fldiv@new_exp+1)^0,c
  7199  00248A  0E00               	movlw	0
  7200  00248C  6E16               	movwf	___fldiv@new_exp^0,c
  7201  00248E  0E00               	movlw	0
  7202  002490  6E05               	movwf	___fldiv@b^0,c
  7203  002492  0E00               	movlw	0
  7204  002494  6E06               	movwf	(___fldiv@b+1)^0,c
  7205  002496  0E00               	movlw	0
  7206  002498  6E07               	movwf	(___fldiv@b+2)^0,c
  7207  00249A  0E00               	movlw	0
  7208  00249C  6E08               	movwf	(___fldiv@b+3)^0,c
  7209  00249E  0E00               	movlw	0
  7210  0024A0  6E15               	movwf	___fldiv@sign^0,c
  7211  0024A2                     l2990:
  7212  0024A2  C016  F01C         	movff	___fldiv@new_exp,___fldiv@bexp
  7213  0024A6  A01C               	btfss	___fldiv@bexp^0,0,c
  7214  0024A8  EF58  F012         	goto	u3181
  7215  0024AC  EF5A  F012         	goto	u3180
  7216  0024B0                     u3181:
  7217  0024B0  EF5D  F012         	goto	l2996
  7218  0024B4                     u3180:
  7219  0024B4  8E07               	bsf	(___fldiv@b+2)^0,7,c
  7220  0024B6  EF5E  F012         	goto	l2998
  7221  0024BA                     l2996:
  7222  0024BA  9E07               	bcf	(___fldiv@b+2)^0,7,c
  7223  0024BC                     l2998:
  7224  0024BC  90D8               	bcf	status,0,c
  7225  0024BE  301C               	rrcf	___fldiv@bexp^0,w,c
  7226  0024C0  6E08               	movwf	(___fldiv@b+3)^0,c
  7227  0024C2  EF14  F011         	goto	l2912
  7228  0024C6                     l714:
  7229  0024C6  0012               	return		;funcret
  7230  0024C8                     __end_of___fldiv:
  7231                           	callstack 0
  7232                           
  7233 ;; *************** function ___awmod *****************
  7234 ;; Defined at:
  7235 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awmod.c"
  7236 ;; Parameters:    Size  Location     Type
  7237 ;;  dividend        2    4[COMRAM] int 
  7238 ;;  divisor         2    6[COMRAM] int 
  7239 ;; Auto vars:     Size  Location     Type
  7240 ;;  sign            1    9[COMRAM] unsigned char 
  7241 ;;  counter         1    8[COMRAM] unsigned char 
  7242 ;; Return value:  Size  Location     Type
  7243 ;;                  2    4[COMRAM] int 
  7244 ;; Registers used:
  7245 ;;		wreg, status,2, status,0
  7246 ;; Tracked objects:
  7247 ;;		On entry : 0/0
  7248 ;;		On exit  : 0/0
  7249 ;;		Unchanged: 0/0
  7250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7251 ;;      Params:         4       0       0       0       0       0       0       0       0
  7252 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7253 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7254 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7255 ;;Total ram usage:        6 bytes
  7256 ;; Hardware stack levels used:    1
  7257 ;; Hardware stack levels required when called:    2
  7258 ;; This function calls:
  7259 ;;		Nothing
  7260 ;; This function is called by:
  7261 ;;		_efgtoa
  7262 ;; This function uses a non-reentrant model
  7263 ;;
  7264                           
  7265                           	psect	text24
  7266  003396                     __ptext24:
  7267                           	callstack 0
  7268  003396                     ___awmod:
  7269                           	callstack 24
  7270  003396  0E00               	movlw	0
  7271  003398  6E0A               	movwf	___awmod@sign^0,c
  7272  00339A  BE06               	btfsc	(___awmod@dividend+1)^0,7,c
  7273  00339C  EFD4  F019         	goto	u3440
  7274  0033A0  EFD2  F019         	goto	u3441
  7275  0033A4                     u3441:
  7276  0033A4  EFDA  F019         	goto	l3194
  7277  0033A8                     u3440:
  7278  0033A8  6C05               	negf	___awmod@dividend^0,c
  7279  0033AA  1E06               	comf	(___awmod@dividend+1)^0,f,c
  7280  0033AC  B0D8               	btfsc	status,0,c
  7281  0033AE  2A06               	incf	(___awmod@dividend+1)^0,f,c
  7282  0033B0  0E01               	movlw	1
  7283  0033B2  6E0A               	movwf	___awmod@sign^0,c
  7284  0033B4                     l3194:
  7285  0033B4  BE08               	btfsc	(___awmod@divisor+1)^0,7,c
  7286  0033B6  EFE1  F019         	goto	u3450
  7287  0033BA  EFDF  F019         	goto	u3451
  7288  0033BE                     u3451:
  7289  0033BE  EFE5  F019         	goto	l3198
  7290  0033C2                     u3450:
  7291  0033C2  6C07               	negf	___awmod@divisor^0,c
  7292  0033C4  1E08               	comf	(___awmod@divisor+1)^0,f,c
  7293  0033C6  B0D8               	btfsc	status,0,c
  7294  0033C8  2A08               	incf	(___awmod@divisor+1)^0,f,c
  7295  0033CA                     l3198:
  7296  0033CA  5007               	movf	___awmod@divisor^0,w,c
  7297  0033CC  1008               	iorwf	(___awmod@divisor+1)^0,w,c
  7298  0033CE  B4D8               	btfsc	status,2,c
  7299  0033D0  EFEC  F019         	goto	u3461
  7300  0033D4  EFEE  F019         	goto	u3460
  7301  0033D8                     u3461:
  7302  0033D8  EF12  F01A         	goto	l3214
  7303  0033DC                     u3460:
  7304  0033DC  0E01               	movlw	1
  7305  0033DE  6E09               	movwf	___awmod@counter^0,c
  7306  0033E0  EFF6  F019         	goto	l3204
  7307  0033E4                     l3202:
  7308  0033E4  90D8               	bcf	status,0,c
  7309  0033E6  3607               	rlcf	___awmod@divisor^0,f,c
  7310  0033E8  3608               	rlcf	(___awmod@divisor+1)^0,f,c
  7311  0033EA  2A09               	incf	___awmod@counter^0,f,c
  7312  0033EC                     l3204:
  7313  0033EC  AE08               	btfss	(___awmod@divisor+1)^0,7,c
  7314  0033EE  EFFB  F019         	goto	u3471
  7315  0033F2  EFFD  F019         	goto	u3470
  7316  0033F6                     u3471:
  7317  0033F6  EFF2  F019         	goto	l3202
  7318  0033FA                     u3470:
  7319  0033FA                     l3206:
  7320  0033FA  5007               	movf	___awmod@divisor^0,w,c
  7321  0033FC  5C05               	subwf	___awmod@dividend^0,w,c
  7322  0033FE  5008               	movf	(___awmod@divisor+1)^0,w,c
  7323  003400  5806               	subwfb	(___awmod@dividend+1)^0,w,c
  7324  003402  A0D8               	btfss	status,0,c
  7325  003404  EF06  F01A         	goto	u3481
  7326  003408  EF08  F01A         	goto	u3480
  7327  00340C                     u3481:
  7328  00340C  EF0C  F01A         	goto	l3210
  7329  003410                     u3480:
  7330  003410  5007               	movf	___awmod@divisor^0,w,c
  7331  003412  5E05               	subwf	___awmod@dividend^0,f,c
  7332  003414  5008               	movf	(___awmod@divisor+1)^0,w,c
  7333  003416  5A06               	subwfb	(___awmod@dividend+1)^0,f,c
  7334  003418                     l3210:
  7335  003418  90D8               	bcf	status,0,c
  7336  00341A  3208               	rrcf	(___awmod@divisor+1)^0,f,c
  7337  00341C  3207               	rrcf	___awmod@divisor^0,f,c
  7338  00341E  2E09               	decfsz	___awmod@counter^0,f,c
  7339  003420  EFFD  F019         	goto	l3206
  7340  003424                     l3214:
  7341  003424  500A               	movf	___awmod@sign^0,w,c
  7342  003426  B4D8               	btfsc	status,2,c
  7343  003428  EF18  F01A         	goto	u3491
  7344  00342C  EF1A  F01A         	goto	u3490
  7345  003430                     u3491:
  7346  003430  EF1E  F01A         	goto	l3218
  7347  003434                     u3490:
  7348  003434  6C05               	negf	___awmod@dividend^0,c
  7349  003436  1E06               	comf	(___awmod@dividend+1)^0,f,c
  7350  003438  B0D8               	btfsc	status,0,c
  7351  00343A  2A06               	incf	(___awmod@dividend+1)^0,f,c
  7352  00343C                     l3218:
  7353  00343C  C005  F005         	movff	___awmod@dividend,?___awmod
  7354  003440  C006  F006         	movff	___awmod@dividend+1,?___awmod+1
  7355  003444  0012               	return		;funcret
  7356  003446                     __end_of___awmod:
  7357                           	callstack 0
  7358                           
  7359 ;; *************** function ___awdiv *****************
  7360 ;; Defined at:
  7361 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
  7362 ;; Parameters:    Size  Location     Type
  7363 ;;  dividend        2    4[COMRAM] int 
  7364 ;;  divisor         2    6[COMRAM] int 
  7365 ;; Auto vars:     Size  Location     Type
  7366 ;;  quotient        2   10[COMRAM] int 
  7367 ;;  sign            1    9[COMRAM] unsigned char 
  7368 ;;  counter         1    8[COMRAM] unsigned char 
  7369 ;; Return value:  Size  Location     Type
  7370 ;;                  2    4[COMRAM] int 
  7371 ;; Registers used:
  7372 ;;		wreg, status,2, status,0
  7373 ;; Tracked objects:
  7374 ;;		On entry : 0/0
  7375 ;;		On exit  : 0/0
  7376 ;;		Unchanged: 0/0
  7377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7378 ;;      Params:         4       0       0       0       0       0       0       0       0
  7379 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7380 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7381 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7382 ;;Total ram usage:        8 bytes
  7383 ;; Hardware stack levels used:    1
  7384 ;; Hardware stack levels required when called:    2
  7385 ;; This function calls:
  7386 ;;		Nothing
  7387 ;; This function is called by:
  7388 ;;		_efgtoa
  7389 ;; This function uses a non-reentrant model
  7390 ;;
  7391                           
  7392                           	psect	text25
  7393  003210                     __ptext25:
  7394                           	callstack 0
  7395  003210                     ___awdiv:
  7396                           	callstack 24
  7397  003210  0E00               	movlw	0
  7398  003212  6E0A               	movwf	___awdiv@sign^0,c
  7399  003214  BE08               	btfsc	(___awdiv@divisor+1)^0,7,c
  7400  003216  EF11  F019         	goto	u3380
  7401  00321A  EF0F  F019         	goto	u3381
  7402  00321E                     u3381:
  7403  00321E  EF17  F019         	goto	l3150
  7404  003222                     u3380:
  7405  003222  6C07               	negf	___awdiv@divisor^0,c
  7406  003224  1E08               	comf	(___awdiv@divisor+1)^0,f,c
  7407  003226  B0D8               	btfsc	status,0,c
  7408  003228  2A08               	incf	(___awdiv@divisor+1)^0,f,c
  7409  00322A  0E01               	movlw	1
  7410  00322C  6E0A               	movwf	___awdiv@sign^0,c
  7411  00322E                     l3150:
  7412  00322E  BE06               	btfsc	(___awdiv@dividend+1)^0,7,c
  7413  003230  EF1E  F019         	goto	u3390
  7414  003234  EF1C  F019         	goto	u3391
  7415  003238                     u3391:
  7416  003238  EF24  F019         	goto	l3156
  7417  00323C                     u3390:
  7418  00323C  6C05               	negf	___awdiv@dividend^0,c
  7419  00323E  1E06               	comf	(___awdiv@dividend+1)^0,f,c
  7420  003240  B0D8               	btfsc	status,0,c
  7421  003242  2A06               	incf	(___awdiv@dividend+1)^0,f,c
  7422  003244  0E01               	movlw	1
  7423  003246  1A0A               	xorwf	___awdiv@sign^0,f,c
  7424  003248                     l3156:
  7425  003248  0E00               	movlw	0
  7426  00324A  6E0C               	movwf	(___awdiv@quotient+1)^0,c
  7427  00324C  0E00               	movlw	0
  7428  00324E  6E0B               	movwf	___awdiv@quotient^0,c
  7429  003250  5007               	movf	___awdiv@divisor^0,w,c
  7430  003252  1008               	iorwf	(___awdiv@divisor+1)^0,w,c
  7431  003254  B4D8               	btfsc	status,2,c
  7432  003256  EF2F  F019         	goto	u3401
  7433  00325A  EF31  F019         	goto	u3400
  7434  00325E                     u3401:
  7435  00325E  EF59  F019         	goto	l3178
  7436  003262                     u3400:
  7437  003262  0E01               	movlw	1
  7438  003264  6E09               	movwf	___awdiv@counter^0,c
  7439  003266  EF39  F019         	goto	l3164
  7440  00326A                     l3162:
  7441  00326A  90D8               	bcf	status,0,c
  7442  00326C  3607               	rlcf	___awdiv@divisor^0,f,c
  7443  00326E  3608               	rlcf	(___awdiv@divisor+1)^0,f,c
  7444  003270  2A09               	incf	___awdiv@counter^0,f,c
  7445  003272                     l3164:
  7446  003272  AE08               	btfss	(___awdiv@divisor+1)^0,7,c
  7447  003274  EF3E  F019         	goto	u3411
  7448  003278  EF40  F019         	goto	u3410
  7449  00327C                     u3411:
  7450  00327C  EF35  F019         	goto	l3162
  7451  003280                     u3410:
  7452  003280                     l3166:
  7453  003280  90D8               	bcf	status,0,c
  7454  003282  360B               	rlcf	___awdiv@quotient^0,f,c
  7455  003284  360C               	rlcf	(___awdiv@quotient+1)^0,f,c
  7456  003286  5007               	movf	___awdiv@divisor^0,w,c
  7457  003288  5C05               	subwf	___awdiv@dividend^0,w,c
  7458  00328A  5008               	movf	(___awdiv@divisor+1)^0,w,c
  7459  00328C  5806               	subwfb	(___awdiv@dividend+1)^0,w,c
  7460  00328E  A0D8               	btfss	status,0,c
  7461  003290  EF4C  F019         	goto	u3421
  7462  003294  EF4E  F019         	goto	u3420
  7463  003298                     u3421:
  7464  003298  EF53  F019         	goto	l3174
  7465  00329C                     u3420:
  7466  00329C  5007               	movf	___awdiv@divisor^0,w,c
  7467  00329E  5E05               	subwf	___awdiv@dividend^0,f,c
  7468  0032A0  5008               	movf	(___awdiv@divisor+1)^0,w,c
  7469  0032A2  5A06               	subwfb	(___awdiv@dividend+1)^0,f,c
  7470  0032A4  800B               	bsf	___awdiv@quotient^0,0,c
  7471  0032A6                     l3174:
  7472  0032A6  90D8               	bcf	status,0,c
  7473  0032A8  3208               	rrcf	(___awdiv@divisor+1)^0,f,c
  7474  0032AA  3207               	rrcf	___awdiv@divisor^0,f,c
  7475  0032AC  2E09               	decfsz	___awdiv@counter^0,f,c
  7476  0032AE  EF40  F019         	goto	l3166
  7477  0032B2                     l3178:
  7478  0032B2  500A               	movf	___awdiv@sign^0,w,c
  7479  0032B4  B4D8               	btfsc	status,2,c
  7480  0032B6  EF5F  F019         	goto	u3431
  7481  0032BA  EF61  F019         	goto	u3430
  7482  0032BE                     u3431:
  7483  0032BE  EF65  F019         	goto	l3182
  7484  0032C2                     u3430:
  7485  0032C2  6C0B               	negf	___awdiv@quotient^0,c
  7486  0032C4  1E0C               	comf	(___awdiv@quotient+1)^0,f,c
  7487  0032C6  B0D8               	btfsc	status,0,c
  7488  0032C8  2A0C               	incf	(___awdiv@quotient+1)^0,f,c
  7489  0032CA                     l3182:
  7490  0032CA  C00B  F005         	movff	___awdiv@quotient,?___awdiv
  7491  0032CE  C00C  F006         	movff	___awdiv@quotient+1,?___awdiv+1
  7492  0032D2  0012               	return		;funcret
  7493  0032D4                     __end_of___awdiv:
  7494                           	callstack 0
  7495                           
  7496 ;; *************** function _atoi *****************
  7497 ;; Defined at:
  7498 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\atoi.c"
  7499 ;; Parameters:    Size  Location     Type
  7500 ;;  s               2   11[COMRAM] PTR const unsigned char 
  7501 ;;		 -> STR_4(10), STR_3(10), STR_2(10), STR_1(10), 
  7502 ;; Auto vars:     Size  Location     Type
  7503 ;;  n               2   24[COMRAM] int 
  7504 ;;  neg             2   17[COMRAM] int 
  7505 ;; Return value:  Size  Location     Type
  7506 ;;                  2   11[COMRAM] int 
  7507 ;; Registers used:
  7508 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7509 ;; Tracked objects:
  7510 ;;		On entry : 0/0
  7511 ;;		On exit  : 0/0
  7512 ;;		Unchanged: 0/0
  7513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7514 ;;      Params:         2       0       0       0       0       0       0       0       0
  7515 ;;      Locals:         9       0       0       0       0       0       0       0       0
  7516 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7517 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7518 ;;Total ram usage:       15 bytes
  7519 ;; Hardware stack levels used:    1
  7520 ;; Hardware stack levels required when called:    3
  7521 ;; This function calls:
  7522 ;;		___wmul
  7523 ;;		_isdigit
  7524 ;;		_isspace
  7525 ;; This function is called by:
  7526 ;;		_vfpfcnvrt
  7527 ;; This function uses a non-reentrant model
  7528 ;;
  7529                           
  7530                           	psect	text26
  7531  002BD8                     __ptext26:
  7532                           	callstack 0
  7533  002BD8                     _atoi:
  7534                           	callstack 24
  7535  002BD8  0E00               	movlw	0
  7536  002BDA  6E1A               	movwf	(atoi@n+1)^0,c
  7537  002BDC  0E00               	movlw	0
  7538  002BDE  6E19               	movwf	atoi@n^0,c
  7539  002BE0  0E00               	movlw	0
  7540  002BE2  6E13               	movwf	(atoi@neg+1)^0,c
  7541  002BE4  0E00               	movlw	0
  7542  002BE6  6E12               	movwf	atoi@neg^0,c
  7543  002BE8  EFF8  F015         	goto	l3716
  7544  002BEC                     l3714:
  7545  002BEC  4A0C               	infsnz	atoi@s^0,f,c
  7546  002BEE  2A0D               	incf	(atoi@s+1)^0,f,c
  7547  002BF0                     l3716:
  7548  002BF0  0E01               	movlw	1
  7549  002BF2  6E18               	movwf	_atoi$1299^0,c
  7550  002BF4  C00C  FFF6         	movff	atoi@s,tblptrl
  7551  002BF8  C00D  FFF7         	movff	atoi@s+1,tblptrh
  7552  002BFC                     	if	0	;tblptru may be non-zero
  7553  002BFC                     	endif
  7554  002BFC                     	if	0	;tblptru may be non-zero
  7555  002BFC                     	endif
  7556  002BFC  0008               	tblrd		*
  7557  002BFE  50F5               	movf	tablat,w,c
  7558  002C00  0A20               	xorlw	32
  7559  002C02  B4D8               	btfsc	status,2,c
  7560  002C04  EF06  F016         	goto	u4481
  7561  002C08  EF08  F016         	goto	u4480
  7562  002C0C                     u4481:
  7563  002C0C  EF25  F016         	goto	l3724
  7564  002C10                     u4480:
  7565  002C10  0EF7               	movlw	247
  7566  002C12  6E0E               	movwf	??_atoi^0,c
  7567  002C14  0EFF               	movlw	255
  7568  002C16  6E0F               	movwf	(??_atoi+1)^0,c
  7569  002C18  C00C  FFF6         	movff	atoi@s,tblptrl
  7570  002C1C  C00D  FFF7         	movff	atoi@s+1,tblptrh
  7571  002C20                     	if	0	;tblptru may be non-zero
  7572  002C20                     	endif
  7573  002C20                     	if	0	;tblptru may be non-zero
  7574  002C20                     	endif
  7575  002C20  0008               	tblrd		*
  7576  002C22  50F5               	movf	tablat,w,c
  7577  002C24  6E10               	movwf	(??_atoi+2)^0,c
  7578  002C26  6A11               	clrf	(??_atoi+3)^0,c
  7579  002C28  500E               	movf	??_atoi^0,w,c
  7580  002C2A  2610               	addwf	(??_atoi+2)^0,f,c
  7581  002C2C  500F               	movf	(??_atoi+1)^0,w,c
  7582  002C2E  2211               	addwfc	(??_atoi+3)^0,f,c
  7583  002C30  5011               	movf	(??_atoi+3)^0,w,c
  7584  002C32  E109               	bnz	u4490
  7585  002C34  0E05               	movlw	5
  7586  002C36  5C10               	subwf	(??_atoi+2)^0,w,c
  7587  002C38  A0D8               	btfss	status,0,c
  7588  002C3A  EF21  F016         	goto	u4491
  7589  002C3E  EF23  F016         	goto	u4490
  7590  002C42                     u4491:
  7591  002C42  EF25  F016         	goto	l3724
  7592  002C46                     u4490:
  7593  002C46  0E00               	movlw	0
  7594  002C48  6E18               	movwf	_atoi$1299^0,c
  7595  002C4A                     l3724:
  7596  002C4A  C018  F014         	movff	_atoi$1299,_atoi$1298
  7597  002C4E  6A15               	clrf	(_atoi$1298+1)^0,c
  7598  002C50  5014               	movf	_atoi$1298^0,w,c
  7599  002C52  1015               	iorwf	(_atoi$1298+1)^0,w,c
  7600  002C54  A4D8               	btfss	status,2,c
  7601  002C56  EF2F  F016         	goto	u4501
  7602  002C5A  EF31  F016         	goto	u4500
  7603  002C5E                     u4501:
  7604  002C5E  EFF6  F015         	goto	l3714
  7605  002C62                     u4500:
  7606  002C62  EF3B  F016         	goto	l3734
  7607  002C66                     l3730:
  7608  002C66  0E00               	movlw	0
  7609  002C68  6E13               	movwf	(atoi@neg+1)^0,c
  7610  002C6A  0E01               	movlw	1
  7611  002C6C  6E12               	movwf	atoi@neg^0,c
  7612  002C6E                     l3732:
  7613  002C6E  4A0C               	infsnz	atoi@s^0,f,c
  7614  002C70  2A0D               	incf	(atoi@s+1)^0,f,c
  7615  002C72  EF70  F016         	goto	l3740
  7616  002C76                     l3734:
  7617  002C76  C00C  FFF6         	movff	atoi@s,tblptrl
  7618  002C7A  C00D  FFF7         	movff	atoi@s+1,tblptrh
  7619  002C7E                     	if	0	;tblptru may be non-zero
  7620  002C7E                     	endif
  7621  002C7E                     	if	0	;tblptru may be non-zero
  7622  002C7E                     	endif
  7623  002C7E  0008               	tblrd		*
  7624  002C80  50F5               	movf	tablat,w,c
  7625  002C82  6E0E               	movwf	??_atoi^0,c
  7626  002C84  6A0F               	clrf	(??_atoi+1)^0,c
  7627                           
  7628                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7629                           ; Switch size 1, requested type "simple"
  7630                           ; Number of cases is 1, Range of values is 0 to 0
  7631                           ; switch strategies available:
  7632                           ; Name         Instructions Cycles
  7633                           ; simple_byte            4     3 (average)
  7634                           ;	Chosen strategy is simple_byte
  7635  002C86  500F               	movf	(??_atoi+1)^0,w,c
  7636  002C88  0A00               	xorlw	0	; case 0
  7637  002C8A  B4D8               	btfsc	status,2,c
  7638  002C8C  EF4A  F016         	goto	l4342
  7639  002C90  EF70  F016         	goto	l3740
  7640  002C94                     l4342:
  7641                           
  7642                           ; Switch size 1, requested type "simple"
  7643                           ; Number of cases is 2, Range of values is 43 to 45
  7644                           ; switch strategies available:
  7645                           ; Name         Instructions Cycles
  7646                           ; simple_byte            7     4 (average)
  7647                           ;	Chosen strategy is simple_byte
  7648  002C94  500E               	movf	??_atoi^0,w,c
  7649  002C96  0A2B               	xorlw	43	; case 43
  7650  002C98  B4D8               	btfsc	status,2,c
  7651  002C9A  EF37  F016         	goto	l3732
  7652  002C9E  0A06               	xorlw	6	; case 45
  7653  002CA0  B4D8               	btfsc	status,2,c
  7654  002CA2  EF33  F016         	goto	l3730
  7655  002CA6  EF70  F016         	goto	l3740
  7656  002CAA                     l3736:
  7657  002CAA  C019  F005         	movff	atoi@n,___wmul@multiplier
  7658  002CAE  C01A  F006         	movff	atoi@n+1,___wmul@multiplier+1
  7659  002CB2  0E00               	movlw	0
  7660  002CB4  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  7661  002CB6  0E0A               	movlw	10
  7662  002CB8  6E07               	movwf	___wmul@multiplicand^0,c
  7663  002CBA  EC5A  F01D         	call	___wmul	;wreg free
  7664  002CBE  C00C  FFF6         	movff	atoi@s,tblptrl
  7665  002CC2  C00D  FFF7         	movff	atoi@s+1,tblptrh
  7666  002CC6                     	if	0	;tblptru may be non-zero
  7667  002CC6                     	endif
  7668  002CC6                     	if	0	;tblptru may be non-zero
  7669  002CC6                     	endif
  7670  002CC6  0008               	tblrd		*
  7671  002CC8  50F5               	movf	tablat,w,c
  7672  002CCA  5E05               	subwf	?___wmul^0,f,c
  7673  002CCC  0E00               	movlw	0
  7674  002CCE  5A06               	subwfb	(?___wmul+1)^0,f,c
  7675  002CD0  0E30               	movlw	48
  7676  002CD2  2405               	addwf	?___wmul^0,w,c
  7677  002CD4  6E19               	movwf	atoi@n^0,c
  7678  002CD6  0E00               	movlw	0
  7679  002CD8  2006               	addwfc	(?___wmul+1)^0,w,c
  7680  002CDA  6E1A               	movwf	(atoi@n+1)^0,c
  7681  002CDC  EF37  F016         	goto	l3732
  7682  002CE0                     l3740:
  7683  002CE0  0ED0               	movlw	208
  7684  002CE2  6E0E               	movwf	??_atoi^0,c
  7685  002CE4  0EFF               	movlw	255
  7686  002CE6  6E0F               	movwf	(??_atoi+1)^0,c
  7687  002CE8  C00C  FFF6         	movff	atoi@s,tblptrl
  7688  002CEC  C00D  FFF7         	movff	atoi@s+1,tblptrh
  7689  002CF0                     	if	0	;tblptru may be non-zero
  7690  002CF0                     	endif
  7691  002CF0                     	if	0	;tblptru may be non-zero
  7692  002CF0                     	endif
  7693  002CF0  0008               	tblrd		*
  7694  002CF2  50F5               	movf	tablat,w,c
  7695  002CF4  6E10               	movwf	(??_atoi+2)^0,c
  7696  002CF6  6A11               	clrf	(??_atoi+3)^0,c
  7697  002CF8  500E               	movf	??_atoi^0,w,c
  7698  002CFA  2610               	addwf	(??_atoi+2)^0,f,c
  7699  002CFC  500F               	movf	(??_atoi+1)^0,w,c
  7700  002CFE  2211               	addwfc	(??_atoi+3)^0,f,c
  7701  002D00  5011               	movf	(??_atoi+3)^0,w,c
  7702  002D02  E10A               	bnz	u4510
  7703  002D04  0E0A               	movlw	10
  7704  002D06  5C10               	subwf	(??_atoi+2)^0,w,c
  7705  002D08  A0D8               	btfss	status,0,c
  7706  002D0A  EF89  F016         	goto	u4511
  7707  002D0E  EF8C  F016         	goto	u4510
  7708  002D12                     u4511:
  7709  002D12  0E01               	movlw	1
  7710  002D14  EF8D  F016         	goto	u4520
  7711  002D18                     u4510:
  7712  002D18  0E00               	movlw	0
  7713  002D1A                     u4520:
  7714  002D1A  6E16               	movwf	_atoi$1300^0,c
  7715  002D1C  6A17               	clrf	(_atoi$1300+1)^0,c
  7716  002D1E  5016               	movf	_atoi$1300^0,w,c
  7717  002D20  1017               	iorwf	(_atoi$1300+1)^0,w,c
  7718  002D22  A4D8               	btfss	status,2,c
  7719  002D24  EF96  F016         	goto	u4531
  7720  002D28  EF98  F016         	goto	u4530
  7721  002D2C                     u4531:
  7722  002D2C  EF55  F016         	goto	l3736
  7723  002D30                     u4530:
  7724  002D30  5012               	movf	atoi@neg^0,w,c
  7725  002D32  1013               	iorwf	(atoi@neg+1)^0,w,c
  7726  002D34  A4D8               	btfss	status,2,c
  7727  002D36  EF9F  F016         	goto	u4541
  7728  002D3A  EFA1  F016         	goto	u4540
  7729  002D3E                     u4541:
  7730  002D3E  EFAF  F016         	goto	l1017
  7731  002D42                     u4540:
  7732  002D42  C019  F00E         	movff	atoi@n,??_atoi
  7733  002D46  C01A  F00F         	movff	atoi@n+1,??_atoi+1
  7734  002D4A  1E0E               	comf	??_atoi^0,f,c
  7735  002D4C  1E0F               	comf	(??_atoi+1)^0,f,c
  7736  002D4E  4A0E               	infsnz	??_atoi^0,f,c
  7737  002D50  2A0F               	incf	(??_atoi+1)^0,f,c
  7738  002D52  C00E  F00C         	movff	??_atoi,?_atoi
  7739  002D56  C00F  F00D         	movff	??_atoi+1,?_atoi+1
  7740  002D5A  EFB3  F016         	goto	l1020
  7741  002D5E                     l1017:
  7742  002D5E  C019  F00C         	movff	atoi@n,?_atoi
  7743  002D62  C01A  F00D         	movff	atoi@n+1,?_atoi+1
  7744  002D66                     l1020:
  7745  002D66  0012               	return		;funcret
  7746  002D68                     __end_of_atoi:
  7747                           	callstack 0
  7748                           
  7749 ;; *************** function _isspace *****************
  7750 ;; Defined at:
  7751 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isspace.c"
  7752 ;; Parameters:    Size  Location     Type
  7753 ;;  c               2    4[COMRAM] int 
  7754 ;; Auto vars:     Size  Location     Type
  7755 ;;		None
  7756 ;; Return value:  Size  Location     Type
  7757 ;;                  2    4[COMRAM] int 
  7758 ;; Registers used:
  7759 ;;		wreg, status,2, status,0
  7760 ;; Tracked objects:
  7761 ;;		On entry : 0/0
  7762 ;;		On exit  : 0/0
  7763 ;;		Unchanged: 0/0
  7764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7765 ;;      Params:         2       0       0       0       0       0       0       0       0
  7766 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7767 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7768 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7769 ;;Total ram usage:        7 bytes
  7770 ;; Hardware stack levels used:    1
  7771 ;; Hardware stack levels required when called:    2
  7772 ;; This function calls:
  7773 ;;		Nothing
  7774 ;; This function is called by:
  7775 ;;		_atoi
  7776 ;; This function uses a non-reentrant model
  7777 ;;
  7778                           
  7779                           	psect	text27
  7780  0037AA                     __ptext27:
  7781                           	callstack 0
  7782  0037AA                     _isspace:
  7783                           	callstack 24
  7784  0037AA  0E01               	movlw	1
  7785  0037AC  6E0B               	movwf	_isspace$1329^0,c
  7786  0037AE  0E20               	movlw	32
  7787  0037B0  1805               	xorwf	isspace@c^0,w,c
  7788  0037B2  1006               	iorwf	(isspace@c+1)^0,w,c
  7789  0037B4  B4D8               	btfsc	status,2,c
  7790  0037B6  EFDF  F01B         	goto	u3941
  7791  0037BA  EFE1  F01B         	goto	u3940
  7792  0037BE                     u3941:
  7793  0037BE  EFFA  F01B         	goto	l3410
  7794  0037C2                     u3940:
  7795  0037C2  0EF7               	movlw	247
  7796  0037C4  6E07               	movwf	??_isspace^0,c
  7797  0037C6  0EFF               	movlw	255
  7798  0037C8  6E08               	movwf	(??_isspace+1)^0,c
  7799  0037CA  C005  F009         	movff	isspace@c,??_isspace+2
  7800  0037CE  C006  F00A         	movff	isspace@c+1,??_isspace+3
  7801  0037D2  5007               	movf	??_isspace^0,w,c
  7802  0037D4  2609               	addwf	(??_isspace+2)^0,f,c
  7803  0037D6  5008               	movf	(??_isspace+1)^0,w,c
  7804  0037D8  220A               	addwfc	(??_isspace+3)^0,f,c
  7805  0037DA  500A               	movf	(??_isspace+3)^0,w,c
  7806  0037DC  E109               	bnz	u3950
  7807  0037DE  0E05               	movlw	5
  7808  0037E0  5C09               	subwf	(??_isspace+2)^0,w,c
  7809  0037E2  A0D8               	btfss	status,0,c
  7810  0037E4  EFF6  F01B         	goto	u3951
  7811  0037E8  EFF8  F01B         	goto	u3950
  7812  0037EC                     u3951:
  7813  0037EC  EFFA  F01B         	goto	l3410
  7814  0037F0                     u3950:
  7815  0037F0  0E00               	movlw	0
  7816  0037F2  6E0B               	movwf	_isspace$1329^0,c
  7817  0037F4                     l3410:
  7818  0037F4  C00B  F005         	movff	_isspace$1329,?_isspace
  7819  0037F8  6A06               	clrf	(?_isspace+1)^0,c
  7820  0037FA  0012               	return		;funcret
  7821  0037FC                     __end_of_isspace:
  7822                           	callstack 0
  7823                           
  7824 ;; *************** function _isdigit *****************
  7825 ;; Defined at:
  7826 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isdigit.c"
  7827 ;; Parameters:    Size  Location     Type
  7828 ;;  c               2    4[COMRAM] int 
  7829 ;; Auto vars:     Size  Location     Type
  7830 ;;		None
  7831 ;; Return value:  Size  Location     Type
  7832 ;;                  2    4[COMRAM] int 
  7833 ;; Registers used:
  7834 ;;		wreg, status,2, status,0
  7835 ;; Tracked objects:
  7836 ;;		On entry : 0/0
  7837 ;;		On exit  : 0/0
  7838 ;;		Unchanged: 0/0
  7839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7840 ;;      Params:         2       0       0       0       0       0       0       0       0
  7841 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7842 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7843 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7844 ;;Total ram usage:        6 bytes
  7845 ;; Hardware stack levels used:    1
  7846 ;; Hardware stack levels required when called:    2
  7847 ;; This function calls:
  7848 ;;		Nothing
  7849 ;; This function is called by:
  7850 ;;		_vfpfcnvrt
  7851 ;;		_atoi
  7852 ;; This function uses a non-reentrant model
  7853 ;;
  7854                           
  7855                           	psect	text28
  7856  00397A                     __ptext28:
  7857                           	callstack 0
  7858  00397A                     _isdigit:
  7859                           	callstack 25
  7860  00397A  0ED0               	movlw	208
  7861  00397C  6E07               	movwf	??_isdigit^0,c
  7862  00397E  0EFF               	movlw	255
  7863  003980  6E08               	movwf	(??_isdigit+1)^0,c
  7864  003982  C005  F009         	movff	isdigit@c,??_isdigit+2
  7865  003986  C006  F00A         	movff	isdigit@c+1,??_isdigit+3
  7866  00398A  5007               	movf	??_isdigit^0,w,c
  7867  00398C  2609               	addwf	(??_isdigit+2)^0,f,c
  7868  00398E  5008               	movf	(??_isdigit+1)^0,w,c
  7869  003990  220A               	addwfc	(??_isdigit+3)^0,f,c
  7870  003992  500A               	movf	(??_isdigit+3)^0,w,c
  7871  003994  E10A               	bnz	u3920
  7872  003996  0E0A               	movlw	10
  7873  003998  5C09               	subwf	(??_isdigit+2)^0,w,c
  7874  00399A  A0D8               	btfss	status,0,c
  7875  00399C  EFD2  F01C         	goto	u3921
  7876  0039A0  EFD5  F01C         	goto	u3920
  7877  0039A4                     u3921:
  7878  0039A4  0E01               	movlw	1
  7879  0039A6  EFD6  F01C         	goto	u3930
  7880  0039AA                     u3920:
  7881  0039AA  0E00               	movlw	0
  7882  0039AC                     u3930:
  7883  0039AC  6E05               	movwf	?_isdigit^0,c
  7884  0039AE  6A06               	clrf	(?_isdigit+1)^0,c
  7885  0039B0  0012               	return		;funcret
  7886  0039B2                     __end_of_isdigit:
  7887                           	callstack 0
  7888                           
  7889 ;; *************** function ___wmul *****************
  7890 ;; Defined at:
  7891 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
  7892 ;; Parameters:    Size  Location     Type
  7893 ;;  multiplier      2    4[COMRAM] unsigned int 
  7894 ;;  multiplicand    2    6[COMRAM] unsigned int 
  7895 ;; Auto vars:     Size  Location     Type
  7896 ;;  product         2    8[COMRAM] unsigned int 
  7897 ;; Return value:  Size  Location     Type
  7898 ;;                  2    4[COMRAM] unsigned int 
  7899 ;; Registers used:
  7900 ;;		wreg, status,2, status,0, prodl, prodh
  7901 ;; Tracked objects:
  7902 ;;		On entry : 0/0
  7903 ;;		On exit  : 0/0
  7904 ;;		Unchanged: 0/0
  7905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7906 ;;      Params:         4       0       0       0       0       0       0       0       0
  7907 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7908 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7909 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7910 ;;Total ram usage:        6 bytes
  7911 ;; Hardware stack levels used:    1
  7912 ;; Hardware stack levels required when called:    2
  7913 ;; This function calls:
  7914 ;;		Nothing
  7915 ;; This function is called by:
  7916 ;;		_atoi
  7917 ;; This function uses a non-reentrant model
  7918 ;;
  7919                           
  7920                           	psect	text29
  7921  003AB4                     __ptext29:
  7922                           	callstack 0
  7923  003AB4                     ___wmul:
  7924                           	callstack 24
  7925  003AB4  5005               	movf	___wmul@multiplier^0,w,c
  7926  003AB6  0207               	mulwf	___wmul@multiplicand^0,c
  7927  003AB8  CFF3 F009          	movff	prodl,___wmul@product
  7928  003ABC  CFF4 F00A          	movff	prodh,___wmul@product+1
  7929  003AC0  5005               	movf	___wmul@multiplier^0,w,c
  7930  003AC2  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  7931  003AC4  50F3               	movf	243,w,c
  7932  003AC6  260A               	addwf	(___wmul@product+1)^0,f,c
  7933  003AC8  5006               	movf	(___wmul@multiplier+1)^0,w,c
  7934  003ACA  0207               	mulwf	___wmul@multiplicand^0,c
  7935  003ACC  50F3               	movf	243,w,c
  7936  003ACE  260A               	addwf	(___wmul@product+1)^0,f,c
  7937  003AD0  C009  F005         	movff	___wmul@product,?___wmul
  7938  003AD4  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  7939  003AD8  0012               	return		;funcret
  7940  003ADA                     __end_of___wmul:
  7941                           	callstack 0
  7942                           
  7943 ;; *************** function ___xxtofl *****************
  7944 ;; Defined at:
  7945 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\xxtofl.c"
  7946 ;; Parameters:    Size  Location     Type
  7947 ;;  sign            1    wreg     unsigned char 
  7948 ;;  val             4    4[COMRAM] long 
  7949 ;; Auto vars:     Size  Location     Type
  7950 ;;  sign            1   12[COMRAM] unsigned char 
  7951 ;;  arg             4   14[COMRAM] unsigned long 
  7952 ;;  exp             1   13[COMRAM] unsigned char 
  7953 ;; Return value:  Size  Location     Type
  7954 ;;                  4    4[COMRAM] unsigned char 
  7955 ;; Registers used:
  7956 ;;		wreg, status,2, status,0
  7957 ;; Tracked objects:
  7958 ;;		On entry : 0/0
  7959 ;;		On exit  : 0/0
  7960 ;;		Unchanged: 0/0
  7961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7962 ;;      Params:         4       0       0       0       0       0       0       0       0
  7963 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7964 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7965 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7966 ;;Total ram usage:       14 bytes
  7967 ;; Hardware stack levels used:    1
  7968 ;; Hardware stack levels required when called:    2
  7969 ;; This function calls:
  7970 ;;		Nothing
  7971 ;; This function is called by:
  7972 ;;		_main
  7973 ;; This function uses a non-reentrant model
  7974 ;;
  7975                           
  7976                           	psect	text30
  7977  002A24                     __ptext30:
  7978                           	callstack 0
  7979  002A24                     ___xxtofl:
  7980                           	callstack 28
  7981                           
  7982                           ;incstack = 0
  7983                           ;___xxtofl@sign stored from wreg
  7984  002A24  6E0D               	movwf	___xxtofl@sign^0,c
  7985  002A26  500D               	movf	___xxtofl@sign^0,w,c
  7986  002A28  B4D8               	btfsc	status,2,c
  7987  002A2A  EF19  F015         	goto	u4801
  7988  002A2E  EF1B  F015         	goto	u4800
  7989  002A32                     u4801:
  7990  002A32  EF3D  F015         	goto	l787
  7991  002A36                     u4800:
  7992  002A36  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  7993  002A38  EF22  F015         	goto	u4810
  7994  002A3C  EF20  F015         	goto	u4811
  7995  002A40                     u4811:
  7996  002A40  EF3D  F015         	goto	l787
  7997  002A44                     u4810:
  7998  002A44  C005  F009         	movff	___xxtofl@val,??___xxtofl
  7999  002A48  C006  F00A         	movff	___xxtofl@val+1,??___xxtofl+1
  8000  002A4C  C007  F00B         	movff	___xxtofl@val+2,??___xxtofl+2
  8001  002A50  C008  F00C         	movff	___xxtofl@val+3,??___xxtofl+3
  8002  002A54  1E09               	comf	??___xxtofl^0,f,c
  8003  002A56  1E0A               	comf	(??___xxtofl+1)^0,f,c
  8004  002A58  1E0B               	comf	(??___xxtofl+2)^0,f,c
  8005  002A5A  1E0C               	comf	(??___xxtofl+3)^0,f,c
  8006  002A5C  2A09               	incf	??___xxtofl^0,f,c
  8007  002A5E  0E00               	movlw	0
  8008  002A60  220A               	addwfc	(??___xxtofl+1)^0,f,c
  8009  002A62  220B               	addwfc	(??___xxtofl+2)^0,f,c
  8010  002A64  220C               	addwfc	(??___xxtofl+3)^0,f,c
  8011  002A66  C009  F00F         	movff	??___xxtofl,___xxtofl@arg
  8012  002A6A  C00A  F010         	movff	??___xxtofl+1,___xxtofl@arg+1
  8013  002A6E  C00B  F011         	movff	??___xxtofl+2,___xxtofl@arg+2
  8014  002A72  C00C  F012         	movff	??___xxtofl+3,___xxtofl@arg+3
  8015  002A76  EF45  F015         	goto	l3994
  8016  002A7A                     l787:
  8017  002A7A  C005  F00F         	movff	___xxtofl@val,___xxtofl@arg
  8018  002A7E  C006  F010         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8019  002A82  C007  F011         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8020  002A86  C008  F012         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8021  002A8A                     l3994:
  8022  002A8A  5005               	movf	___xxtofl@val^0,w,c
  8023  002A8C  1006               	iorwf	(___xxtofl@val+1)^0,w,c
  8024  002A8E  1007               	iorwf	(___xxtofl@val+2)^0,w,c
  8025  002A90  1008               	iorwf	(___xxtofl@val+3)^0,w,c
  8026  002A92  A4D8               	btfss	status,2,c
  8027  002A94  EF4E  F015         	goto	u4821
  8028  002A98  EF50  F015         	goto	u4820
  8029  002A9C                     u4821:
  8030  002A9C  EF5A  F015         	goto	l4000
  8031  002AA0                     u4820:
  8032  002AA0  0E00               	movlw	0
  8033  002AA2  6E05               	movwf	?___xxtofl^0,c
  8034  002AA4  0E00               	movlw	0
  8035  002AA6  6E06               	movwf	(?___xxtofl+1)^0,c
  8036  002AA8  0E00               	movlw	0
  8037  002AAA  6E07               	movwf	(?___xxtofl+2)^0,c
  8038  002AAC  0E00               	movlw	0
  8039  002AAE  6E08               	movwf	(?___xxtofl+3)^0,c
  8040  002AB0  EFEB  F015         	goto	l790
  8041  002AB4                     l4000:
  8042  002AB4  0E96               	movlw	150
  8043  002AB6  6E0E               	movwf	___xxtofl@exp^0,c
  8044  002AB8  EF64  F015         	goto	l4004
  8045  002ABC                     l4002:
  8046  002ABC  2A0E               	incf	___xxtofl@exp^0,f,c
  8047  002ABE  90D8               	bcf	status,0,c
  8048  002AC0  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  8049  002AC2  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  8050  002AC4  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  8051  002AC6  320F               	rrcf	___xxtofl@arg^0,f,c
  8052  002AC8                     l4004:
  8053  002AC8  0E00               	movlw	0
  8054  002ACA  140F               	andwf	___xxtofl@arg^0,w,c
  8055  002ACC  6E09               	movwf	??___xxtofl^0,c
  8056  002ACE  0E00               	movlw	0
  8057  002AD0  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  8058  002AD2  6E0A               	movwf	(??___xxtofl+1)^0,c
  8059  002AD4  0E00               	movlw	0
  8060  002AD6  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  8061  002AD8  6E0B               	movwf	(??___xxtofl+2)^0,c
  8062  002ADA  0EFE               	movlw	254
  8063  002ADC  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  8064  002ADE  6E0C               	movwf	(??___xxtofl+3)^0,c
  8065  002AE0  5009               	movf	??___xxtofl^0,w,c
  8066  002AE2  100A               	iorwf	(??___xxtofl+1)^0,w,c
  8067  002AE4  100B               	iorwf	(??___xxtofl+2)^0,w,c
  8068  002AE6  100C               	iorwf	(??___xxtofl+3)^0,w,c
  8069  002AE8  A4D8               	btfss	status,2,c
  8070  002AEA  EF79  F015         	goto	u4831
  8071  002AEE  EF7B  F015         	goto	u4830
  8072  002AF2                     u4831:
  8073  002AF2  EF5E  F015         	goto	l4002
  8074  002AF6                     u4830:
  8075  002AF6  EF89  F015         	goto	l794
  8076  002AFA                     l4006:
  8077  002AFA  2A0E               	incf	___xxtofl@exp^0,f,c
  8078  002AFC  0E01               	movlw	1
  8079  002AFE  260F               	addwf	___xxtofl@arg^0,f,c
  8080  002B00  0E00               	movlw	0
  8081  002B02  2210               	addwfc	(___xxtofl@arg+1)^0,f,c
  8082  002B04  2211               	addwfc	(___xxtofl@arg+2)^0,f,c
  8083  002B06  2212               	addwfc	(___xxtofl@arg+3)^0,f,c
  8084  002B08  90D8               	bcf	status,0,c
  8085  002B0A  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  8086  002B0C  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  8087  002B0E  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  8088  002B10  320F               	rrcf	___xxtofl@arg^0,f,c
  8089  002B12                     l794:
  8090  002B12  0E00               	movlw	0
  8091  002B14  140F               	andwf	___xxtofl@arg^0,w,c
  8092  002B16  6E09               	movwf	??___xxtofl^0,c
  8093  002B18  0E00               	movlw	0
  8094  002B1A  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  8095  002B1C  6E0A               	movwf	(??___xxtofl+1)^0,c
  8096  002B1E  0E00               	movlw	0
  8097  002B20  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  8098  002B22  6E0B               	movwf	(??___xxtofl+2)^0,c
  8099  002B24  0EFF               	movlw	255
  8100  002B26  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  8101  002B28  6E0C               	movwf	(??___xxtofl+3)^0,c
  8102  002B2A  5009               	movf	??___xxtofl^0,w,c
  8103  002B2C  100A               	iorwf	(??___xxtofl+1)^0,w,c
  8104  002B2E  100B               	iorwf	(??___xxtofl+2)^0,w,c
  8105  002B30  100C               	iorwf	(??___xxtofl+3)^0,w,c
  8106  002B32  A4D8               	btfss	status,2,c
  8107  002B34  EF9E  F015         	goto	u4841
  8108  002B38  EFA0  F015         	goto	u4840
  8109  002B3C                     u4841:
  8110  002B3C  EF7D  F015         	goto	l4006
  8111  002B40                     u4840:
  8112  002B40  EFA8  F015         	goto	l4014
  8113  002B44                     l4012:
  8114  002B44  060E               	decf	___xxtofl@exp^0,f,c
  8115  002B46  90D8               	bcf	status,0,c
  8116  002B48  360F               	rlcf	___xxtofl@arg^0,f,c
  8117  002B4A  3610               	rlcf	(___xxtofl@arg+1)^0,f,c
  8118  002B4C  3611               	rlcf	(___xxtofl@arg+2)^0,f,c
  8119  002B4E  3612               	rlcf	(___xxtofl@arg+3)^0,f,c
  8120  002B50                     l4014:
  8121  002B50  BE11               	btfsc	(___xxtofl@arg+2)^0,7,c
  8122  002B52  EFAD  F015         	goto	u4851
  8123  002B56  EFAF  F015         	goto	u4850
  8124  002B5A                     u4851:
  8125  002B5A  EFB7  F015         	goto	l801
  8126  002B5E                     u4850:
  8127  002B5E  0E02               	movlw	2
  8128  002B60  600E               	cpfslt	___xxtofl@exp^0,c
  8129  002B62  EFB5  F015         	goto	u4861
  8130  002B66  EFB7  F015         	goto	u4860
  8131  002B6A                     u4861:
  8132  002B6A  EFA2  F015         	goto	l4012
  8133  002B6E                     u4860:
  8134  002B6E                     l801:
  8135  002B6E  B00E               	btfsc	___xxtofl@exp^0,0,c
  8136  002B70  EFBC  F015         	goto	u4871
  8137  002B74  EFBE  F015         	goto	u4870
  8138  002B78                     u4871:
  8139  002B78  EFBF  F015         	goto	l4020
  8140  002B7C                     u4870:
  8141  002B7C  9E11               	bcf	(___xxtofl@arg+2)^0,7,c
  8142  002B7E                     l4020:
  8143  002B7E  90D8               	bcf	status,0,c
  8144  002B80  320E               	rrcf	___xxtofl@exp^0,f,c
  8145  002B82  C00E  F009         	movff	___xxtofl@exp,??___xxtofl
  8146  002B86  6A0A               	clrf	(??___xxtofl+1)^0,c
  8147  002B88  6A0B               	clrf	(??___xxtofl+2)^0,c
  8148  002B8A  6A0C               	clrf	(??___xxtofl+3)^0,c
  8149  002B8C  C009  F00C         	movff	??___xxtofl,??___xxtofl+3
  8150  002B90  6A0B               	clrf	(??___xxtofl+2)^0,c
  8151  002B92  6A0A               	clrf	(??___xxtofl+1)^0,c
  8152  002B94  6A09               	clrf	??___xxtofl^0,c
  8153  002B96  5009               	movf	??___xxtofl^0,w,c
  8154  002B98  120F               	iorwf	___xxtofl@arg^0,f,c
  8155  002B9A  500A               	movf	(??___xxtofl+1)^0,w,c
  8156  002B9C  1210               	iorwf	(___xxtofl@arg+1)^0,f,c
  8157  002B9E  500B               	movf	(??___xxtofl+2)^0,w,c
  8158  002BA0  1211               	iorwf	(___xxtofl@arg+2)^0,f,c
  8159  002BA2  500C               	movf	(??___xxtofl+3)^0,w,c
  8160  002BA4  1212               	iorwf	(___xxtofl@arg+3)^0,f,c
  8161  002BA6  500D               	movf	___xxtofl@sign^0,w,c
  8162  002BA8  B4D8               	btfsc	status,2,c
  8163  002BAA  EFD9  F015         	goto	u4881
  8164  002BAE  EFDB  F015         	goto	u4880
  8165  002BB2                     u4881:
  8166  002BB2  EFE3  F015         	goto	l4030
  8167  002BB6                     u4880:
  8168  002BB6  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  8169  002BB8  EFE2  F015         	goto	u4890
  8170  002BBC  EFE0  F015         	goto	u4891
  8171  002BC0                     u4891:
  8172  002BC0  EFE3  F015         	goto	l4030
  8173  002BC4                     u4890:
  8174  002BC4  8E12               	bsf	(___xxtofl@arg+3)^0,7,c
  8175  002BC6                     l4030:
  8176  002BC6  C00F  F005         	movff	___xxtofl@arg,?___xxtofl
  8177  002BCA  C010  F006         	movff	___xxtofl@arg+1,?___xxtofl+1
  8178  002BCE  C011  F007         	movff	___xxtofl@arg+2,?___xxtofl+2
  8179  002BD2  C012  F008         	movff	___xxtofl@arg+3,?___xxtofl+3
  8180  002BD6                     l790:
  8181  002BD6  0012               	return		;funcret
  8182  002BD8                     __end_of___xxtofl:
  8183                           	callstack 0
  8184                           
  8185 ;; *************** function _Toggle *****************
  8186 ;; Defined at:
  8187 ;;		line 73 in file "Programa_principal.c"
  8188 ;; Parameters:    Size  Location     Type
  8189 ;;		None
  8190 ;; Auto vars:     Size  Location     Type
  8191 ;;		None
  8192 ;; Return value:  Size  Location     Type
  8193 ;;                  1    wreg      void 
  8194 ;; Registers used:
  8195 ;;		wreg, status,2, status,0
  8196 ;; Tracked objects:
  8197 ;;		On entry : 0/0
  8198 ;;		On exit  : 0/0
  8199 ;;		Unchanged: 0/0
  8200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8201 ;;      Params:         0       0       0       0       0       0       0       0       0
  8202 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8203 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8204 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8205 ;;Total ram usage:        2 bytes
  8206 ;; Hardware stack levels used:    1
  8207 ;; Hardware stack levels required when called:    2
  8208 ;; This function calls:
  8209 ;;		Nothing
  8210 ;; This function is called by:
  8211 ;;		_main
  8212 ;; This function uses a non-reentrant model
  8213 ;;
  8214                           
  8215                           	psect	text31
  8216  0038CC                     __ptext31:
  8217                           	callstack 0
  8218  0038CC                     _Toggle:
  8219                           	callstack 28
  8220  0038CC                     
  8221                           ;Programa_principal.c: 74:     LATCbits.LATC6 = ~LATCbits.LATC6;
  8222  0038CC  BC8B               	btfsc	139,6,c	;volatile
  8223  0038CE  EF6B  F01C         	goto	u4751
  8224  0038D2  EF6E  F01C         	goto	u4750
  8225  0038D6                     u4751:
  8226  0038D6  0E01               	movlw	1
  8227  0038D8  EF6F  F01C         	goto	u4756
  8228  0038DC                     u4750:
  8229  0038DC  0E00               	movlw	0
  8230  0038DE                     u4756:
  8231  0038DE  0AFF               	xorlw	255
  8232  0038E0  6E05               	movwf	??_Toggle^0,c
  8233  0038E2  3A05               	swapf	??_Toggle^0,f,c
  8234  0038E4  4605               	rlncf	??_Toggle^0,f,c
  8235  0038E6  4605               	rlncf	??_Toggle^0,f,c
  8236  0038E8  508B               	movf	139,w,c	;volatile
  8237  0038EA  1805               	xorwf	??_Toggle^0,w,c
  8238  0038EC  0BBF               	andlw	-65
  8239  0038EE  1805               	xorwf	??_Toggle^0,w,c
  8240  0038F0  6E8B               	movwf	139,c	;volatile
  8241  0038F2                     
  8242                           ;Programa_principal.c: 75:     _delay((unsigned long)((100)*(20000000UL/4000.0)));
  8243  0038F2  0E03               	movlw	3
  8244  0038F4  6E06               	movwf	(??_Toggle+1)^0,c
  8245  0038F6  0E8A               	movlw	138
  8246  0038F8  6E05               	movwf	??_Toggle^0,c
  8247  0038FA  0E56               	movlw	86
  8248  0038FC                     u5207:
  8249  0038FC  2EE8               	decfsz	wreg,f,c
  8250  0038FE  D7FE               	bra	u5207
  8251  003900  2E05               	decfsz	??_Toggle^0,f,c
  8252  003902  D7FC               	bra	u5207
  8253  003904  2E06               	decfsz	(??_Toggle+1)^0,f,c
  8254  003906  D7FA               	bra	u5207
  8255  003908  0012               	return		;funcret
  8256  00390A                     __end_of_Toggle:
  8257                           	callstack 0
  8258                           
  8259 ;; *************** function _Led *****************
  8260 ;; Defined at:
  8261 ;;		line 70 in file "Programa_principal.c"
  8262 ;; Parameters:    Size  Location     Type
  8263 ;;		None
  8264 ;; Auto vars:     Size  Location     Type
  8265 ;;		None
  8266 ;; Return value:  Size  Location     Type
  8267 ;;                  1    wreg      void 
  8268 ;; Registers used:
  8269 ;;		None
  8270 ;; Tracked objects:
  8271 ;;		On entry : 0/0
  8272 ;;		On exit  : 0/0
  8273 ;;		Unchanged: 0/0
  8274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8275 ;;      Params:         0       0       0       0       0       0       0       0       0
  8276 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8277 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8278 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8279 ;;Total ram usage:        0 bytes
  8280 ;; Hardware stack levels used:    1
  8281 ;; Hardware stack levels required when called:    2
  8282 ;; This function calls:
  8283 ;;		Nothing
  8284 ;; This function is called by:
  8285 ;;		_main
  8286 ;; This function uses a non-reentrant model
  8287 ;;
  8288                           
  8289                           	psect	text32
  8290  003B14                     __ptext32:
  8291                           	callstack 0
  8292  003B14                     _Led:
  8293                           	callstack 28
  8294  003B14                     
  8295                           ;Programa_principal.c: 71:     LATCbits.LATC6 = 1;
  8296  003B14  8C8B               	bsf	139,6,c	;volatile
  8297  003B16  0012               	return		;funcret
  8298  003B18                     __end_of_Led:
  8299                           	callstack 0
  8300                           
  8301 ;; *************** function _LDC_Cadena *****************
  8302 ;; Defined at:
  8303 ;;		line 96 in file "LCD_Libreria.c"
  8304 ;; Parameters:    Size  Location     Type
  8305 ;;  dato            2    6[COMRAM] PTR const unsigned char 
  8306 ;;		 -> dato(10), 
  8307 ;; Auto vars:     Size  Location     Type
  8308 ;;		None
  8309 ;; Return value:  Size  Location     Type
  8310 ;;                  1    wreg      void 
  8311 ;; Registers used:
  8312 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8313 ;; Tracked objects:
  8314 ;;		On entry : 0/0
  8315 ;;		On exit  : 0/0
  8316 ;;		Unchanged: 0/0
  8317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8318 ;;      Params:         2       0       0       0       0       0       0       0       0
  8319 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8320 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8321 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8322 ;;Total ram usage:        2 bytes
  8323 ;; Hardware stack levels used:    1
  8324 ;; Hardware stack levels required when called:    3
  8325 ;; This function calls:
  8326 ;;		_LCD_Data
  8327 ;; This function is called by:
  8328 ;;		_main
  8329 ;; This function uses a non-reentrant model
  8330 ;;
  8331                           
  8332                           	psect	text33
  8333  0039B2                     __ptext33:
  8334                           	callstack 0
  8335  0039B2                     _LDC_Cadena:
  8336                           	callstack 27
  8337  0039B2                     
  8338                           ;LCD_Libreria.c: 97:     while(*dato != '\0'){
  8339  0039B2  EFE8  F01C         	goto	l3984
  8340  0039B6                     l3978:
  8341                           
  8342                           ;LCD_Libreria.c: 98:         _delay((unsigned long)((100)*(20000000UL/4000000.0)));
  8343  0039B6  0EA6               	movlw	166
  8344  0039B8                     u5217:
  8345  0039B8  2EE8               	decfsz	wreg,f,c
  8346  0039BA  D7FE               	bra	u5217
  8347  0039BC  D000               	nop2	
  8348  0039BE                     
  8349                           ;LCD_Libreria.c: 99:         LCD_Data(*dato);
  8350  0039BE  C007  FFD9         	movff	LDC_Cadena@dato,fsr2l
  8351  0039C2  C008  FFDA         	movff	LDC_Cadena@dato+1,fsr2h
  8352  0039C6  50DF               	movf	indf2,w,c
  8353  0039C8  ECB3  F01A         	call	_LCD_Data
  8354  0039CC                     
  8355                           ;LCD_Libreria.c: 100:         dato++;
  8356  0039CC  4A07               	infsnz	LDC_Cadena@dato^0,f,c
  8357  0039CE  2A08               	incf	(LDC_Cadena@dato+1)^0,f,c
  8358  0039D0                     l3984:
  8359                           
  8360                           ;LCD_Libreria.c: 97:     while(*dato != '\0'){
  8361  0039D0  C007  FFD9         	movff	LDC_Cadena@dato,fsr2l
  8362  0039D4  C008  FFDA         	movff	LDC_Cadena@dato+1,fsr2h
  8363  0039D8  50DF               	movf	indf2,w,c
  8364  0039DA  A4D8               	btfss	status,2,c
  8365  0039DC  EFF2  F01C         	goto	u4791
  8366  0039E0  EFF4  F01C         	goto	u4790
  8367  0039E4                     u4791:
  8368  0039E4  EFDB  F01C         	goto	l3978
  8369  0039E8                     u4790:
  8370  0039E8  0012               	return		;funcret
  8371  0039EA                     __end_of_LDC_Cadena:
  8372                           	callstack 0
  8373                           
  8374 ;; *************** function _LCD_Data *****************
  8375 ;; Defined at:
  8376 ;;		line 64 in file "LCD_Libreria.c"
  8377 ;; Parameters:    Size  Location     Type
  8378 ;;  data            1    wreg     unsigned char 
  8379 ;; Auto vars:     Size  Location     Type
  8380 ;;  data            1    5[COMRAM] unsigned char 
  8381 ;; Return value:  Size  Location     Type
  8382 ;;                  1    wreg      void 
  8383 ;; Registers used:
  8384 ;;		wreg, status,2, status,0
  8385 ;; Tracked objects:
  8386 ;;		On entry : 0/0
  8387 ;;		On exit  : 0/0
  8388 ;;		Unchanged: 0/0
  8389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8390 ;;      Params:         0       0       0       0       0       0       0       0       0
  8391 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8392 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8393 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8394 ;;Total ram usage:        2 bytes
  8395 ;; Hardware stack levels used:    1
  8396 ;; Hardware stack levels required when called:    2
  8397 ;; This function calls:
  8398 ;;		Nothing
  8399 ;; This function is called by:
  8400 ;;		_LDC_Cadena
  8401 ;; This function uses a non-reentrant model
  8402 ;;
  8403                           
  8404                           	psect	text34
  8405  003566                     __ptext34:
  8406                           	callstack 0
  8407  003566                     _LCD_Data:
  8408                           	callstack 27
  8409                           
  8410                           ;incstack = 0
  8411                           ;LCD_Data@data stored from wreg
  8412  003566  6E06               	movwf	LCD_Data@data^0,c
  8413  003568                     
  8414                           ;LCD_Libreria.c: 68:     LATD = LATD & 0x0f;
  8415  003568  508C               	movf	140,w,c	;volatile
  8416  00356A  0B0F               	andlw	15
  8417  00356C  6E8C               	movwf	140,c	;volatile
  8418                           
  8419                           ;LCD_Libreria.c: 69:     LATD = LATD | (data & 0xf0);
  8420  00356E  5006               	movf	LCD_Data@data^0,w,c
  8421  003570  0BF0               	andlw	240
  8422  003572  108C               	iorwf	140,w,c	;volatile
  8423  003574  6E8C               	movwf	140,c	;volatile
  8424  003576                     
  8425                           ;LCD_Libreria.c: 71:     LATDbits.LATD2 = 1;
  8426  003576  848C               	bsf	140,2,c	;volatile
  8427  003578                     
  8428                           ;LCD_Libreria.c: 72:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
  8429  003578  0E07               	movlw	7
  8430  00357A  6E05               	movwf	??_LCD_Data^0,c
  8431  00357C  0E7D               	movlw	125
  8432  00357E                     u5227:
  8433  00357E  2EE8               	decfsz	wreg,f,c
  8434  003580  D7FE               	bra	u5227
  8435  003582  2E05               	decfsz	??_LCD_Data^0,f,c
  8436  003584  D7FC               	bra	u5227
  8437  003586  F000               	nop	
  8438  003588                     
  8439                           ;LCD_Libreria.c: 73:     LATDbits.LATD3 = 1;
  8440  003588  868C               	bsf	140,3,c	;volatile
  8441  00358A                     
  8442                           ;LCD_Libreria.c: 74:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
  8443  00358A  0E07               	movlw	7
  8444  00358C  6E05               	movwf	??_LCD_Data^0,c
  8445  00358E  0E7D               	movlw	125
  8446  003590                     u5237:
  8447  003590  2EE8               	decfsz	wreg,f,c
  8448  003592  D7FE               	bra	u5237
  8449  003594  2E05               	decfsz	??_LCD_Data^0,f,c
  8450  003596  D7FC               	bra	u5237
  8451  003598  F000               	nop	
  8452  00359A                     
  8453                           ;LCD_Libreria.c: 75:     LATDbits.LATD3 = 0;
  8454  00359A  968C               	bcf	140,3,c	;volatile
  8455                           
  8456                           ;LCD_Libreria.c: 77:     LATD &= 0x0f;
  8457  00359C  0E0F               	movlw	15
  8458  00359E  168C               	andwf	140,f,c	;volatile
  8459                           
  8460                           ;LCD_Libreria.c: 78:     LATD |= ((data<<4) & 0xf0);
  8461  0035A0  3806               	swapf	LCD_Data@data^0,w,c
  8462  0035A2  0BF0               	andlw	240
  8463  0035A4  0BF0               	andlw	240
  8464  0035A6  128C               	iorwf	140,f,c	;volatile
  8465  0035A8                     
  8466                           ;LCD_Libreria.c: 80:     LATDbits.LATD2 = 1;
  8467  0035A8  848C               	bsf	140,2,c	;volatile
  8468  0035AA                     
  8469                           ;LCD_Libreria.c: 81:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
  8470  0035AA  0E07               	movlw	7
  8471  0035AC  6E05               	movwf	??_LCD_Data^0,c
  8472  0035AE  0E7D               	movlw	125
  8473  0035B0                     u5247:
  8474  0035B0  2EE8               	decfsz	wreg,f,c
  8475  0035B2  D7FE               	bra	u5247
  8476  0035B4  2E05               	decfsz	??_LCD_Data^0,f,c
  8477  0035B6  D7FC               	bra	u5247
  8478  0035B8  F000               	nop	
  8479  0035BA                     
  8480                           ;LCD_Libreria.c: 82:     LATDbits.LATD3 = 1;
  8481  0035BA  868C               	bsf	140,3,c	;volatile
  8482  0035BC                     
  8483                           ;LCD_Libreria.c: 83:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
  8484  0035BC  0E07               	movlw	7
  8485  0035BE  6E05               	movwf	??_LCD_Data^0,c
  8486  0035C0  0E7D               	movlw	125
  8487  0035C2                     u5257:
  8488  0035C2  2EE8               	decfsz	wreg,f,c
  8489  0035C4  D7FE               	bra	u5257
  8490  0035C6  2E05               	decfsz	??_LCD_Data^0,f,c
  8491  0035C8  D7FC               	bra	u5257
  8492  0035CA  F000               	nop	
  8493  0035CC                     
  8494                           ;LCD_Libreria.c: 84:     LATDbits.LATD3 = 0;
  8495  0035CC  968C               	bcf	140,3,c	;volatile
  8496  0035CE  0012               	return		;funcret
  8497  0035D0                     __end_of_LCD_Data:
  8498                           	callstack 0
  8499                           
  8500 ;; *************** function _LCD_XY *****************
  8501 ;; Defined at:
  8502 ;;		line 87 in file "LCD_Libreria.c"
  8503 ;; Parameters:    Size  Location     Type
  8504 ;;  x               2    6[COMRAM] int 
  8505 ;;  y               2    8[COMRAM] int 
  8506 ;; Auto vars:     Size  Location     Type
  8507 ;;		None
  8508 ;; Return value:  Size  Location     Type
  8509 ;;                  1    wreg      void 
  8510 ;; Registers used:
  8511 ;;		wreg, status,2, status,0, cstack
  8512 ;; Tracked objects:
  8513 ;;		On entry : 0/0
  8514 ;;		On exit  : 0/0
  8515 ;;		Unchanged: 0/0
  8516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8517 ;;      Params:         4       0       0       0       0       0       0       0       0
  8518 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8519 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8520 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8521 ;;Total ram usage:        4 bytes
  8522 ;; Hardware stack levels used:    1
  8523 ;; Hardware stack levels required when called:    3
  8524 ;; This function calls:
  8525 ;;		_LCD_Comando
  8526 ;; This function is called by:
  8527 ;;		_main
  8528 ;; This function uses a non-reentrant model
  8529 ;;
  8530                           
  8531                           	psect	text35
  8532  003A84                     __ptext35:
  8533                           	callstack 0
  8534  003A84                     _LCD_XY:
  8535                           	callstack 27
  8536  003A84                     
  8537                           ;LCD_Libreria.c: 88:     if(x>0){
  8538  003A84  BE08               	btfsc	(LCD_XY@x+1)^0,7,c
  8539  003A86  EF4D  F01D         	goto	u4781
  8540  003A8A  5008               	movf	(LCD_XY@x+1)^0,w,c
  8541  003A8C  E108               	bnz	u4780
  8542  003A8E  0407               	decf	LCD_XY@x^0,w,c
  8543  003A90  A0D8               	btfss	status,0,c
  8544  003A92  EF4D  F01D         	goto	u4781
  8545  003A96  EF4F  F01D         	goto	u4780
  8546  003A9A                     u4781:
  8547  003A9A  EF55  F01D         	goto	l3974
  8548  003A9E                     u4780:
  8549  003A9E                     
  8550                           ;LCD_Libreria.c: 89:         LCD_Comando(0xC0+y);
  8551  003A9E  5009               	movf	LCD_XY@y^0,w,c
  8552  003AA0  0FC0               	addlw	192
  8553  003AA2  ECE8  F01A         	call	_LCD_Comando
  8554                           
  8555                           ;LCD_Libreria.c: 90:     }
  8556  003AA6  EF59  F01D         	goto	l94
  8557  003AAA                     l3974:
  8558                           
  8559                           ;LCD_Libreria.c: 92:         LCD_Comando(0x80+y);
  8560  003AAA  5009               	movf	LCD_XY@y^0,w,c
  8561  003AAC  0F80               	addlw	128
  8562  003AAE  ECE8  F01A         	call	_LCD_Comando
  8563  003AB2                     l94:
  8564  003AB2  0012               	return		;funcret
  8565  003AB4                     __end_of_LCD_XY:
  8566                           	callstack 0
  8567                           
  8568 ;; *************** function _LCD_Init *****************
  8569 ;; Defined at:
  8570 ;;		line 6 in file "LCD_Libreria.c"
  8571 ;; Parameters:    Size  Location     Type
  8572 ;;		None
  8573 ;; Auto vars:     Size  Location     Type
  8574 ;;		None
  8575 ;; Return value:  Size  Location     Type
  8576 ;;                  1    wreg      void 
  8577 ;; Registers used:
  8578 ;;		wreg, status,2, status,0, cstack
  8579 ;; Tracked objects:
  8580 ;;		On entry : 0/0
  8581 ;;		On exit  : 0/0
  8582 ;;		Unchanged: 0/0
  8583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8584 ;;      Params:         0       0       0       0       0       0       0       0       0
  8585 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8586 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8587 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8588 ;;Total ram usage:        2 bytes
  8589 ;; Hardware stack levels used:    1
  8590 ;; Hardware stack levels required when called:    3
  8591 ;; This function calls:
  8592 ;;		_LCD_Comando
  8593 ;; This function is called by:
  8594 ;;		_main
  8595 ;; This function uses a non-reentrant model
  8596 ;;
  8597                           
  8598                           	psect	text36
  8599  0034F0                     __ptext36:
  8600                           	callstack 0
  8601  0034F0                     _LCD_Init:
  8602                           	callstack 27
  8603  0034F0                     
  8604                           ;LCD_Libreria.c: 7:     TRISD = 0x00;
  8605  0034F0  0E00               	movlw	0
  8606  0034F2  6E95               	movwf	149,c	;volatile
  8607                           
  8608                           ;LCD_Libreria.c: 8:     LATD = 0x00;
  8609  0034F4  0E00               	movlw	0
  8610  0034F6  6E8C               	movwf	140,c	;volatile
  8611  0034F8                     
  8612                           ;LCD_Libreria.c: 11:     LCD_Comando(0x30);
  8613  0034F8  0E30               	movlw	48
  8614  0034FA  ECE8  F01A         	call	_LCD_Comando
  8615  0034FE                     
  8616                           ;LCD_Libreria.c: 12:     _delay((unsigned long)((100)*(20000000UL/4000.0)));
  8617  0034FE  0E03               	movlw	3
  8618  003500  6E08               	movwf	(??_LCD_Init+1)^0,c
  8619  003502  0E8A               	movlw	138
  8620  003504  6E07               	movwf	??_LCD_Init^0,c
  8621  003506  0E56               	movlw	86
  8622  003508                     u5267:
  8623  003508  2EE8               	decfsz	wreg,f,c
  8624  00350A  D7FE               	bra	u5267
  8625  00350C  2E07               	decfsz	??_LCD_Init^0,f,c
  8626  00350E  D7FC               	bra	u5267
  8627  003510  2E08               	decfsz	(??_LCD_Init+1)^0,f,c
  8628  003512  D7FA               	bra	u5267
  8629  003514                     
  8630                           ;LCD_Libreria.c: 13:     LCD_Comando(0x30);
  8631  003514  0E30               	movlw	48
  8632  003516  ECE8  F01A         	call	_LCD_Comando
  8633  00351A                     
  8634                           ;LCD_Libreria.c: 14:     _delay((unsigned long)((100)*(20000000UL/4000.0)));
  8635  00351A  0E03               	movlw	3
  8636  00351C  6E08               	movwf	(??_LCD_Init+1)^0,c
  8637  00351E  0E8A               	movlw	138
  8638  003520  6E07               	movwf	??_LCD_Init^0,c
  8639  003522  0E56               	movlw	86
  8640  003524                     u5277:
  8641  003524  2EE8               	decfsz	wreg,f,c
  8642  003526  D7FE               	bra	u5277
  8643  003528  2E07               	decfsz	??_LCD_Init^0,f,c
  8644  00352A  D7FC               	bra	u5277
  8645  00352C  2E08               	decfsz	(??_LCD_Init+1)^0,f,c
  8646  00352E  D7FA               	bra	u5277
  8647  003530                     
  8648                           ;LCD_Libreria.c: 15:     LCD_Comando(0x32);
  8649  003530  0E32               	movlw	50
  8650  003532  ECE8  F01A         	call	_LCD_Comando
  8651  003536                     
  8652                           ;LCD_Libreria.c: 16:     LCD_Comando(0x28);
  8653  003536  0E28               	movlw	40
  8654  003538  ECE8  F01A         	call	_LCD_Comando
  8655  00353C                     
  8656                           ;LCD_Libreria.c: 17:     LCD_Comando(0x0C);
  8657  00353C  0E0C               	movlw	12
  8658  00353E  ECE8  F01A         	call	_LCD_Comando
  8659  003542                     
  8660                           ;LCD_Libreria.c: 18:     LCD_Comando(0x01);
  8661  003542  0E01               	movlw	1
  8662  003544  ECE8  F01A         	call	_LCD_Comando
  8663  003548                     
  8664                           ;LCD_Libreria.c: 19:     LCD_Comando(0x06);
  8665  003548  0E06               	movlw	6
  8666  00354A  ECE8  F01A         	call	_LCD_Comando
  8667  00354E                     
  8668                           ;LCD_Libreria.c: 20:     _delay((unsigned long)((100)*(20000000UL/4000.0)));
  8669  00354E  0E03               	movlw	3
  8670  003550  6E08               	movwf	(??_LCD_Init+1)^0,c
  8671  003552  0E8A               	movlw	138
  8672  003554  6E07               	movwf	??_LCD_Init^0,c
  8673  003556  0E56               	movlw	86
  8674  003558                     u5287:
  8675  003558  2EE8               	decfsz	wreg,f,c
  8676  00355A  D7FE               	bra	u5287
  8677  00355C  2E07               	decfsz	??_LCD_Init^0,f,c
  8678  00355E  D7FC               	bra	u5287
  8679  003560  2E08               	decfsz	(??_LCD_Init+1)^0,f,c
  8680  003562  D7FA               	bra	u5287
  8681  003564  0012               	return		;funcret
  8682  003566                     __end_of_LCD_Init:
  8683                           	callstack 0
  8684                           
  8685 ;; *************** function _LCD_Comando *****************
  8686 ;; Defined at:
  8687 ;;		line 23 in file "LCD_Libreria.c"
  8688 ;; Parameters:    Size  Location     Type
  8689 ;;  cmd             1    wreg     unsigned char 
  8690 ;; Auto vars:     Size  Location     Type
  8691 ;;  cmd             1    5[COMRAM] unsigned char 
  8692 ;; Return value:  Size  Location     Type
  8693 ;;                  1    wreg      void 
  8694 ;; Registers used:
  8695 ;;		wreg, status,2, status,0
  8696 ;; Tracked objects:
  8697 ;;		On entry : 0/0
  8698 ;;		On exit  : 0/0
  8699 ;;		Unchanged: 0/0
  8700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8701 ;;      Params:         0       0       0       0       0       0       0       0       0
  8702 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8703 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8704 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8705 ;;Total ram usage:        2 bytes
  8706 ;; Hardware stack levels used:    1
  8707 ;; Hardware stack levels required when called:    2
  8708 ;; This function calls:
  8709 ;;		Nothing
  8710 ;; This function is called by:
  8711 ;;		_LCD_Init
  8712 ;;		_LCD_XY
  8713 ;; This function uses a non-reentrant model
  8714 ;;
  8715                           
  8716                           	psect	text37
  8717  0035D0                     __ptext37:
  8718                           	callstack 0
  8719  0035D0                     _LCD_Comando:
  8720                           	callstack 27
  8721                           
  8722                           ;incstack = 0
  8723                           ;LCD_Comando@cmd stored from wreg
  8724  0035D0  6E06               	movwf	LCD_Comando@cmd^0,c
  8725  0035D2                     
  8726                           ;LCD_Libreria.c: 27:     LATD = LATD & 0x0f;
  8727  0035D2  508C               	movf	140,w,c	;volatile
  8728  0035D4  0B0F               	andlw	15
  8729  0035D6  6E8C               	movwf	140,c	;volatile
  8730                           
  8731                           ;LCD_Libreria.c: 33:     LATD = LATD | (cmd & 0xf0);
  8732  0035D8  5006               	movf	LCD_Comando@cmd^0,w,c
  8733  0035DA  0BF0               	andlw	240
  8734  0035DC  108C               	iorwf	140,w,c	;volatile
  8735  0035DE  6E8C               	movwf	140,c	;volatile
  8736  0035E0                     
  8737                           ;LCD_Libreria.c: 42:     LATDbits.LATD2 = 0;
  8738  0035E0  948C               	bcf	140,2,c	;volatile
  8739  0035E2                     
  8740                           ;LCD_Libreria.c: 43:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
  8741  0035E2  0E07               	movlw	7
  8742  0035E4  6E05               	movwf	??_LCD_Comando^0,c
  8743  0035E6  0E7D               	movlw	125
  8744  0035E8                     u5297:
  8745  0035E8  2EE8               	decfsz	wreg,f,c
  8746  0035EA  D7FE               	bra	u5297
  8747  0035EC  2E05               	decfsz	??_LCD_Comando^0,f,c
  8748  0035EE  D7FC               	bra	u5297
  8749  0035F0  F000               	nop	
  8750  0035F2                     
  8751                           ;LCD_Libreria.c: 44:     LATDbits.LATD3 = 1;
  8752  0035F2  868C               	bsf	140,3,c	;volatile
  8753  0035F4                     
  8754                           ;LCD_Libreria.c: 45:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
  8755  0035F4  0E07               	movlw	7
  8756  0035F6  6E05               	movwf	??_LCD_Comando^0,c
  8757  0035F8  0E7D               	movlw	125
  8758  0035FA                     u5307:
  8759  0035FA  2EE8               	decfsz	wreg,f,c
  8760  0035FC  D7FE               	bra	u5307
  8761  0035FE  2E05               	decfsz	??_LCD_Comando^0,f,c
  8762  003600  D7FC               	bra	u5307
  8763  003602  F000               	nop	
  8764  003604                     
  8765                           ;LCD_Libreria.c: 46:     LATDbits.LATD3 = 0;
  8766  003604  968C               	bcf	140,3,c	;volatile
  8767                           
  8768                           ;LCD_Libreria.c: 48:     LATD &= 0x0f;
  8769  003606  0E0F               	movlw	15
  8770  003608  168C               	andwf	140,f,c	;volatile
  8771                           
  8772                           ;LCD_Libreria.c: 49:     LATD |= ((cmd<<4) & 0xf0);
  8773  00360A  3806               	swapf	LCD_Comando@cmd^0,w,c
  8774  00360C  0BF0               	andlw	240
  8775  00360E  0BF0               	andlw	240
  8776  003610  128C               	iorwf	140,f,c	;volatile
  8777  003612                     
  8778                           ;LCD_Libreria.c: 57:     LATDbits.LATD2 = 0;
  8779  003612  948C               	bcf	140,2,c	;volatile
  8780  003614                     
  8781                           ;LCD_Libreria.c: 58:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
  8782  003614  0E07               	movlw	7
  8783  003616  6E05               	movwf	??_LCD_Comando^0,c
  8784  003618  0E7D               	movlw	125
  8785  00361A                     u5317:
  8786  00361A  2EE8               	decfsz	wreg,f,c
  8787  00361C  D7FE               	bra	u5317
  8788  00361E  2E05               	decfsz	??_LCD_Comando^0,f,c
  8789  003620  D7FC               	bra	u5317
  8790  003622  F000               	nop	
  8791  003624                     
  8792                           ;LCD_Libreria.c: 59:     LATDbits.LATD3 = 1;
  8793  003624  868C               	bsf	140,3,c	;volatile
  8794  003626                     
  8795                           ;LCD_Libreria.c: 60:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
  8796  003626  0E07               	movlw	7
  8797  003628  6E05               	movwf	??_LCD_Comando^0,c
  8798  00362A  0E7D               	movlw	125
  8799  00362C                     u5327:
  8800  00362C  2EE8               	decfsz	wreg,f,c
  8801  00362E  D7FE               	bra	u5327
  8802  003630  2E05               	decfsz	??_LCD_Comando^0,f,c
  8803  003632  D7FC               	bra	u5327
  8804  003634  F000               	nop	
  8805  003636                     
  8806                           ;LCD_Libreria.c: 61:     LATDbits.LATD3 = 0;
  8807  003636  968C               	bcf	140,3,c	;volatile
  8808  003638  0012               	return		;funcret
  8809  00363A                     __end_of_LCD_Comando:
  8810                           	callstack 0
  8811                           
  8812 ;; *************** function _Int_Ext *****************
  8813 ;; Defined at:
  8814 ;;		line 7 in file "Interrupt.c"
  8815 ;; Parameters:    Size  Location     Type
  8816 ;;		None
  8817 ;; Auto vars:     Size  Location     Type
  8818 ;;		None
  8819 ;; Return value:  Size  Location     Type
  8820 ;;                  1    wreg      void 
  8821 ;; Registers used:
  8822 ;;		None
  8823 ;; Tracked objects:
  8824 ;;		On entry : 0/0
  8825 ;;		On exit  : 0/0
  8826 ;;		Unchanged: 0/0
  8827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8828 ;;      Params:         0       0       0       0       0       0       0       0       0
  8829 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8830 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8831 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8832 ;;Total ram usage:        0 bytes
  8833 ;; Hardware stack levels used:    1
  8834 ;; Hardware stack levels required when called:    2
  8835 ;; This function calls:
  8836 ;;		Nothing
  8837 ;; This function is called by:
  8838 ;;		_main
  8839 ;; This function uses a non-reentrant model
  8840 ;;
  8841                           
  8842                           	psect	text38
  8843  003AFA                     __ptext38:
  8844                           	callstack 0
  8845  003AFA                     _Int_Ext:
  8846                           	callstack 28
  8847  003AFA                     
  8848                           ;Interrupt.c: 8:     TRISBbits.RB0 = 1;
  8849  003AFA  8093               	bsf	147,0,c	;volatile
  8850                           
  8851                           ;Interrupt.c: 9:     TRISBbits.RB1 = 1;
  8852  003AFC  8293               	bsf	147,1,c	;volatile
  8853                           
  8854                           ;Interrupt.c: 11:     INTCONbits.INT0E = 1;
  8855  003AFE  88F2               	bsf	242,4,c	;volatile
  8856                           
  8857                           ;Interrupt.c: 12:     INTCONbits.INT0F = 0;
  8858  003B00  92F2               	bcf	242,1,c	;volatile
  8859                           
  8860                           ;Interrupt.c: 13:     INTCON3bits.INT1E = 1;
  8861  003B02  86F0               	bsf	240,3,c	;volatile
  8862                           
  8863                           ;Interrupt.c: 15:     INTCON3bits.INT1F = 0;
  8864  003B04  90F0               	bcf	240,0,c	;volatile
  8865                           
  8866                           ;Interrupt.c: 17:     INTCON3bits.INT1IP = 0;
  8867  003B06  9CF0               	bcf	240,6,c	;volatile
  8868                           
  8869                           ;Interrupt.c: 19:     INTCON2bits.INTEDG0 = 0;
  8870  003B08  9CF1               	bcf	241,6,c	;volatile
  8871                           
  8872                           ;Interrupt.c: 20:     INTCON2bits.INTEDG1 = 0;
  8873  003B0A  9AF1               	bcf	241,5,c	;volatile
  8874                           
  8875                           ;Interrupt.c: 22:     RCONbits.IPEN = 1;
  8876  003B0C  8ED0               	bsf	208,7,c	;volatile
  8877                           
  8878                           ;Interrupt.c: 23:     INTCONbits.GIEH = 1;
  8879  003B0E  8EF2               	bsf	242,7,c	;volatile
  8880                           
  8881                           ;Interrupt.c: 24:     INTCONbits.GIEL = 1;
  8882  003B10  8CF2               	bsf	242,6,c	;volatile
  8883  003B12  0012               	return		;funcret
  8884  003B14                     __end_of_Int_Ext:
  8885                           	callstack 0
  8886                           
  8887 ;; *************** function _ADC_Read *****************
  8888 ;; Defined at:
  8889 ;;		line 16 in file "ADC_Libreria.c"
  8890 ;; Parameters:    Size  Location     Type
  8891 ;;  ch              1    wreg     unsigned char 
  8892 ;; Auto vars:     Size  Location     Type
  8893 ;;  ch              1    7[COMRAM] unsigned char 
  8894 ;; Return value:  Size  Location     Type
  8895 ;;                  2    4[COMRAM] unsigned int 
  8896 ;; Registers used:
  8897 ;;		wreg, status,2, status,0
  8898 ;; Tracked objects:
  8899 ;;		On entry : 0/0
  8900 ;;		On exit  : 0/0
  8901 ;;		Unchanged: 0/0
  8902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8903 ;;      Params:         2       0       0       0       0       0       0       0       0
  8904 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8905 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8906 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8907 ;;Total ram usage:        4 bytes
  8908 ;; Hardware stack levels used:    1
  8909 ;; Hardware stack levels required when called:    2
  8910 ;; This function calls:
  8911 ;;		Nothing
  8912 ;; This function is called by:
  8913 ;;		_main
  8914 ;; This function uses a non-reentrant model
  8915 ;;
  8916                           
  8917                           	psect	text39
  8918  003842                     __ptext39:
  8919                           	callstack 0
  8920  003842                     _ADC_Read:
  8921                           	callstack 28
  8922                           
  8923                           ;incstack = 0
  8924                           ;ADC_Read@ch stored from wreg
  8925  003842  6E08               	movwf	ADC_Read@ch^0,c
  8926  003844                     
  8927                           ;ADC_Libreria.c: 17:     if(ch > 13){
  8928  003844  0E0D               	movlw	13
  8929  003846  6408               	cpfsgt	ADC_Read@ch^0,c
  8930  003848  EF28  F01C         	goto	u4761
  8931  00384C  EF2A  F01C         	goto	u4760
  8932  003850                     u4761:
  8933  003850  EF2C  F01C         	goto	l3952
  8934  003854                     u4760:
  8935  003854                     
  8936                           ;ADC_Libreria.c: 18:         ch = 0;
  8937  003854  0E00               	movlw	0
  8938  003856  6E08               	movwf	ADC_Read@ch^0,c
  8939  003858                     l3952:
  8940                           
  8941                           ;ADC_Libreria.c: 20:     ADCON0bits.CHS = ch;
  8942  003858  C008  F007         	movff	ADC_Read@ch,??_ADC_Read
  8943  00385C  4607               	rlncf	??_ADC_Read^0,f,c
  8944  00385E  4607               	rlncf	??_ADC_Read^0,f,c
  8945  003860  50C2               	movf	194,w,c	;volatile
  8946  003862  1807               	xorwf	??_ADC_Read^0,w,c
  8947  003864  0BC3               	andlw	-61
  8948  003866  1807               	xorwf	??_ADC_Read^0,w,c
  8949  003868  6EC2               	movwf	194,c	;volatile
  8950  00386A                     
  8951                           ;ADC_Libreria.c: 21:     ADCON0bits.ADON = 1;
  8952  00386A  80C2               	bsf	194,0,c	;volatile
  8953  00386C                     
  8954                           ;ADC_Libreria.c: 22:     ADCON0bits.GO = 1;
  8955  00386C  82C2               	bsf	194,1,c	;volatile
  8956  00386E                     l67:
  8957  00386E  B2C2               	btfsc	194,1,c	;volatile
  8958  003870  EF3C  F01C         	goto	u4771
  8959  003874  EF3E  F01C         	goto	u4770
  8960  003878                     u4771:
  8961  003878  EF37  F01C         	goto	l67
  8962  00387C                     u4770:
  8963  00387C                     
  8964                           ;ADC_Libreria.c: 24:     ADCON0bits.ADON = 0;
  8965  00387C  90C2               	bcf	194,0,c	;volatile
  8966                           
  8967                           ;ADC_Libreria.c: 25:     return ADRES;
  8968  00387E  CFC3 F005          	movff	4035,?_ADC_Read	;volatile
  8969  003882  CFC4 F006          	movff	4036,?_ADC_Read+1	;volatile
  8970  003886  0012               	return		;funcret
  8971  003888                     __end_of_ADC_Read:
  8972                           	callstack 0
  8973                           
  8974 ;; *************** function _ADC_Init *****************
  8975 ;; Defined at:
  8976 ;;		line 6 in file "ADC_Libreria.c"
  8977 ;; Parameters:    Size  Location     Type
  8978 ;;		None
  8979 ;; Auto vars:     Size  Location     Type
  8980 ;;		None
  8981 ;; Return value:  Size  Location     Type
  8982 ;;                  1    wreg      void 
  8983 ;; Registers used:
  8984 ;;		wreg, status,2
  8985 ;; Tracked objects:
  8986 ;;		On entry : 0/0
  8987 ;;		On exit  : 0/0
  8988 ;;		Unchanged: 0/0
  8989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8990 ;;      Params:         0       0       0       0       0       0       0       0       0
  8991 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8992 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8993 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8994 ;;Total ram usage:        0 bytes
  8995 ;; Hardware stack levels used:    1
  8996 ;; Hardware stack levels required when called:    2
  8997 ;; This function calls:
  8998 ;;		Nothing
  8999 ;; This function is called by:
  9000 ;;		_main
  9001 ;; This function uses a non-reentrant model
  9002 ;;
  9003                           
  9004                           	psect	text40
  9005  003ADA                     __ptext40:
  9006                           	callstack 0
  9007  003ADA                     _ADC_Init:
  9008                           	callstack 28
  9009  003ADA                     
  9010                           ;ADC_Libreria.c: 7:     ADCON1bits.PCFG = 0b0111;
  9011  003ADA  50C1               	movf	193,w,c	;volatile
  9012  003ADC  0BF0               	andlw	-16
  9013  003ADE  0907               	iorlw	7
  9014  003AE0  6EC1               	movwf	193,c	;volatile
  9015                           
  9016                           ;ADC_Libreria.c: 8:     ADCON1bits.VCFG = 0b00;
  9017  003AE2  0ECF               	movlw	-49
  9018  003AE4  16C1               	andwf	193,f,c	;volatile
  9019                           
  9020                           ;ADC_Libreria.c: 10:     ADCON2bits.ADCS = 0b101;
  9021  003AE6  50C0               	movf	192,w,c	;volatile
  9022  003AE8  0BF8               	andlw	-8
  9023  003AEA  0905               	iorlw	5
  9024  003AEC  6EC0               	movwf	192,c	;volatile
  9025                           
  9026                           ;ADC_Libreria.c: 11:     ADCON2bits.ACQT = 0b010;
  9027  003AEE  50C0               	movf	192,w,c	;volatile
  9028  003AF0  0BC7               	andlw	-57
  9029  003AF2  0910               	iorlw	16
  9030  003AF4  6EC0               	movwf	192,c	;volatile
  9031  003AF6                     
  9032                           ;ADC_Libreria.c: 12:     ADCON2bits.ADFM = 1;
  9033  003AF6  8EC0               	bsf	192,7,c	;volatile
  9034  003AF8  0012               	return		;funcret
  9035  003AFA                     __end_of_ADC_Init:
  9036                           	callstack 0
  9037                           
  9038 ;; *************** function _INT1_Ext *****************
  9039 ;; Defined at:
  9040 ;;		line 35 in file "Interrupt.c"
  9041 ;; Parameters:    Size  Location     Type
  9042 ;;		None
  9043 ;; Auto vars:     Size  Location     Type
  9044 ;;		None
  9045 ;; Return value:  Size  Location     Type
  9046 ;;                  1    wreg      void 
  9047 ;; Registers used:
  9048 ;;		wreg, status,2, status,0
  9049 ;; Tracked objects:
  9050 ;;		On entry : 0/0
  9051 ;;		On exit  : 0/0
  9052 ;;		Unchanged: 0/0
  9053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9054 ;;      Params:         0       0       0       0       0       0       0       0       0
  9055 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9056 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9057 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9058 ;;Total ram usage:        4 bytes
  9059 ;; Hardware stack levels used:    1
  9060 ;; Hardware stack levels required when called:    1
  9061 ;; This function calls:
  9062 ;;		Nothing
  9063 ;; This function is called by:
  9064 ;;		Interrupt level 1
  9065 ;; This function uses a non-reentrant model
  9066 ;;
  9067                           
  9068                           	psect	intcodelo
  9069  000018                     __pintcodelo:
  9070                           	callstack 0
  9071  000018                     _INT1_Ext:
  9072                           	callstack 21
  9073                           
  9074                           ;incstack = 0
  9075  000018  805A               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  9076  00001A  CFD8 F002          	movff	status,??_INT1_Ext+1
  9077  00001E  CFE8 F003          	movff	wreg,??_INT1_Ext+2
  9078  000022  CFE0 F004          	movff	bsr,??_INT1_Ext+3
  9079  000026                     
  9080                           ;Interrupt.c: 36:     LATDbits.LATD0 = ~LATDbits.LATD0;
  9081  000026  B08C               	btfsc	140,0,c	;volatile
  9082  000028  EF18  F000         	goto	i1u495_21
  9083  00002C  EF1B  F000         	goto	i1u495_20
  9084  000030                     i1u495_21:
  9085  000030  0E01               	movlw	1
  9086  000032  EF1C  F000         	goto	i1u495_26
  9087  000036                     i1u495_20:
  9088  000036  0E00               	movlw	0
  9089  000038                     i1u495_26:
  9090  000038  0AFF               	xorlw	255
  9091  00003A  6E01               	movwf	??_INT1_Ext^0,c
  9092  00003C  508C               	movf	140,w,c	;volatile
  9093  00003E  1801               	xorwf	??_INT1_Ext^0,w,c
  9094  000040  0BFE               	andlw	-2
  9095  000042  1801               	xorwf	??_INT1_Ext^0,w,c
  9096  000044  6E8C               	movwf	140,c	;volatile
  9097  000046                     
  9098                           ;Interrupt.c: 37:     i--;
  9099  000046  0100               	movlb	0	; () banked
  9100  000048  07CA               	decf	_i& (0+255),f,b
  9101  00004A  A0D8               	btfss	status,0,c
  9102  00004C  07CB               	decf	(_i+1)& (0+255),f,b
  9103  00004E                     
  9104                           ; BSR set to: 0
  9105                           ;Interrupt.c: 38:     if(i <= 0){
  9106  00004E  BFCB               	btfsc	(_i+1)& (0+255),7,b
  9107  000050  EF34  F000         	goto	i1u496_20
  9108  000054  51CB               	movf	(_i+1)& (0+255),w,b
  9109  000056  E106               	bnz	i1u496_21
  9110  000058  05CA               	decf	_i& (0+255),w,b
  9111  00005A  B0D8               	btfsc	status,0,c
  9112  00005C  EF32  F000         	goto	i1u496_21
  9113  000060  EF34  F000         	goto	i1u496_20
  9114  000064                     i1u496_21:
  9115  000064  EF38  F000         	goto	i1l4120
  9116  000068                     i1u496_20:
  9117  000068                     
  9118                           ; BSR set to: 0
  9119                           ;Interrupt.c: 39:         i = 3;
  9120  000068  0E00               	movlw	0
  9121  00006A  6FCB               	movwf	(_i+1)& (0+255),b
  9122  00006C  0E03               	movlw	3
  9123  00006E  6FCA               	movwf	_i& (0+255),b
  9124  000070                     i1l4120:
  9125                           
  9126                           ; BSR set to: 0
  9127                           ;Interrupt.c: 41:     INTCON3bits.INT1F = 0;
  9128  000070  90F0               	bcf	240,0,c	;volatile
  9129  000072                     
  9130                           ; BSR set to: 0
  9131  000072  C004  FFE0         	movff	??_INT1_Ext+3,bsr
  9132  000076  C003  FFE8         	movff	??_INT1_Ext+2,wreg
  9133  00007A  C002  FFD8         	movff	??_INT1_Ext+1,status
  9134  00007E  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  9135  000080  0010               	retfie	
  9136  000082                     __end_of_INT1_Ext:
  9137                           	callstack 0
  9138                           
  9139 ;; *************** function _INT0_Ext *****************
  9140 ;; Defined at:
  9141 ;;		line 27 in file "Interrupt.c"
  9142 ;; Parameters:    Size  Location     Type
  9143 ;;		None
  9144 ;; Auto vars:     Size  Location     Type
  9145 ;;		None
  9146 ;; Return value:  Size  Location     Type
  9147 ;;                  1    wreg      void 
  9148 ;; Registers used:
  9149 ;;		wreg, status,2, status,0
  9150 ;; Tracked objects:
  9151 ;;		On entry : 0/0
  9152 ;;		On exit  : 0/0
  9153 ;;		Unchanged: 0/0
  9154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9155 ;;      Params:         0       0       0       0       0       0       0       0       0
  9156 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9157 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9158 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9159 ;;Total ram usage:        0 bytes
  9160 ;; Hardware stack levels used:    1
  9161 ;; This function calls:
  9162 ;;		Nothing
  9163 ;; This function is called by:
  9164 ;;		Interrupt level 2
  9165 ;; This function uses a non-reentrant model
  9166 ;;
  9167                           
  9168                           	psect	intcode
  9169  000008                     __pintcode:
  9170                           	callstack 0
  9171  000008                     _INT0_Ext:
  9172                           	callstack 21
  9173                           
  9174                           ; BSR set to: 0
  9175                           ;incstack = 0
  9176  000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9177  00000A  ED29  F01D         	call	int_func,f	;refresh shadow registers
  9178                           
  9179                           	psect	intcode_body
  9180  003A52                     __pintcode_body:
  9181                           	callstack 21
  9182  003A52                     int_func:
  9183                           	callstack 21
  9184  003A52  0006               	pop		; remove dummy address from shadow register refresh
  9185  003A54                     
  9186                           ;Interrupt.c: 28:     i++;
  9187  003A54  0100               	movlb	0	; () banked
  9188  003A56  4BCA               	infsnz	_i& (0+255),f,b
  9189  003A58  2BCB               	incf	(_i+1)& (0+255),f,b
  9190  003A5A                     
  9191                           ; BSR set to: 0
  9192                           ;Interrupt.c: 29:     if(i > 3){
  9193  003A5A  BFCB               	btfsc	(_i+1)& (0+255),7,b
  9194  003A5C  EF39  F01D         	goto	i2u494_41
  9195  003A60  51CB               	movf	(_i+1)& (0+255),w,b
  9196  003A62  E109               	bnz	i2u494_40
  9197  003A64  0E04               	movlw	4
  9198  003A66  5DCA               	subwf	_i& (0+255),w,b
  9199  003A68  A0D8               	btfss	status,0,c
  9200  003A6A  EF39  F01D         	goto	i2u494_41
  9201  003A6E  EF3B  F01D         	goto	i2u494_40
  9202  003A72                     i2u494_41:
  9203  003A72  EF3F  F01D         	goto	i2l4110
  9204  003A76                     i2u494_40:
  9205  003A76                     
  9206                           ; BSR set to: 0
  9207                           ;Interrupt.c: 30:         i = 0;
  9208  003A76  0E00               	movlw	0
  9209  003A78  6FCB               	movwf	(_i+1)& (0+255),b
  9210  003A7A  0E00               	movlw	0
  9211  003A7C  6FCA               	movwf	_i& (0+255),b
  9212  003A7E                     i2l4110:
  9213                           
  9214                           ; BSR set to: 0
  9215                           ;Interrupt.c: 32:     INTCONbits.INT0F = 0;
  9216  003A7E  92F2               	bcf	242,1,c	;volatile
  9217  003A80                     
  9218                           ; BSR set to: 0
  9219  003A80  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9220  003A82  0011               	retfie		f
  9221  003A84                     __end_of_INT0_Ext:
  9222                           	callstack 0
  9223                           
  9224                           	psect	rparam
  9225  0000                     
  9226                           	psect	temp
  9227  00005A                     btemp:
  9228                           	callstack 0
  9229  00005A                     	ds	1
  9230  0000                     int$flags	set	btemp
  9231  0000                     wtemp8	set	btemp+1
  9232  0000                     ttemp5	set	btemp+1
  9233  0000                     ttemp6	set	btemp+4
  9234  0000                     ttemp7	set	btemp+8
  9235                           
  9236                           	psect	idloc
  9237                           
  9238                           ;Config register IDLOC0 @ 0x200000
  9239                           ;	unspecified, using default values
  9240  200000                     	org	2097152
  9241  200000  FF                 	db	255
  9242                           
  9243                           ;Config register IDLOC1 @ 0x200001
  9244                           ;	unspecified, using default values
  9245  200001                     	org	2097153
  9246  200001  FF                 	db	255
  9247                           
  9248                           ;Config register IDLOC2 @ 0x200002
  9249                           ;	unspecified, using default values
  9250  200002                     	org	2097154
  9251  200002  FF                 	db	255
  9252                           
  9253                           ;Config register IDLOC3 @ 0x200003
  9254                           ;	unspecified, using default values
  9255  200003                     	org	2097155
  9256  200003  FF                 	db	255
  9257                           
  9258                           ;Config register IDLOC4 @ 0x200004
  9259                           ;	unspecified, using default values
  9260  200004                     	org	2097156
  9261  200004  FF                 	db	255
  9262                           
  9263                           ;Config register IDLOC5 @ 0x200005
  9264                           ;	unspecified, using default values
  9265  200005                     	org	2097157
  9266  200005  FF                 	db	255
  9267                           
  9268                           ;Config register IDLOC6 @ 0x200006
  9269                           ;	unspecified, using default values
  9270  200006                     	org	2097158
  9271  200006  FF                 	db	255
  9272                           
  9273                           ;Config register IDLOC7 @ 0x200007
  9274                           ;	unspecified, using default values
  9275  200007                     	org	2097159
  9276  200007  FF                 	db	255
  9277                           
  9278                           	psect	config
  9279                           
  9280                           ;Config register CONFIG1L @ 0x300000
  9281                           ;	PLL Prescaler Selection bits
  9282                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  9283                           ;	System Clock Postscaler Selection bits
  9284                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  9285                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  9286                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  9287  300000                     	org	3145728
  9288  300000  00                 	db	0
  9289                           
  9290                           ;Config register CONFIG1H @ 0x300001
  9291                           ;	Oscillator Selection bits
  9292                           ;	FOSC = HS, HS oscillator (HS)
  9293                           ;	Fail-Safe Clock Monitor Enable bit
  9294                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  9295                           ;	Internal/External Oscillator Switchover bit
  9296                           ;	IESO = OFF, Oscillator Switchover mode disabled
  9297  300001                     	org	3145729
  9298  300001  0C                 	db	12
  9299                           
  9300                           ;Config register CONFIG2L @ 0x300002
  9301                           ;	Power-up Timer Enable bit
  9302                           ;	PWRT = ON, PWRT enabled
  9303                           ;	Brown-out Reset Enable bits
  9304                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  9305                           ;	Brown-out Reset Voltage bits
  9306                           ;	BORV = 3, Minimum setting 2.05V
  9307                           ;	USB Voltage Regulator Enable bit
  9308                           ;	VREGEN = OFF, USB voltage regulator disabled
  9309  300002                     	org	3145730
  9310  300002  18                 	db	24
  9311                           
  9312                           ;Config register CONFIG2H @ 0x300003
  9313                           ;	Watchdog Timer Enable bit
  9314                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  9315                           ;	Watchdog Timer Postscale Select bits
  9316                           ;	WDTPS = 32768, 1:32768
  9317  300003                     	org	3145731
  9318  300003  1E                 	db	30
  9319                           
  9320                           ; Padding undefined space
  9321  300004                     	org	3145732
  9322  300004  FF                 	db	255
  9323                           
  9324                           ;Config register CONFIG3H @ 0x300005
  9325                           ;	CCP2 MUX bit
  9326                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  9327                           ;	PORTB A/D Enable bit
  9328                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  9329                           ;	Low-Power Timer 1 Oscillator Enable bit
  9330                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  9331                           ;	MCLR Pin Enable bit
  9332                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  9333  300005                     	org	3145733
  9334  300005  81                 	db	129
  9335                           
  9336                           ;Config register CONFIG4L @ 0x300006
  9337                           ;	Stack Full/Underflow Reset Enable bit
  9338                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  9339                           ;	Single-Supply ICSP Enable bit
  9340                           ;	LVP = OFF, Single-Supply ICSP disabled
  9341                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  9342                           ;	ICPRT = OFF, ICPORT disabled
  9343                           ;	Extended Instruction Set Enable bit
  9344                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  9345                           ;	Background Debugger Enable bit
  9346                           ;	DEBUG = 0x1, unprogrammed default
  9347  300006                     	org	3145734
  9348  300006  80                 	db	128
  9349                           
  9350                           ; Padding undefined space
  9351  300007                     	org	3145735
  9352  300007  FF                 	db	255
  9353                           
  9354                           ;Config register CONFIG5L @ 0x300008
  9355                           ;	Code Protection bit
  9356                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  9357                           ;	Code Protection bit
  9358                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  9359                           ;	Code Protection bit
  9360                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  9361                           ;	Code Protection bit
  9362                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  9363  300008                     	org	3145736
  9364  300008  0F                 	db	15
  9365                           
  9366                           ;Config register CONFIG5H @ 0x300009
  9367                           ;	Boot Block Code Protection bit
  9368                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  9369                           ;	Data EEPROM Code Protection bit
  9370                           ;	CPD = OFF, Data EEPROM is not code-protected
  9371  300009                     	org	3145737
  9372  300009  C0                 	db	192
  9373                           
  9374                           ;Config register CONFIG6L @ 0x30000A
  9375                           ;	Write Protection bit
  9376                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  9377                           ;	Write Protection bit
  9378                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  9379                           ;	Write Protection bit
  9380                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  9381                           ;	Write Protection bit
  9382                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  9383  30000A                     	org	3145738
  9384  30000A  0F                 	db	15
  9385                           
  9386                           ;Config register CONFIG6H @ 0x30000B
  9387                           ;	Configuration Register Write Protection bit
  9388                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  9389                           ;	Boot Block Write Protection bit
  9390                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  9391                           ;	Data EEPROM Write Protection bit
  9392                           ;	WRTD = OFF, Data EEPROM is not write-protected
  9393  30000B                     	org	3145739
  9394  30000B  E0                 	db	224
  9395                           
  9396                           ;Config register CONFIG7L @ 0x30000C
  9397                           ;	Table Read Protection bit
  9398                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9399                           ;	Table Read Protection bit
  9400                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9401                           ;	Table Read Protection bit
  9402                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9403                           ;	Table Read Protection bit
  9404                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9405  30000C                     	org	3145740
  9406  30000C  0F                 	db	15
  9407                           
  9408                           ;Config register CONFIG7H @ 0x30000D
  9409                           ;	Boot Block Table Read Protection bit
  9410                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  9411  30000D                     	org	3145741
  9412  30000D  40                 	db	64
  9413                           tosu	equ	0xFFF
  9414                           tosh	equ	0xFFE
  9415                           tosl	equ	0xFFD
  9416                           stkptr	equ	0xFFC
  9417                           pclatu	equ	0xFFB
  9418                           pclath	equ	0xFFA
  9419                           pcl	equ	0xFF9
  9420                           tblptru	equ	0xFF8
  9421                           tblptrh	equ	0xFF7
  9422                           tblptrl	equ	0xFF6
  9423                           tablat	equ	0xFF5
  9424                           prodh	equ	0xFF4
  9425                           prodl	equ	0xFF3
  9426                           indf0	equ	0xFEF
  9427                           postinc0	equ	0xFEE
  9428                           postdec0	equ	0xFED
  9429                           preinc0	equ	0xFEC
  9430                           plusw0	equ	0xFEB
  9431                           fsr0h	equ	0xFEA
  9432                           fsr0l	equ	0xFE9
  9433                           wreg	equ	0xFE8
  9434                           indf1	equ	0xFE7
  9435                           postinc1	equ	0xFE6
  9436                           postdec1	equ	0xFE5
  9437                           preinc1	equ	0xFE4
  9438                           plusw1	equ	0xFE3
  9439                           fsr1h	equ	0xFE2
  9440                           fsr1l	equ	0xFE1
  9441                           bsr	equ	0xFE0
  9442                           indf2	equ	0xFDF
  9443                           postinc2	equ	0xFDE
  9444                           postdec2	equ	0xFDD
  9445                           preinc2	equ	0xFDC
  9446                           plusw2	equ	0xFDB
  9447                           fsr2h	equ	0xFDA
  9448                           fsr2l	equ	0xFD9
  9449                           status	equ	0xFD8

Data Sizes:
    Strings     39
    Constant    0
    Data        0
    BSS         114
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     79      89
    BANK0           160     94     118
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_15(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_15(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> dato(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_4(CODE[10]), STR_3(CODE[10]), STR_2(CODE[10]), STR_1(CODE[10]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_4(CODE[10]), STR_3(CODE[10]), STR_2(CODE[10]), STR_1(CODE[10]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 10
		 -> STR_4(CODE[10]), STR_3(CODE[10]), STR_2(CODE[10]), STR_1(CODE[10]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_4(CODE[10]), STR_3(CODE[10]), STR_2(CODE[10]), STR_1(CODE[10]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> dato(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1109_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> dato(BANK0[10]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> dato(BANK0[10]), 

    LDC_Cadena@dato	PTR const unsigned char  size(2) Largest target is 10
		 -> dato(BANK0[10]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    _atoi->_isspace
    _LDC_Cadena->_LCD_Data
    _LCD_XY->_LCD_Comando
    _LCD_Init->_LCD_Comando

Critical Paths under _INT1_Ext in COMRAM

    None.

Critical Paths under _INT0_Ext in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _INT1_Ext in BANK0

    None.

Critical Paths under _INT0_Ext in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_Ext in BANK1

    None.

Critical Paths under _INT0_Ext in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_Ext in BANK2

    None.

Critical Paths under _INT0_Ext in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_Ext in BANK3

    None.

Critical Paths under _INT0_Ext in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_Ext in BANK4

    None.

Critical Paths under _INT0_Ext in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_Ext in BANK5

    None.

Critical Paths under _INT0_Ext in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_Ext in BANK6

    None.

Critical Paths under _INT0_Ext in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_Ext in BANK7

    None.

Critical Paths under _INT0_Ext in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   34279
                                             92 BANK0      2     2      0
                           _ADC_Init
                           _ADC_Read
                            _Int_Ext
                           _LCD_Init
                             _LCD_XY
                         _LDC_Cadena
                                _Led
                             _Toggle
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   29493
                                             74 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   28449
                                             77 COMRAM     2     2      0
                                             68 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           48    42      6   27922
                                             67 COMRAM    10     4      6
                                             56 BANK0     12    12      0
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              4 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   22149
                                             55 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2     944
                                             10 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              4 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3165
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             29 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     381
                                              4 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             43 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              4 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              4 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2960
                                             18 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     638
                                             43 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2007
                                              4 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1152
                                             11 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     626
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _Toggle                                               2     2      0       0
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Led                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LDC_Cadena                                           2     0      2     393
                                              6 COMRAM     2     0      2
                           _LCD_Data
 ---------------------------------------------------------------------------------
 (2) _LCD_Data                                             2     2      0      44
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_XY                                               4     0      4     718
                                              6 COMRAM     4     0      4
                        _LCD_Comando
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      44
                                              6 COMRAM     2     2      0
                        _LCD_Comando
 ---------------------------------------------------------------------------------
 (2) _LCD_Comando                                          2     2      0      44
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Int_Ext                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             4     2      2      45
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INT1_Ext                                             4     4      0       0
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INT0_Ext                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   _Int_Ext
   _LCD_Init
     _LCD_Comando
   _LCD_XY
     _LCD_Comando
   _LDC_Cadena
     _LCD_Data
   _Led
   _Toggle
   ___flmul
     ___xxtofl (ARG)
   ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper

 _INT1_Ext (ROOT)

 _INT0_Ext (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5E      76       5       73.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4F      59       1       94.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11F      20        0.0%
DATA                 0      0     11F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sat Dec 26 17:08:08 2020

            ?_LDC_Cadena 0007             ___fldiv@aexp 001D             ___fldiv@bexp 001C  
                      _i 00CA             ___fldiv@sign 0015             ?_LCD_Comando 0001  
                     l52 3908                       l70 3886                       l63 3AF8  
                     l49 3B16                       l67 386E                       l83 3564  
                     l69 387C                       l86 3638                       l94 3AB2  
                     l89 35CE             ___awdiv@sign 000A                       bsr 000FE0  
    ___wmul@multiplicand 0007                      l100 39E8                      l132 3AD8  
                    l117 3B12                      l402 2F70                      l406 3978  
                    l363 32D2                      l429 2E6C                      l702 3840  
                    l391 34EE                      l376 3444                      l801 2B6E  
                    l714 24C6                      l810 37A8                      l716 2326  
                    l660 15CA                      l725 236C                      l397 2F2A  
                    l661 15B8                      l750 212C                      l662 157E  
                    l727 23E4                      l719 22EA                      l728 23D2  
                    l753 1FBE                      l746 1DC8                      l763 20EE  
                    l755 2036                      l851 3318                      l756 2024  
                    l677 16E4                      l669 189A                      l790 2BD6  
                    l686 17B4                      l854 335A                      l918 0FAE  
                    l687 17A2                      l856 3394                      l794 2B12  
                    l874 13DA                      l787 2A7A                      l971 1C4C  
                    l892 0C16                      l964 1D02                      l977 3692  
                    l978 369A                      l988 306E                      _Led 3B14  
                    _pad 32D4                      _vin 00C2             ___awmod@sign 000A  
                    wreg 000FE8             ___flmul@aexp 0024             ___flmul@bexp 0025  
           ___flmul@sign 001F             ___flmul@temp 002A             ___flmul@prod 0026  
                   ?_Led 0001             ___fltol@exp1 000E                     l1020 2D66  
                   l1102 36F2                     l1017 2D5E                     l1026 2A22  
                   l1050 3940                     l1107 36FA                     l1036 39B0  
                   l1044 37FA                     l1029 2966                     l1065 320E  
                   l1073 38CA                     l3010 1D1E                     l1082 3756  
                   l3100 1FEE                     l3020 1D56                     l3012 1D20  
                   l1076 3B18                     l1092 3144                     l3110 2060  
                   l3102 201C                     l3030 1D82                     l3022 1D66  
                   l3014 1D30                     l3006 1D04                     l4000 2AB4  
                   l3200 33DC                     l3120 20D6                     l3112 208A  
                   l3040 1DD8                     l3032 1D92                     l3024 1D6C  
                   l3016 1D40                     l3008 1D10                     l1088 3A1E  
                   l4010 2B08                     l4002 2ABC                     l3210 3418  
                   l3202 33E4                     l3122 20F2                     l3130 2118  
                   l3106 2046                     l3114 208E                     l3050 1E12  
                   l3042 1DE8                     l3034 1DA2                     l3026 1D72  
                   l3018 1D50                     l4020 2B7E                     l4012 2B44  
                   l4004 2AC8                     l3212 341E                     l3204 33EC  
                   l3132 211C                     l3124 2102                     l3116 20A8  
                   l3108 2052                     l3060 1E64                     l3052 1E28  
                   l3036 1DB2                     l3028 1D80                     l3300 2E20  
                   l4030 2BC6                     l4022 2B82                     l4014 2B50  
                   l4006 2AFA                     l3150 322E                     l3142 3210  
                   l3206 33FA                     l3214 3424                     l3230 34C2  
                   l3222 3446                     l3126 2110                     l3118 20BC  
                   l3070 1EAA                     l3062 1E72                     l3054 1E34  
                   l3046 1DFC                     l3038 1DB8                     l3302 2E2C  
                   l4024 2BA6                     l4016 2B5E                     l4008 2AFC  
                   l3160 3262                     l3152 323C                     l3144 3214  
                   l3216 3434                     l3208 3410                     l3232 34E6  
                   l3224 3474                     l3240 2E9C                     l3128 2112  
                   l3080 1F18                     l3072 1EC4                     l3064 1E7E  
                   l3056 1E4C                     l3048 1E08                     l3136 37FC  
                   l3304 2E3C                     l3320 3310                     l3312 32D4  
                   l4200 1BE8                     l4026 2BB6                     l4018 2B7C  
                   l3410 37F4                     l3402 37AA                     l3170 329C  
                   l3162 326A                     l3154 3244                     l3146 3222  
                   l3218 343C                     l3234 34EC                     l3226 3484  
                   l3250 2F0A                     l3242 2EAC                     l3090 1FAE  
                   l3082 1F42                     l3074 1ED4                     l3066 1E8E  
                   l3058 1E58                     l3138 380C                     l3306 2E4C  
                   l3330 337C                     l3322 3324                     l3314 32E2  
                   l4210 1C84                     l4202 1C1C                     l4028 2BC4  
                   l3404 37AE                     l3180 32C2                     l3172 32A4  
                   l3164 3272                     l3156 3248                     l3148 322A  
                   l3228 34B2                     l3252 2F18                     l3244 2EDA  
                   l3092 1FBC                     l3084 1F78                     l3076 1EF0  
                   l3068 1E9A                     l3260 3942                     l2700 14FC  
                   l3308 2E5C                     l3340 2FF8                     l3324 3338  
                   l3316 32F6                     l3500 0BC0                     l3420 0852  
                   l4220 1CC0                     l4212 1C92                     l4300 26E2  
                   l3406 37C2                     l3182 32CA                     l3174 32A6  
                   l3166 3280                     l3158 3250                     l3190 33A8  
                   l3254 2F68                     l3246 2EEA                     l3238 2E6E  
                   l3094 1FCE                     l3086 1F86                     l3078 1EFC  
                   l3262 3958                     l2710 1510                     l2702 1500  
                   l3270 2D7E                     l3342 3004                     l3334 2F72  
                   l2630 3174                     l3326 333C                     l3318 3304  
                   l3510 0C0A                     l3502 0BC4                     l3430 08A2  
                   l3422 085A                     l3414 082A                     l4214 1CA6  
                   l4150 18E2                     l4142 189C                     l4310 2756  
                   l4302 2708                     l3408 37F0                     l3176 32AC  
                   l3168 3286                     l3192 33B0                     l3256 2F6E  
                   l3248 2EF8                     l3096 1FDC                     l3088 1FA4  
                   l3264 3968                     l2800 1776                     l2720 154A  
                   l2712 1514                     l2704 1504                     l2640 13E8  
                   l3280 2DCE                     l3352 3066                     l3336 2F92  
                   l2632 3192                     l2624 3146                     l3328 3368  
                   l3360 369C                     l3600 108C                     l3520 0C46  
                   l3504 0BD6                     l3512 0C22                     l3440 08DA  
                   l3432 08B0                     l3424 087E                     l3416 0834  
                   l4208 1C60                     l4160 197A                     l4152 1906  
                   l4144 18C0                     l4224 1CCC                     l4232 363A  
                   l4240 3758                     l4320 27F0                     l4312 2764  
                   l4304 271C                     l3178 32B2                     l3194 33B4  
                   l3186 3396                     l3098 1FE0                     l2810 17D0  
                   l2802 1784                     l2730 159C                     l2722 1566  
                   l2714 1518                     l2706 1508                     l2650 1428  
                   l2642 13F6                     l3290 2DF8                     l3282 2DD2  
                   l3274 2D92                     l3338 2FD0                     l3346 3010  
                   l3370 2812                     l2634 31C8                     l2626 3158  
                   l3610 10C0                     l3602 109A                     l3530 0CAC  
                   l3522 0C62                     l3506 0BE8                     l3450 0940  
                   l3442 08DE                     l3434 08C2                     l3426 0888  
                   l3418 0844                     l4226 1CF0                     l4218 1CB2  
                   l4162 199A                     l4154 190E                     l4170 1A02  
                   l4146 18CE                     l4234 3642                     l4242 376A  
                   l4314 27AA                     l4306 2728                     l3196 33C2  
                   l3188 339A                     l2900 21E0                     l2820 183A  
                   l2812 17DE                     l2804 179A                     l2740 15E8  
                   l2732 15AA                     l2724 1576                     l2708 150C  
                   l2716 151C                     l2660 145A                     l2652 142A  
                   l2644 13F8                     l3292 2E02                     l3284 2DE0  
                   l3276 2DBC                     l3268 2D68                     l3348 3022  
                   l3372 2832                     l2628 316A                     l3356 36FC  
                   l3364 36D2                     l3700 139C                     l3620 10F2  
                   l3612 10D0                     l3604 10AA                     l3540 0CF4  
                   l3532 0CBE                     l3524 0C98                     l3508 0BF0  
                   l3452 0952                     l3436 08CE                     l3444 08E4  
                   l3428 0890                     l4180 1AA8                     l4172 1A24  
                   l4164 19A8                     l4156 191C                     l4148 18DE  
                   l4236 3650                     l4244 3772                     l4316 27D0  
                   l4308 2742                     l4260 24D8                     l4252 24C8  
                   l4342 2C94                     l3198 33CA                     l2910 2220  
                   l2902 21E2                     l2830 1874                     l2822 185A  
                   l2814 1818                     l2750 1628                     l2734 15AC  
                   l2726 158C                     l2718 1520                     l2670 1482  
                   l2662 145C                     l2646 1408                     l2654 1432  
                   l2638 13DC                     l3294 2E0C                     l3278 2DBE  
                   l3390 29DA                     l3382 291A                     l3374 2888  
                   l3358 370C                     l3366 36E4                     l3702 13A4  
                   l3630 119A                     l3622 1104                     l3614 10D4  
                   l3606 10AE                     l3550 0D3C                     l3542 0D02  
                   l3534 0CD0                     l3526 0CA0                     l3518 0C34  
                   l3470 0A26                     l3454 096E                     l3446 090A  
                   l3462 09B8                     l3438 08D6                     l4182 1ABA  
                   l4174 1A34                     l4158 1940                     l4238 3676  
                   l4246 377A                     l4318 27E4                     l4270 254C  
                   l4262 24DC                     l4254 24CC                     l3720 2C10  
                   l3712 2BD8                     l2920 2250                     l2912 2228  
                   l2904 21EA                     l2832 187A                     l2824 185E  
                   l2808 17C4                     l2816 181A                     l2760 1652  
                   l2752 1634                     l2744 15FC                     l2736 15B6  
                   l2728 1598                     l2680 14BC                     l2672 1492  
                   l2664 1462                     l2656 1442                     l2648 1418  
                   l3392 2A02                     l3384 2956                     l3376 289C  
                   l2840 3888                     l3704 13B4                     l3640 11F2  
                   l3632 11A2                     l3624 1108                     l3616 10DA  
                   l3608 10B4                     l3560 0E50                     l3552 0D4C  
                   l3544 0D1A                     l3536 0CDE                     l3528 0CA4  
                   l3472 0A42                     l3464 09DE                     l3480 0A5E  
                   l3456 0986                     l4184 1AD0                     l4192 1B3A  
                   l4176 1A66                     l4168 19F0                     l4248 3796  
                   l4280 25C2                     l4272 2572                     l4264 24DE  
                   l4256 24D0                     l3730 2C66                     l3722 2C46  
                   l3714 2BEC                     l2930 228E                     l2922 2250  
                   l2914 222C                     l2906 21FA                     l2834 1888  
                   l2826 186C                     l2818 182A                     l2770 16C4  
                   l2754 1638                     l2746 160C                     l2738 15D8  
                   l2762 1658                     l2690 14E8                     l2682 14CE  
                   l2674 14A2                     l2666 1470                     l2658 1448  
                   l3394 2A12                     l3378 28AA                     l3386 298A  
                   l2842 3894                     l2850 39F6                     l3706 13BA  
                   l3650 1236                     l3642 1200                     l3618 10E0  
                   l3626 110E                     l3634 11A6                     l3570 0EF0  
                   l3554 0D60                     l3562 0E56                     l3546 0D2C  
                   l3538 0CE2                     l3490 0AE8                     l3482 0A78  
                   l3458 0990                     l4194 1B68                     l4186 1ADE  
                   l4178 1A76                     l4290 265C                     l4282 25D0  
                   l4274 2586                     l4266 24F4                     l4258 24D4  
                   l3900 35AA                     l3740 2CE0                     l3732 2C6E  
                   l3724 2C4A                     l3716 2BF0                     l2940 22DA  
                   l2932 229E                     l2908 2210                     l2836 188A  
                   l2828 1872                     l2780 171E                     l2764 167E  
                   l2772 16D4                     l2756 1646                     l2748 161A  
                   l2692 14EC                     l2684 14DC                     l2676 14A4  
                   l2668 1472                     l3388 29C6                     l2844 38A6  
                   l2852 39FA                     l3660 126C                     l3652 123E  
                   l3644 1210                     l3636 11C4                     l3628 1166  
                   l3580 0F86                     l3572 0F22                     l3564 0E74  
                   l3556 0DC4                     l3548 0D34                     l3492 0B42  
                   l3468 0A14                     l4188 1B0E                     l4284 2616  
                   l4292 2676                     l4276 2592                     l4268 2506  
                   l3902 35BA                     l2862 3AB4                     l3398 397A  
                   l3734 2C76                     l3718 2BF4                     l2950 2324  
                   l2942 22E8                     l2934 22AE                     l2926 2264  
                   l2918 2240                     l2870 213A                     l2790 174E  
                   l2782 1728                     l2774 16FA                     l2766 16B2  
                   l2758 1648                     l2694 14F0                     l2686 14E0  
                   l2678 14AC                     l2846 38AA                     l2854 3A12  
                   l3670 12C8                     l3662 1274                     l3654 124E  
                   l3646 1214                     l3638 11E0                     l3590 103C  
                   l3582 0F9A                     l3574 0F32                     l3566 0EA8  
                   l3558 0E1C                     l3494 0B76                     l3486 0AAE  
                   l4198 1BD6                     l4294 268A                     l4286 263C  
                   l4278 25AC                     ?_pad 0015                     l3920 34F0  
                   l3904 35BC                     l2864 3AD0                     l3744 2D1E  
                   l3736 2CAA                     l3728 2C50                     l2960 236A  
                   l2952 2336                     l2944 22F4                     l2936 22B6  
                   l2928 227E                     l2880 217A                     l2872 2148  
                   l2792 1752                     l2784 1736                     l2776 170A  
                   l2768 16B4                     l2696 14F4                     l2688 14E4  
                   l2848 39EA                     l3680 1308                     l3672 12D0  
                   l3664 1280                     l3656 1256                     l3648 1224  
                   l3592 1050                     l3584 0FA6                     l3576 0F42  
                   l3568 0EDA                     l3496 0B7E                     l3488 0AE2  
                   l3760 30A6                     l4296 268E                     l4288 2650  
                   l3930 3530                     l3922 34F8                     l3906 35CC  
                   l3746 2D30                     l2970 23CA                     l2954 234C  
                   l2962 237C                     l2946 2312                     l2938 22C6  
                   l2890 21A0                     l2882 217C                     l2874 214A  
                   l2794 1762                     l2786 1738                     l2698 14F8  
                   l2858 390A                     l3690 1344                     l3682 131A  
                   l3666 1286                     l3674 12D6                     l3658 1264  
                   l3594 1062                     l3586 0FCA                     l3578 0F76  
                   l3498 0BB0                     l3770 3122                     l3762 30B4  
                   l3754 3070                     l4298 269C                     l3916 3ADA  
                   l3940 354E                     l3932 3536                     l3924 34FE  
                   l3748 2D42                     l2980 2438                     l2964 238A  
                   l2956 2352                     l2948 2314                     l2892 21AE  
                   l2876 215A                     l2884 2184                     l2868 212E  
                   l2788 1746                     l2796 1764                     l3692 134A  
                   l3684 1326                     l3676 12E8                     l3668 12AC  
                   l3596 1070                     l3588 102E                     l3764 30CC  
                   l3756 309A                     l3918 3AF6                     l3950 3854  
                   l3942 3AFA                     l3870 35F2                     l3934 353C  
                   l3926 3514                     l2990 24A2                     l2974 23F4  
                   l2982 243C                     l2966 238E                     l2958 235C  
                   l2894 21B0                     l2886 2194                     l2878 216A  
                   l2798 1772                     l3686 132E                     l3678 1302  
                   l3598 1078                     l3766 30E8                     l3952 3858  
                   l3880 3624                     l3872 35F4                     l3864 35D2  
                   l3936 3542                     l3928 351A                     l3944 38CC  
                   l2992 24A6                     l2984 2456                     l2976 2400  
                   l2968 239C                     l2896 21C0                     l2888 219A  
                   l3696 137E                     l3688 133E                     l3768 30FA  
                   l3954 386A                     l3882 3626                     l3874 3604  
                   l3866 35E0                     l3938 3548                     l3970 3A84  
                   l3890 3578                     l3946 38F2                     l2994 24B4  
                   l2986 246C                     l2978 240E                     l2898 21D0  
                   l3698 1390                     l3956 386C                     l3948 3844  
                   l3884 3636                     l3876 3612                     l3868 35E2  
                   l3972 3A9E                     l3892 3588                     l3980 39BE  
                   l2996 24BA                     l2988 2486                     l3878 3614  
                   l3974 3AAA                     l3894 358A                     l3886 3568  
                   l3982 39CC                     l3990 2A36                     l2998 24BC  
                   l3896 359A                     l3888 3576                     l3984 39D0  
                   l3976 39B2                     l3992 2A44                     l3898 35A8  
                   l3978 39B6                     l3986 3B14                     l3994 2A8A  
                   l3996 2AA0                     l3988 2A26                     STR_1 080B  
                   STR_2 0801                     STR_3 0801                     STR_4 0801  
                   STR_5 0815                     STR_6 081D                     STR_9 0819  
                   u3000 21C0                     u3001 21BC                     u3010 21D0  
                   u3011 21CC                     u3100 238A                     u3020 2210  
                   u3101 2386                     u3021 220C                     u3110 239C  
                   u3030 2250                     u3111 2398                     u3031 224C  
                   u3120 23CA                     u3040 22C6                     u3200 1D30  
                   u4000 090A                     _LATD 000F8C                     u3121 23C6  
                   u3041 22C2                     u3201 1D2C                     u4001 0906  
                   u3130 23E0                     u3050 22E8                     u3210 1D40  
                   u4010 0938                     u3131 23DC                     u3051 22E4  
                   u3211 1D3C                     u4011 0932                     u3140 23F4  
                   u3060 2312                     u3300 1FEE                     u3220 1D80  
                   u2500 316A                     u4100 0BB0                     u4020 093A  
                   u3141 23F0                     u3061 230E                     u3301 1FEA  
                   u3221 1D7C                     u2501 3166                     u4101 0BAC  
                   u3150 240E                     u3070 2336                     u3310 201C  
                   u3230 1D92                     u2510 3192                     u4110 0BD6  
                   u4030 0952                     u3151 240A                     u3071 2332  
                   u3311 2018                     u3231 1D8E                     u2511 318E  
                   u4111 0BD2                     u4031 094E                     u3400 3262  
                   u3160 2456                     u3080 234C                     u3320 2032  
                   u3240 1DA2                     u2600 14CE                     u2520 31C8  
                   u4200 0CDE                     u4120 0BE8                     u4040 09DE  
                   u5000 19E8                     u3401 325E                     u3161 2452  
                   u3081 2348                     u3321 202E                     u3241 1D9E  
                   u2601 14CA                     u2521 31C4                     u4201 0CDA  
                   u4121 0BE4                     u4041 09DA                     u5001 19E2  
                   u3410 3280                     u3170 2486                     u3090 236A  
                   u3330 2046                     u3250 1DD8                     u2610 14DC  
                   u2530 13F6                     u4210 0CF4                     u4130 0C0A  
                   u4050 0A0C                     u5010 19EA                     u3411 327C  
                   u3171 2482                     u3091 2366                     u3331 2042  
                   u3251 1DD4                     u2611 14D8                     u2531 13F2  
                   u4211 0CF0                     u4131 0C06                     u4051 0A06  
                   u3420 329C                     u3180 24B4                     u3500 3474  
                   u3340 2060                     u3260 1DE8                     u2700 161A  
                   u2620 154A                     u2540 1408                     u4300 1050  
                   u4220 0D02                     u4140 0C30                     u4060 0A0E  
                   u5100 1C84                     u5020 1A02                     u3421 3298  
                   u3181 24B0                     u3501 3470                     u3341 205C  
                   u3261 1DE4                     u2701 1616                     u2621 1546  
                   u2541 1404                     u4301 104C                     u4221 0CFE  
                   u4141 0C2C                     u5101 1C80                     u5021 19FE  
                   u3430 32C2                     u3510 34B2                     u3350 20A8  
                   u3270 1F62                     u3190 1D1E                     u2710 1628  
                   u2630 1562                     u2550 1418                     u4310 1062  
                   u4230 0D2C                     u4150 0C46                     u4070 0A26  
                   u5030 1A34                     u5110 3692                     u3431 32BE  
                   u3511 34AE                     u3351 20A4                     u3191 1D1A  
                   u2711 1624                     u2631 155C                     u2551 1414  
                   u4311 105E                     u4231 0D28                     u4151 0C42  
                   u4071 0A22                     u5031 1A30                     u5111 368E  
                   u3440 33A8                     u3520 34E6                     u3360 20D6  
                   u3280 1FBC                     u2800 1772                     u2720 1646  
                   u2640 1564                     u2560 145A                     u3600 2DB2  
                   u4400 1236                     u4320 1070                     u4240 0E74  
                   u4160 0C62                     u4080 0AAA                     u5040 1A76  
                   u5120 24F4                     u3441 33A4                     u3521 34E2  
                   u3361 20D2                     u3281 1FB8                     u2801 176E  
                   u2721 1642                     u2561 1456                     u4401 1232  
                   u4321 106C                     u4241 0E70                     u4161 0C5E  
                   u4081 0AA6                     u5041 1A72                     u5121 24F0  
                   u3450 33C2                     u3530 2E9C                     u3370 2110  
                   u3290 1FDC                     u2810 1784                     u2730 167E  
                   u2650 158C                     u2570 1470                     u3610 2DE0  
                   u2490 3158                     u4410 1264                     u4330 108C  
                   u4250 0EDA                     u4170 0C98                     u4090 0B3E  
                   u5050 1ABA                     u5130 25C2                     u3451 33BE  
                   u3531 2E98                     u3371 210C                     u3291 1FD8  
                   u3275 1F58                     u2811 1780                     u2731 167A  
                   u2651 1588                     u2571 146C                     u3611 2DDC  
                   u2491 3154                     u4411 1260                     u4331 1088  
                   u4251 0ED6                     u4171 0C94                     u4091 0B3A  
                   u5051 1AB6                     u5131 25BE                     u4500 2C62  
                   u3380 3222                     u3460 33DC                     u3540 2EDA  
                   u2900 186C                     u2820 179A                     u2740 16C4  
                   u2660 15AA                     u2580 1482                     u3620 2DF4  
                   u3700 2FB2                     u4420 12E8                     u4340 109A  
                   u4260 0F22                     u4180 0CBE                     u5060 1B68  
                   u5140 268A                     u4501 2C5E                     u3381 321E  
                   u3461 33D8                     u3541 2ED6                     u2901 1868  
                   u2821 1796                     u2741 16C0                     u2661 15A6  
                   u2581 147E                     u3621 2DF0                     u3605 2DA8  
                   u4421 12E4                     u4341 1096                     u4261 0F1E  
                   u4181 0CBA                     u5061 1B64                     u5141 2686  
                   u4510 2D18                     u3390 323C                     u3470 33FA  
                   u3550 2EF8                     u2910 1888                     u2830 17B0  
                   u2750 16FA                     u2670 15CA                     u2590 1492  
                   u3630 2E1C                     u3710 2FD0                     u4430 1302  
                   u4350 10F2                     u4270 0F32                     u4190 0CD0  
                   u5070 1BCE                     u5150 2756                     u5207 38FC  
                   u4511 2D12                     u3391 3238                     u3471 33F6  
                   u3551 2EF4                     u2911 1884                     u2831 17AC  
                   u2751 16F6                     u2671 15C6                     u2591 148E  
                   u3631 2E18                     u3711 2FCC                     u4431 12FE  
                   u4351 10EE                     u4271 0F2E                     u4191 0CCC  
                   u5071 1BC8                     u5151 2752                     u4520 2D1A  
                   u3480 3410                     u3560 2F18                     u2840 17C4  
                   u2760 170A                     u2680 15D8                     u3640 2E3C  
                   u3720 2FF8                     u2920 38CA                     u3800 36CE  
                   u4440 131A                     u4360 11C4                     u4280 0F9A  
                   u5080 1BD0                     u5217 39B8                     u3481 340C  
                   u3561 2F14                     u2841 17C0                     u2761 1706  
                   u2681 15D4                     u3641 2E38                     u3721 2FF4  
                   u3705 2FA8                     u2921 38C6                     u4441 1316  
                   u4361 11C0                     u4281 0F96                     u4530 2D30  
                   u3490 3434                     u3570 2F68                     u2850 17DE  
                   u2770 1736                     u2690 15E8                     u3650 2E4C  
                   u3730 3022                     u2930 3A12                     u3810 36E4  
                   u4450 1378                     u4370 11E0                     u4290 103C  
                   u5090 1BE8                     u5307 35FA                     u5227 357E  
                   u4531 2D2C                     u3491 3430                     u3571 2F64  
                   u2851 17DA                     u2771 1732                     u2691 15E4  
                   u3651 2E48                     u3731 301E                     u2931 3A0E  
                   u3811 36E0                     u4451 1372                     u4371 11DC  
                   u4291 1038                     u5091 1BE4                     u4540 2D42  
                   u3580 3958                     u2860 1818                     u2780 1746  
                   u3900 29C6                     u3820 285A                     u3660 32E2  
                   u2940 393A                     u4460 137A                     u4380 11F2  
                   u5317 361A                     u5237 3590                     u4541 2D3E  
                   u3581 3954                     u2861 1814                     u2781 1742  
                   u3901 29C2                     u3661 32DE                     u2941 3934  
                   u4381 11EE                     u2870 182A                     u2790 1762  
                   u3590 2D7E                     u3750 305C                     u3910 2A02  
                   u3830 2888                     u3670 3304                     u2950 393C  
                   u4470 1390                     u4390 1200                     u4550 309A  
                   u5327 362C                     u5247 35B0                     u2871 1826  
                   u2791 175E                     u3591 2D7A                     u3751 3056  
                   u3911 29FE                     u3831 2884                     u3671 3300  
                   u4471 138C                     u4391 11FC                     u4551 3096  
                   u5167 259E                     u4800 2A36                     u3920 39AA  
                   u4480 2C10                     u2960 2148                     u2880 183A  
                   u3760 305E                     u3840 28AA                     u3680 335A  
                   u4560 30CC                     u5257 35C2                     u4801 2A32  
                   u3921 39A4                     u4481 2C0C                     u2961 2144  
                   u2881 1836                     u3745 3034                     u3841 28A6  
                   u3825 2850                     u3681 3356                     u4561 30C8  
                   u5177 2668                     u4810 2A44                     u3930 39AC  
                   u4490 2C46                     u2970 215A                     u2890 185A  
                   u3690 3368                     u3770 3744                     u4570 30E8  
                   u5267 3508                     u4811 2A40                     u4491 2C42  
                   u2971 2156                     u2891 1856                     u3691 3364  
                   u4571 30E4                     u5187 2734                     u4820 2AA0  
                   u3940 37C2                     u2980 216A                     u3860 2916  
                   u3780 3756                     u4580 30FA                     u5277 3524  
                   u4821 2A9C                     u3941 37BE                     u2981 2166  
                   u3861 2912                     u3781 3752                     u4581 30F6  
                   u5197 27FC                     u4750 38DC                     u4830 2AF6  
                   u3950 37F0                     u2990 21AE                     u3870 293A  
                   u3790 36CC                     u4590 3122                     u5287 3558  
                   u4751 38D6                     u4831 2AF2                     u3951 37EC  
                   u2991 21AA                     u3855 28BE                     u3791 36C6  
                   u4591 311E                     u4760 3854                     u4840 2B40  
                   u3880 2956                     u3856 28C8                     u3960 0852  
                   u4761 3850                     u5297 35E8                     u4841 2B3C  
                   u3881 2952                     u3857 28D8                     u3777 373A  
                   u3961 084E                     u4770 387C                     u4850 2B5E  
                   u3890 29AA                     u3970 08A2                     u4771 3878  
                   u4851 2B5A                     u3875 2930                     u3971 089E  
                   u4780 3A9E                     u4756 38DE                     u4860 2B6E  
                   u3980 08B0                     u4781 3A9A                     u4861 2B6A  
                   u3981 08AC                     u4790 39E8                     u4870 2B7C  
                   u3990 08C2                     u4791 39E4                     u4871 2B78  
                   u3895 29A0                     u3991 08BE                     u4880 2BB6  
                   u4881 2BB2                     u4890 2BC4                     u4970 18C0  
                   u4891 2BC0                     u4971 18BC                     u4980 1906  
                   u4981 1902                     u4990 1940                     u4991 193C  
                   _dbuf 0100                     _dato 00CC                     _atoi 2BD8  
                   _main 24C8                     _prec 0056                     _nout 00C6  
                   pad@i 001C                     pad@p 0019                     fsr1h 000FE2  
                   fsr2h 000FDA                     indf1 000FE7                     indf2 000FDF  
                   fsr1l 000FE1                     pad@w 001E                     fsr2l 000FD9  
                   btemp 005A         __end_of_ADC_Init 3AFA         __end_of_ADC_Read 3888  
          ___fpclassifyf 2F72                     prodh 000FF4                     prodl 000FF3  
                   start 0082          ___fldiv@new_exp 0016             _tolower$1393 0011  
           ___param_bank 000000          __end_of_Int_Ext 3B14                    ??_Led 0005  
                  ??_pad 001B         __end_of_LCD_Data 35D0         __end_of_LCD_Init 3566  
           LCD_Data@data 0006         __end_of_INT0_Ext 3A84         __end_of_INT1_Ext 0082  
          ___fltol@sign1 000D                    ?_atoi 000C          __end_of___fladd 189C  
                  ?_main 0001          __end_of___fldiv 24C8          __end_of___awdiv 32D4  
        __end_of___flneg 397A                    _ADRES 000FC3                    STR_10 0821  
                  STR_13 0825                    STR_15 0825          __end_of___awmod 3446  
        __end_of___flmul 212E          __end_of___flsub 3842          __end_of___fltol 2E6E  
        ___awdiv@divisor 0007                    i1l129 0072                    i2l123 3A80  
        ___awdiv@counter 0009             vfpfcnvrt@fmt 0046                    _TRISC 000F94  
                  _TRISD 000F95                    _flags 0058                    _fputc 3146  
    __size_of_LDC_Cadena 0038                    _fputs 3888          __end_of_isdigit 39B2  
                  atoi@n 0019                    pad@fp 0015                    atoi@s 000C  
                  _width 0054                    _putch 3B18          __end_of_isspace 37FC  
        __end_of_isupper 3942                    tablat 000FF5                    ttemp5 005B  
                  ttemp6 005E                    ttemp7 0062                    status 000FD8  
                  wtemp8 005B          __end_of_sprintf 37AA           ?___fpclassifyf 0005  
        __end_of_tolower 36FC          __end_of_strncmp 3146          __initialization 3A20  
           __end_of_atoi 2D68             __end_of_main 2812                   ??_atoi 000E  
                 ??_main 00BC            __activetblptr 000002                   ?_fputc 0005  
                 ?_fputs 000E         ___awdiv@dividend 0005                   ?_putch 0001  
                 _LCD_XY 3A84                   i1l4120 0070                   i1l4112 0026  
                 i1l4114 0046                   i1l4116 004E                   i1l4118 0068  
                 i2l4110 3A7E                   i2l4104 3A54                   i2l4106 3A5A  
                 i2l4108 3A76         __end_of___xxtofl 2BD8                ??_Int_Ext 0005  
           vfprintf@cfmt 004E                   _Toggle 38CC                   ___flge 2E6E  
                 ___fleq 3446                ??___fladd 000D                   ___wmul 3AB4  
              ??___fldiv 000D                ??___awdiv 0009                ??___flneg 0009  
              ??___awmod 0009                ??___flmul 001B                ??___flsub 0034  
              ??___fltol 0009                   _efgtoa 082A                   _floorf 2812  
                 clear_0 3A26                   clear_1 3A32                   clear_2 3A3E  
       ___awdiv@quotient 000B          ___awmod@divisor 0007          ___awmod@counter 0009  
                 pad@buf 0017     __size_of_LCD_Comando 006A                   _strcpy 36FC  
                 _strlen 39EA                   fputc@c 0005                   fputs@c 0012  
                 fputs@i 0013                   fputs@s 000E                ??_isdigit 0007  
        ___fpclassifyf@e 000D                ?_ADC_Init 0001          ___fpclassifyf@u 000F  
              ?_ADC_Read 0005          ___fpclassifyf@x 0005             __mediumconst 0000  
              ??_isspace 0007                   tblptrh 000FF7                ??_isupper 0007  
                 tblptrl 000FF6                   tblptru 000FF8                   putch@c 0001  
       __end_of_vfprintf 369C                ??_sprintf 0050                ??_tolower 000D  
              ??_strncmp 000B               ___flge@ff1 002C               ___flge@ff2 0030  
        ??___fpclassifyf 0009             ___xxtofl@arg 000F             ___xxtofl@exp 000E  
           ___xxtofl@val 0005               ___fleq@ff1 0005               ___fleq@ff2 0009  
              ?_LCD_Data 0001               __accesstop 0060  __end_of__initialization 3A44  
              ?_LCD_Init 0001               ___flneg@f1 0005                ?_INT0_Ext 0001  
              ?_INT1_Ext 0001            ___rparam_used 000001               ___fltol@f1 0005  
           ??_LDC_Cadena 0009           __pcstackCOMRAM 0001            __end_of_fputc 3210  
          __end_of_fputs 38CC            __end_of_putch 3B1A               ??_ADC_Init 0005  
             ??_ADC_Read 0007                  ??_fputc 0009                  ??_fputs 0012  
                ??_putch 0005       __end_of_LDC_Cadena 39EA               __pbssBANK0 00BE  
             __pbssBANK1 0100                  ?_LCD_XY 0007                  LCD_XY@x 0007  
                LCD_XY@y 0009               ??_LCD_Data 0005               ??_LCD_Init 0007  
             ??_INT0_Ext 0001               ??_INT1_Ext 0001                  ?_Toggle 0001  
                ?___flge 002C                  ?___fleq 0005                  ?___wmul 0005  
                ?_efgtoa 0038                  ?_floorf 001E           LDC_Cadena@dato 0007  
             ADC_Read@ch 0008                  ?_strcpy 0005                  ?_strlen 0005  
              ?___xxtofl 0005       __size_of_vfpfcnvrt 0468          __size_of_LCD_XY 0030  
                _Int_Ext 3AFA                  __Hparam 0000                  __Lparam 0000  
        __size_of_Toggle 003E          __size_of___flge 0104          __size_of___fleq 00AA  
                ___fladd 13DC                  ___fldiv 212E                  ___awdiv 3210  
                ___flneg 3942                  ___awmod 3396                  ___flmul 1D04  
                ___flsub 37FC                  ___fltol 2D68          __size_of___wmul 0026  
              ?_vfprintf 00A4             __psmallconst 0800          __size_of_efgtoa 0BB2  
        __size_of_floorf 0212                  __pcinit 3A20                  __ramtop 0800  
                __ptext0 24C8                  __ptext1 3758                  __ptext2 363A  
                __ptext3 189C                  __ptext4 3070                  __ptext5 082A  
                __ptext6 369C                  __ptext7 390A                  __ptext8 36FC  
                __ptext9 32D4          __size_of_strcpy 005C          __size_of_strlen 0036  
           __size_of_Led 0004             __size_of_pad 00C2                  _isdigit 397A  
             ??___xxtofl 0009         ___awmod@dividend 0005                  _isspace 37AA  
                _isupper 390A                  efgtoa@c 003E                  efgtoa@d 0078  
                efgtoa@e 0090                  efgtoa@f 003A                  efgtoa@g 008C  
                efgtoa@h 0082                  efgtoa@i 008A                  efgtoa@l 0086  
                efgtoa@m 0074                  efgtoa@n 0092                  efgtoa@p 007C  
                efgtoa@t 0070                  efgtoa@u 0094                  efgtoa@w 007F  
                atoi@neg 0012           LCD_Comando@cmd 0006                  _sprintf 3758  
                _tolower 369C                  _strncmp 3070           __pintcode_body 3A52  
   end_of_initialization 3A44                  floorf@e 002C                  floorf@m 0028  
                floorf@u 002E                  floorf@x 001E                  fputc@fp 0007  
          __Lmediumconst 0000                  int_func 3A52                  fputs@fp 0010  
      __end_of_vfpfcnvrt 1D04               efgtoa@mode 0081               efgtoa@sign 007A  
                postdec2 000FDD                  postinc0 000FEE                  postinc1 000FE6  
                postinc2 000FDE               ??_vfprintf 004E                  strcpy@d 000D  
                strlen@a 0007                  strcpy@s 000B                  strlen@s 0005  
            ___fladd@grs 0014            ___xxtofl@sign 000D                _TRISBbits 000F93  
            ___fldiv@grs 0018              ___fldiv@rem 0011        __size_of_ADC_Init 0020  
      __size_of_ADC_Read 0046              ___flmul@grs 0020           __end_of_LCD_XY 3AB4  
      __size_of_LCD_Data 006A        __size_of_LCD_Init 0076        __size_of_INT0_Ext 3A7C  
      __size_of_INT1_Ext 006A            ??_LCD_Comando 0005           __end_of_Toggle 390A  
         __end_of___flge 2F72           __end_of___fleq 34F0              vfpfcnvrt@ap 0048  
            vfpfcnvrt@ct 009C              vfpfcnvrt@fp 0044           __end_of___wmul 3ADA  
         __end_of_efgtoa 13DC           __end_of_floorf 2A24               floorf@F524 00BE  
         __end_of_strcpy 3758           __end_of_strlen 3A20      start_initialization 3A20  
            __end_of_Led 3B18              __end_of_pad 3396                 ??_LCD_XY 000B  
  __end_of___fpclassifyf 3070              vfprintf@fmt 00A6                 ??_Toggle 0005  
               ??___flge 0034                 ??___fleq 000D                 ??___wmul 0009  
               ??_efgtoa 003F                 ??_floorf 0022                 ??_strcpy 0009  
               ??_strlen 0007                ___fladd@a 0009                ___fladd@b 0005  
              ___fldiv@a 0009                ___fldiv@b 0005      __end_of_LCD_Comando 363A  
              ___flmul@a 0017                ___flmul@b 0013              __pbssCOMRAM 0050  
              ___flsub@a 0030                ___flsub@b 002C            __pcstackBANK0 0060  
      __size_of___xxtofl 01B4                _atoi$1300 0016                _atoi$1298 0014  
              _atoi$1299 0018                 ?_Int_Ext 0001              _efgtoa$1240 0068  
            _efgtoa$1234 0064              _efgtoa$1235 0066              _efgtoa$1244 006A  
            _efgtoa$1245 006C              _efgtoa$1246 006E                __pintcode 0008  
               ?___fladd 0005                 ?___fldiv 0005                 ?___awdiv 0005  
               ?___flneg 0005                 ?___awmod 0005                 ?___flmul 0013  
               ?___flsub 002C                 ?___fltol 0005              __pintcodelo 0018  
      __size_of_vfprintf 0062              __smallconst 0800                 ?_isdigit 0005  
               _ADC_Init 3ADA                 _ADC_Read 3842                 ?_isspace 0005  
               ?_isupper 0005                 ?_sprintf 00AA                 ?_tolower 000B  
         __size_of_fputc 00CA           __size_of_fputs 0044                 ?_strncmp 0005  
         __size_of_putch 0002                 _LCD_Data 3566                 _LCD_Init 34F0  
         ___wmul@product 0009                 _INT0_Ext 0008                 _LATCbits 000F8B  
               _INT1_Ext 0018                 _LATDbits 000F8C                 i1u495_20 0036  
               i1u495_21 0030                 i1u495_26 0038                 i1u496_20 0068  
               i1u496_21 0064                 i2u494_40 3A76                 i2u494_41 3A72  
               _RCONbits 000FD0                _valor_adc 00C8              _LCD_Comando 35D0  
              _vfpfcnvrt 189C               _ADCON0bits 000FC2               _ADCON1bits 000FC1  
             _ADCON2bits 000FC0        ___wmul@multiplier 0005             _isspace$1329 000B  
             vfpfcnvrt@c 00A3               vfpfcnvrt@f 009F              _INTCON2bits 000FF1  
            _INTCON3bits 000FF0                 __Hrparam 0000         __size_of_Int_Ext 001A  
             vfprintf@ap 00A8                 __Lrparam 0000               vfprintf@fp 00A4  
       __size_of___fladd 04C0         __size_of___fldiv 039A         __size_of___awdiv 00C4  
       __size_of___flneg 0038         __size_of___awmod 00B0         __size_of___flmul 042A  
       __size_of___flsub 0046         __size_of___fltol 0106               ?_vfpfcnvrt 0044  
     ___fpclassifyf@F463 0050               sprintf@fmt 00AC                 ___xxtofl 2A24  
       __size_of_isdigit 0038         __size_of_isspace 0052                 __ptext10 39EA  
               __ptext11 3888                 __ptext20 1D04                 __ptext12 3146  
               __ptext21 2E6E                 __ptext13 3B18                 __ptext30 2A24  
               __ptext22 3446                 __ptext14 2812                 __ptext31 38CC  
               __ptext23 212E                 __ptext15 2F72                 __ptext40 3ADA  
               __ptext32 3B14                 __ptext24 3396                 __ptext16 2D68  
               __ptext33 39B2                 __ptext25 3210                 __ptext17 37FC  
               __ptext34 3566                 __ptext26 2BD8                 __ptext18 13DC  
               __ptext35 3A84                 __ptext27 37AA                 __ptext19 3942  
               __ptext36 34F0                 __ptext28 397A                 __ptext37 35D0  
               __ptext29 3AB4                 __ptext38 3AFA                 __ptext39 3842  
       __size_of_isupper 0038         __size_of_sprintf 0052         __size_of_tolower 0060  
             strcpy@dest 0005         __size_of_strncmp 00D6            __size_of_atoi 0190  
          __size_of_main 034A                 efgtoa@fp 0038                 efgtoa@ne 0076  
               efgtoa@pp 0072                 efgtoa@ou 0060               _LDC_Cadena 39B2  
               int$flags 005A                 _vfprintf 363A           _vfpfcnvrt$1260 0098  
         _vfpfcnvrt$1264 009A               _INTCONbits 000FF2                 isdigit@c 0005  
               intlevel1 0000                 intlevel2 0000                sprintf@ap 00B4  
               isspace@c 0005                strcpy@src 0007                 isupper@c 0005  
              strncmp@_l 0005                strncmp@_r 0007              efgtoa@nmode 007E  
            ??_vfpfcnvrt 004A                 sprintf@f 00B6                 tolower@c 000B  
               sprintf@s 00AA   __size_of___fpclassifyf 00FE                 strncmp@l 000C  
               strncmp@n 0009                 strncmp@r 000E            ___fladd@signs 0011  
           ___fladd@aexp 0012             ___fladd@bexp 0013  
