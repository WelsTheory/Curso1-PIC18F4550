

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sat Dec 19 15:17:32 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F4550 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     
    58                           	psect	idataCOMRAM
    59  000374                     __pidataCOMRAM:
    60                           	callstack 0
    61                           
    62                           ;initializer for _display
    63  000374  3F                 	db	63
    64  000375  06                 	db	6
    65  000376  5B                 	db	91
    66  000377  4F                 	db	79
    67  000378  66                 	db	102
    68  000379  6D                 	db	109
    69  00037A  7D                 	db	125
    70  00037B  07                 	db	7
    71  00037C  7F                 	db	127
    72  00037D  67                 	db	103
    73  0000                     _LATBbits	set	3978
    74  0000                     _RCONbits	set	4048
    75  0000                     _INTCON2bits	set	4081
    76  0000                     _INTCON3bits	set	4080
    77  0000                     _INTCONbits	set	4082
    78  0000                     _TRISBbits	set	3987
    79  0000                     _LATD	set	3980
    80  0000                     _LATAbits	set	3977
    81  0000                     _TRISB	set	3987
    82  0000                     _TRISA	set	3986
    83  0000                     _TRISD	set	3989
    84                           
    85                           ; #config settings
    86                           
    87                           	psect	cinit
    88  0002E4                     __pcinit:
    89                           	callstack 0
    90  0002E4                     start_initialization:
    91                           	callstack 0
    92  0002E4                     __initialization:
    93                           	callstack 0
    94                           
    95                           ; Initialize objects allocated to COMRAM (10 bytes)
    96                           ; load TBLPTR registers with __pidataCOMRAM
    97  0002E4  0E74               	movlw	low __pidataCOMRAM
    98  0002E6  6EF6               	movwf	tblptrl,c
    99  0002E8  0E03               	movlw	high __pidataCOMRAM
   100  0002EA  6EF7               	movwf	tblptrh,c
   101  0002EC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   102  0002EE  6EF8               	movwf	tblptru,c
   103  0002F0  EE00  F010         	lfsr	0,__pdataCOMRAM
   104  0002F4  EE10 F00A          	lfsr	1,10
   105  0002F8                     copy_data0:
   106  0002F8  0009               	tblrd		*+
   107  0002FA  CFF5 FFEE          	movff	tablat,postinc0
   108  0002FE  50E5               	movf	postdec1,w,c
   109  000300  50E1               	movf	fsr1l,w,c
   110  000302  E1FA               	bnz	copy_data0
   111                           
   112                           ; Clear objects allocated to COMRAM (8 bytes)
   113  000304  EE00  F01A         	lfsr	0,__pbssCOMRAM
   114  000308  0E08               	movlw	8
   115  00030A                     clear_0:
   116  00030A  6AEE               	clrf	postinc0,c
   117  00030C  06E8               	decf	wreg,f,c
   118  00030E  E1FD               	bnz	clear_0
   119  000310                     end_of_initialization:
   120                           	callstack 0
   121  000310                     __end_of__initialization:
   122                           	callstack 0
   123  000310  9022               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   124  000312  9222               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   125  000314  0100               	movlb	0
   126  000316  EF2E  F000         	goto	_main	;jump to C main() function
   127                           
   128                           	psect	bssCOMRAM
   129  00001A                     __pbssCOMRAM:
   130                           	callstack 0
   131  00001A                     _x:
   132                           	callstack 0
   133  00001A                     	ds	2
   134  00001C                     _cen:
   135                           	callstack 0
   136  00001C                     	ds	2
   137  00001E                     _dec:
   138                           	callstack 0
   139  00001E                     	ds	2
   140  000020                     _uni:
   141                           	callstack 0
   142  000020                     	ds	2
   143                           
   144                           	psect	dataCOMRAM
   145  000010                     __pdataCOMRAM:
   146                           	callstack 0
   147  000010                     _display:
   148                           	callstack 0
   149  000010                     	ds	10
   150                           
   151                           	psect	cstackCOMRAM
   152  000001                     __pcstackCOMRAM:
   153                           	callstack 0
   154  000001                     ??_INT1_Ext:
   155                           
   156                           ; 1 bytes @ 0x0
   157  000001                     	ds	4
   158  000005                     ?___lwdiv:
   159                           	callstack 0
   160  000005                     ?___lwmod:
   161                           	callstack 0
   162  000005                     ___lwdiv@dividend:
   163                           	callstack 0
   164  000005                     ___lwmod@dividend:
   165                           	callstack 0
   166                           
   167                           ; 2 bytes @ 0x4
   168  000005                     	ds	2
   169  000007                     ___lwdiv@divisor:
   170                           	callstack 0
   171  000007                     ___lwmod@divisor:
   172                           	callstack 0
   173                           
   174                           ; 2 bytes @ 0x6
   175  000007                     	ds	2
   176  000009                     ___lwmod@counter:
   177                           	callstack 0
   178  000009                     ___lwdiv@quotient:
   179                           	callstack 0
   180                           
   181                           ; 2 bytes @ 0x8
   182  000009                     	ds	2
   183  00000B                     ___lwdiv@counter:
   184                           	callstack 0
   185                           
   186                           ; 1 bytes @ 0xA
   187  00000B                     	ds	1
   188  00000C                     ??_main:
   189                           
   190                           ; 1 bytes @ 0xB
   191  00000C                     	ds	2
   192  00000E                     main@i:
   193                           	callstack 0
   194                           
   195                           ; 2 bytes @ 0xD
   196  00000E                     	ds	2
   197                           
   198 ;;
   199 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   200 ;;
   201 ;; *************** function _main *****************
   202 ;; Defined at:
   203 ;;		line 20 in file "Programa_principal.c"
   204 ;; Parameters:    Size  Location     Type
   205 ;;		None
   206 ;; Auto vars:     Size  Location     Type
   207 ;;  i               2   13[COMRAM] unsigned short 
   208 ;; Return value:  Size  Location     Type
   209 ;;                  1    wreg      void 
   210 ;; Registers used:
   211 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   212 ;; Tracked objects:
   213 ;;		On entry : 0/0
   214 ;;		On exit  : 0/0
   215 ;;		Unchanged: 0/0
   216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   217 ;;      Params:         0       0       0       0       0       0       0       0       0
   218 ;;      Locals:         2       0       0       0       0       0       0       0       0
   219 ;;      Temps:          2       0       0       0       0       0       0       0       0
   220 ;;      Totals:         4       0       0       0       0       0       0       0       0
   221 ;;Total ram usage:        4 bytes
   222 ;; Hardware stack levels required when called:    3
   223 ;; This function calls:
   224 ;;		_Int_Ext
   225 ;;		___lwdiv
   226 ;;		___lwmod
   227 ;; This function is called by:
   228 ;;		Startup code after reset
   229 ;; This function uses a non-reentrant model
   230 ;;
   231                           
   232                           	psect	text0
   233  00005C                     __ptext0:
   234                           	callstack 0
   235  00005C                     _main:
   236                           	callstack 28
   237  00005C                     
   238                           ;Programa_principal.c: 21:     uint16_t i;;Programa_principal.c: 22:     TRISD = 0x00;
   239  00005C  0E00               	movlw	0
   240  00005E  6E95               	movwf	149,c	;volatile
   241                           
   242                           ;Programa_principal.c: 23:     TRISA = 0x00;
   243  000060  0E00               	movlw	0
   244  000062  6E92               	movwf	146,c	;volatile
   245                           
   246                           ;Programa_principal.c: 24:     TRISB = 0x00;
   247  000064  0E00               	movlw	0
   248  000066  6E93               	movwf	147,c	;volatile
   249  000068                     
   250                           ;Programa_principal.c: 25:     Int_Ext();
   251  000068  ECA8  F001         	call	_Int_Ext	;wreg free
   252  00006C                     l906:
   253                           
   254                           ;Programa_principal.c: 27:         if(x == 1){
   255  00006C  041A               	decf	_x^0,w,c
   256  00006E  101B               	iorwf	(_x+1)^0,w,c
   257  000070  A4D8               	btfss	status,2,c
   258  000072  EF3D  F000         	goto	u211
   259  000076  EF3F  F000         	goto	u210
   260  00007A                     u211:
   261  00007A  EFD2  F000         	goto	l948
   262  00007E                     u210:
   263  00007E                     
   264                           ;Programa_principal.c: 28:             for(i = 0;i<999;i++){
   265  00007E  0E00               	movlw	0
   266  000080  6E0F               	movwf	(main@i+1)^0,c
   267  000082  0E00               	movlw	0
   268  000084  6E0E               	movwf	main@i^0,c
   269  000086                     l914:
   270                           
   271                           ;Programa_principal.c: 29:                 cen = i/100;
   272  000086  C00E  F005         	movff	main@i,___lwdiv@dividend
   273  00008A  C00F  F006         	movff	main@i+1,___lwdiv@dividend+1
   274  00008E  0E00               	movlw	0
   275  000090  6E08               	movwf	(___lwdiv@divisor+1)^0,c
   276  000092  0E64               	movlw	100
   277  000094  6E07               	movwf	___lwdiv@divisor^0,c
   278  000096  EC06  F001         	call	___lwdiv	;wreg free
   279  00009A  C005  F01C         	movff	?___lwdiv,_cen
   280  00009E  C006  F01D         	movff	?___lwdiv+1,_cen+1
   281  0000A2                     
   282                           ;Programa_principal.c: 30:                 LATAbits.LA0 = 1;
   283  0000A2  8089               	bsf	137,0,c	;volatile
   284  0000A4                     
   285                           ;Programa_principal.c: 31:                 LATD = display[cen];
   286  0000A4  0E10               	movlw	low _display
   287  0000A6  241C               	addwf	_cen^0,w,c
   288  0000A8  6ED9               	movwf	fsr2l,c
   289  0000AA  0E00               	movlw	high _display
   290  0000AC  201D               	addwfc	(_cen+1)^0,w,c
   291  0000AE  6EDA               	movwf	fsr2h,c
   292  0000B0  50DF               	movf	indf2,w,c
   293  0000B2  6E8C               	movwf	140,c	;volatile
   294  0000B4                     
   295                           ;Programa_principal.c: 32:                 _delay((unsigned long)((50)*(20000000UL/4000.
      +                          0)));
   296  0000B4  0E02               	movlw	2
   297  0000B6  6E0D               	movwf	(??_main+1)^0,c
   298  0000B8  0E45               	movlw	69
   299  0000BA  6E0C               	movwf	??_main^0,c
   300  0000BC  0EAA               	movlw	170
   301  0000BE                     u267:
   302  0000BE  2EE8               	decfsz	wreg,f,c
   303  0000C0  D7FE               	bra	u267
   304  0000C2  2E0C               	decfsz	??_main^0,f,c
   305  0000C4  D7FC               	bra	u267
   306  0000C6  2E0D               	decfsz	(??_main+1)^0,f,c
   307  0000C8  D7FA               	bra	u267
   308  0000CA                     
   309                           ;Programa_principal.c: 33:                 LATAbits.LA0 = 0;
   310  0000CA  9089               	bcf	137,0,c	;volatile
   311  0000CC                     
   312                           ;Programa_principal.c: 34:                 dec = i/10;
   313  0000CC  C00E  F005         	movff	main@i,___lwdiv@dividend
   314  0000D0  C00F  F006         	movff	main@i+1,___lwdiv@dividend+1
   315  0000D4  0E00               	movlw	0
   316  0000D6  6E08               	movwf	(___lwdiv@divisor+1)^0,c
   317  0000D8  0E0A               	movlw	10
   318  0000DA  6E07               	movwf	___lwdiv@divisor^0,c
   319  0000DC  EC06  F001         	call	___lwdiv	;wreg free
   320  0000E0  C005  F01E         	movff	?___lwdiv,_dec
   321  0000E4  C006  F01F         	movff	?___lwdiv+1,_dec+1
   322  0000E8                     
   323                           ;Programa_principal.c: 35:                 if(dec >= 10){
   324  0000E8  501F               	movf	(_dec+1)^0,w,c
   325  0000EA  E109               	bnz	u220
   326  0000EC  0E0A               	movlw	10
   327  0000EE  5C1E               	subwf	_dec^0,w,c
   328  0000F0  A0D8               	btfss	status,0,c
   329  0000F2  EF7D  F000         	goto	u221
   330  0000F6  EF7F  F000         	goto	u220
   331  0000FA                     u221:
   332  0000FA  EF8D  F000         	goto	l930
   333  0000FE                     u220:
   334  0000FE                     
   335                           ;Programa_principal.c: 36:                     dec = dec%10;
   336  0000FE  C01E  F005         	movff	_dec,___lwmod@dividend
   337  000102  C01F  F006         	movff	_dec+1,___lwmod@dividend+1
   338  000106  0E00               	movlw	0
   339  000108  6E08               	movwf	(___lwmod@divisor+1)^0,c
   340  00010A  0E0A               	movlw	10
   341  00010C  6E07               	movwf	___lwmod@divisor^0,c
   342  00010E  EC40  F001         	call	___lwmod	;wreg free
   343  000112  C005  F01E         	movff	?___lwmod,_dec
   344  000116  C006  F01F         	movff	?___lwmod+1,_dec+1
   345  00011A                     l930:
   346                           
   347                           ;Programa_principal.c: 38:                 LATAbits.LA1 = 1;
   348  00011A  8289               	bsf	137,1,c	;volatile
   349  00011C                     
   350                           ;Programa_principal.c: 39:                 LATD = display[dec];
   351  00011C  0E10               	movlw	low _display
   352  00011E  241E               	addwf	_dec^0,w,c
   353  000120  6ED9               	movwf	fsr2l,c
   354  000122  0E00               	movlw	high _display
   355  000124  201F               	addwfc	(_dec+1)^0,w,c
   356  000126  6EDA               	movwf	fsr2h,c
   357  000128  50DF               	movf	indf2,w,c
   358  00012A  6E8C               	movwf	140,c	;volatile
   359  00012C                     
   360                           ;Programa_principal.c: 40:                 _delay((unsigned long)((50)*(20000000UL/4000.
      +                          0)));
   361  00012C  0E02               	movlw	2
   362  00012E  6E0D               	movwf	(??_main+1)^0,c
   363  000130  0E45               	movlw	69
   364  000132  6E0C               	movwf	??_main^0,c
   365  000134  0EAA               	movlw	170
   366  000136                     u277:
   367  000136  2EE8               	decfsz	wreg,f,c
   368  000138  D7FE               	bra	u277
   369  00013A  2E0C               	decfsz	??_main^0,f,c
   370  00013C  D7FC               	bra	u277
   371  00013E  2E0D               	decfsz	(??_main+1)^0,f,c
   372  000140  D7FA               	bra	u277
   373  000142                     
   374                           ;Programa_principal.c: 41:                 LATAbits.LA1 = 0;
   375  000142  9289               	bcf	137,1,c	;volatile
   376  000144                     
   377                           ;Programa_principal.c: 42:                 uni = i%10;
   378  000144  C00E  F005         	movff	main@i,___lwmod@dividend
   379  000148  C00F  F006         	movff	main@i+1,___lwmod@dividend+1
   380  00014C  0E00               	movlw	0
   381  00014E  6E08               	movwf	(___lwmod@divisor+1)^0,c
   382  000150  0E0A               	movlw	10
   383  000152  6E07               	movwf	___lwmod@divisor^0,c
   384  000154  EC40  F001         	call	___lwmod	;wreg free
   385  000158  C005  F020         	movff	?___lwmod,_uni
   386  00015C  C006  F021         	movff	?___lwmod+1,_uni+1
   387  000160                     
   388                           ;Programa_principal.c: 43:                 LATAbits.LA2 = 1;
   389  000160  8489               	bsf	137,2,c	;volatile
   390  000162                     
   391                           ;Programa_principal.c: 44:                 LATD = display[uni];
   392  000162  0E10               	movlw	low _display
   393  000164  2420               	addwf	_uni^0,w,c
   394  000166  6ED9               	movwf	fsr2l,c
   395  000168  0E00               	movlw	high _display
   396  00016A  2021               	addwfc	(_uni+1)^0,w,c
   397  00016C  6EDA               	movwf	fsr2h,c
   398  00016E  50DF               	movf	indf2,w,c
   399  000170  6E8C               	movwf	140,c	;volatile
   400                           
   401                           ;Programa_principal.c: 45:                 _delay((unsigned long)((50)*(20000000UL/4000.
      +                          0)));
   402  000172  0E02               	movlw	2
   403  000174  6E0D               	movwf	(??_main+1)^0,c
   404  000176  0E45               	movlw	69
   405  000178  6E0C               	movwf	??_main^0,c
   406  00017A  0EAA               	movlw	170
   407  00017C                     u287:
   408  00017C  2EE8               	decfsz	wreg,f,c
   409  00017E  D7FE               	bra	u287
   410  000180  2E0C               	decfsz	??_main^0,f,c
   411  000182  D7FC               	bra	u287
   412  000184  2E0D               	decfsz	(??_main+1)^0,f,c
   413  000186  D7FA               	bra	u287
   414  000188                     
   415                           ;Programa_principal.c: 46:                 LATAbits.LA2 = 0;
   416  000188  9489               	bcf	137,2,c	;volatile
   417  00018A                     
   418                           ;Programa_principal.c: 47:             }
   419  00018A  4A0E               	infsnz	main@i^0,f,c
   420  00018C  2A0F               	incf	(main@i+1)^0,f,c
   421  00018E  0EE7               	movlw	231
   422  000190  5C0E               	subwf	main@i^0,w,c
   423  000192  0E03               	movlw	3
   424  000194  580F               	subwfb	(main@i+1)^0,w,c
   425  000196  A0D8               	btfss	status,0,c
   426  000198  EFD0  F000         	goto	u231
   427  00019C  EFD2  F000         	goto	u230
   428  0001A0                     u231:
   429  0001A0  EF43  F000         	goto	l914
   430  0001A4                     u230:
   431  0001A4                     l948:
   432                           
   433                           ;Programa_principal.c: 49:         if(x == 2){
   434  0001A4  0E02               	movlw	2
   435  0001A6  181A               	xorwf	_x^0,w,c
   436  0001A8  101B               	iorwf	(_x+1)^0,w,c
   437  0001AA  A4D8               	btfss	status,2,c
   438  0001AC  EFDA  F000         	goto	u241
   439  0001B0  EFDC  F000         	goto	u240
   440  0001B4                     u241:
   441  0001B4  EF36  F000         	goto	l906
   442  0001B8                     u240:
   443  0001B8                     
   444                           ;Programa_principal.c: 50:             LATAbits.LA0 = 1;
   445  0001B8  8089               	bsf	137,0,c	;volatile
   446  0001BA                     
   447                           ;Programa_principal.c: 51:             for(i=0;i<10;i++){
   448  0001BA  0E00               	movlw	0
   449  0001BC  6E0F               	movwf	(main@i+1)^0,c
   450  0001BE  0E00               	movlw	0
   451  0001C0  6E0E               	movwf	main@i^0,c
   452  0001C2                     l958:
   453                           
   454                           ;Programa_principal.c: 52:                 LATD = display[i];
   455  0001C2  0E10               	movlw	low _display
   456  0001C4  240E               	addwf	main@i^0,w,c
   457  0001C6  6ED9               	movwf	fsr2l,c
   458  0001C8  0E00               	movlw	high _display
   459  0001CA  200F               	addwfc	(main@i+1)^0,w,c
   460  0001CC  6EDA               	movwf	fsr2h,c
   461  0001CE  50DF               	movf	indf2,w,c
   462  0001D0  6E8C               	movwf	140,c	;volatile
   463  0001D2                     
   464                           ;Programa_principal.c: 53:                 _delay((unsigned long)((500)*(20000000UL/4000
      +                          .0)));
   465  0001D2  0E0D               	movlw	13
   466  0001D4  6E0D               	movwf	(??_main+1)^0,c
   467  0001D6  0EAF               	movlw	175
   468  0001D8  6E0C               	movwf	??_main^0,c
   469  0001DA  0EB6               	movlw	182
   470  0001DC                     u297:
   471  0001DC  2EE8               	decfsz	wreg,f,c
   472  0001DE  D7FE               	bra	u297
   473  0001E0  2E0C               	decfsz	??_main^0,f,c
   474  0001E2  D7FC               	bra	u297
   475  0001E4  2E0D               	decfsz	(??_main+1)^0,f,c
   476  0001E6  D7FA               	bra	u297
   477  0001E8  D000               	nop2	
   478  0001EA                     
   479                           ;Programa_principal.c: 54:             }
   480  0001EA  4A0E               	infsnz	main@i^0,f,c
   481  0001EC  2A0F               	incf	(main@i+1)^0,f,c
   482  0001EE  500F               	movf	(main@i+1)^0,w,c
   483  0001F0  E109               	bnz	u250
   484  0001F2  0E0A               	movlw	10
   485  0001F4  5C0E               	subwf	main@i^0,w,c
   486  0001F6  A0D8               	btfss	status,0,c
   487  0001F8  EF00  F001         	goto	u251
   488  0001FC  EF02  F001         	goto	u250
   489  000200                     u251:
   490  000200  EFE1  F000         	goto	l958
   491  000204                     u250:
   492  000204  EF36  F000         	goto	l906
   493  000208  EF2C  F000         	goto	start
   494  00020C                     __end_of_main:
   495                           	callstack 0
   496                           
   497 ;; *************** function ___lwmod *****************
   498 ;; Defined at:
   499 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\lwmod.c"
   500 ;; Parameters:    Size  Location     Type
   501 ;;  dividend        2    4[COMRAM] unsigned int 
   502 ;;  divisor         2    6[COMRAM] unsigned int 
   503 ;; Auto vars:     Size  Location     Type
   504 ;;  counter         1    8[COMRAM] unsigned char 
   505 ;; Return value:  Size  Location     Type
   506 ;;                  2    4[COMRAM] unsigned int 
   507 ;; Registers used:
   508 ;;		wreg, status,2, status,0
   509 ;; Tracked objects:
   510 ;;		On entry : 0/0
   511 ;;		On exit  : 0/0
   512 ;;		Unchanged: 0/0
   513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   514 ;;      Params:         4       0       0       0       0       0       0       0       0
   515 ;;      Locals:         1       0       0       0       0       0       0       0       0
   516 ;;      Temps:          0       0       0       0       0       0       0       0       0
   517 ;;      Totals:         5       0       0       0       0       0       0       0       0
   518 ;;Total ram usage:        5 bytes
   519 ;; Hardware stack levels used:    1
   520 ;; Hardware stack levels required when called:    2
   521 ;; This function calls:
   522 ;;		Nothing
   523 ;; This function is called by:
   524 ;;		_main
   525 ;; This function uses a non-reentrant model
   526 ;;
   527                           
   528                           	psect	text1
   529  000280                     __ptext1:
   530                           	callstack 0
   531  000280                     ___lwmod:
   532                           	callstack 28
   533  000280  5007               	movf	___lwmod@divisor^0,w,c
   534  000282  1008               	iorwf	(___lwmod@divisor+1)^0,w,c
   535  000284  B4D8               	btfsc	status,2,c
   536  000286  EF47  F001         	goto	u181
   537  00028A  EF49  F001         	goto	u180
   538  00028E                     u181:
   539  00028E  EF6D  F001         	goto	l572
   540  000292                     u180:
   541  000292  0E01               	movlw	1
   542  000294  6E09               	movwf	___lwmod@counter^0,c
   543  000296  EF51  F001         	goto	l892
   544  00029A                     l890:
   545  00029A  90D8               	bcf	status,0,c
   546  00029C  3607               	rlcf	___lwmod@divisor^0,f,c
   547  00029E  3608               	rlcf	(___lwmod@divisor+1)^0,f,c
   548  0002A0  2A09               	incf	___lwmod@counter^0,f,c
   549  0002A2                     l892:
   550  0002A2  AE08               	btfss	(___lwmod@divisor+1)^0,7,c
   551  0002A4  EF56  F001         	goto	u191
   552  0002A8  EF58  F001         	goto	u190
   553  0002AC                     u191:
   554  0002AC  EF4D  F001         	goto	l890
   555  0002B0                     u190:
   556  0002B0                     l894:
   557  0002B0  5007               	movf	___lwmod@divisor^0,w,c
   558  0002B2  5C05               	subwf	___lwmod@dividend^0,w,c
   559  0002B4  5008               	movf	(___lwmod@divisor+1)^0,w,c
   560  0002B6  5806               	subwfb	(___lwmod@dividend+1)^0,w,c
   561  0002B8  A0D8               	btfss	status,0,c
   562  0002BA  EF61  F001         	goto	u201
   563  0002BE  EF63  F001         	goto	u200
   564  0002C2                     u201:
   565  0002C2  EF67  F001         	goto	l898
   566  0002C6                     u200:
   567  0002C6  5007               	movf	___lwmod@divisor^0,w,c
   568  0002C8  5E05               	subwf	___lwmod@dividend^0,f,c
   569  0002CA  5008               	movf	(___lwmod@divisor+1)^0,w,c
   570  0002CC  5A06               	subwfb	(___lwmod@dividend+1)^0,f,c
   571  0002CE                     l898:
   572  0002CE  90D8               	bcf	status,0,c
   573  0002D0  3208               	rrcf	(___lwmod@divisor+1)^0,f,c
   574  0002D2  3207               	rrcf	___lwmod@divisor^0,f,c
   575  0002D4  2E09               	decfsz	___lwmod@counter^0,f,c
   576  0002D6  EF58  F001         	goto	l894
   577  0002DA                     l572:
   578  0002DA  C005  F005         	movff	___lwmod@dividend,?___lwmod
   579  0002DE  C006  F006         	movff	___lwmod@dividend+1,?___lwmod+1
   580  0002E2  0012               	return		;funcret
   581  0002E4                     __end_of___lwmod:
   582                           	callstack 0
   583                           
   584 ;; *************** function ___lwdiv *****************
   585 ;; Defined at:
   586 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\lwdiv.c"
   587 ;; Parameters:    Size  Location     Type
   588 ;;  dividend        2    4[COMRAM] unsigned int 
   589 ;;  divisor         2    6[COMRAM] unsigned int 
   590 ;; Auto vars:     Size  Location     Type
   591 ;;  quotient        2    8[COMRAM] unsigned int 
   592 ;;  counter         1   10[COMRAM] unsigned char 
   593 ;; Return value:  Size  Location     Type
   594 ;;                  2    4[COMRAM] unsigned int 
   595 ;; Registers used:
   596 ;;		wreg, status,2, status,0
   597 ;; Tracked objects:
   598 ;;		On entry : 0/0
   599 ;;		On exit  : 0/0
   600 ;;		Unchanged: 0/0
   601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   602 ;;      Params:         4       0       0       0       0       0       0       0       0
   603 ;;      Locals:         3       0       0       0       0       0       0       0       0
   604 ;;      Temps:          0       0       0       0       0       0       0       0       0
   605 ;;      Totals:         7       0       0       0       0       0       0       0       0
   606 ;;Total ram usage:        7 bytes
   607 ;; Hardware stack levels used:    1
   608 ;; Hardware stack levels required when called:    2
   609 ;; This function calls:
   610 ;;		Nothing
   611 ;; This function is called by:
   612 ;;		_main
   613 ;; This function uses a non-reentrant model
   614 ;;
   615                           
   616                           	psect	text2
   617  00020C                     __ptext2:
   618                           	callstack 0
   619  00020C                     ___lwdiv:
   620                           	callstack 28
   621  00020C  0E00               	movlw	0
   622  00020E  6E0A               	movwf	(___lwdiv@quotient+1)^0,c
   623  000210  0E00               	movlw	0
   624  000212  6E09               	movwf	___lwdiv@quotient^0,c
   625  000214  5007               	movf	___lwdiv@divisor^0,w,c
   626  000216  1008               	iorwf	(___lwdiv@divisor+1)^0,w,c
   627  000218  B4D8               	btfsc	status,2,c
   628  00021A  EF11  F001         	goto	u151
   629  00021E  EF13  F001         	goto	u150
   630  000222                     u151:
   631  000222  EF3B  F001         	goto	l562
   632  000226                     u150:
   633  000226  0E01               	movlw	1
   634  000228  6E0B               	movwf	___lwdiv@counter^0,c
   635  00022A  EF1B  F001         	goto	l872
   636  00022E                     l870:
   637  00022E  90D8               	bcf	status,0,c
   638  000230  3607               	rlcf	___lwdiv@divisor^0,f,c
   639  000232  3608               	rlcf	(___lwdiv@divisor+1)^0,f,c
   640  000234  2A0B               	incf	___lwdiv@counter^0,f,c
   641  000236                     l872:
   642  000236  AE08               	btfss	(___lwdiv@divisor+1)^0,7,c
   643  000238  EF20  F001         	goto	u161
   644  00023C  EF22  F001         	goto	u160
   645  000240                     u161:
   646  000240  EF17  F001         	goto	l870
   647  000244                     u160:
   648  000244                     l874:
   649  000244  90D8               	bcf	status,0,c
   650  000246  3609               	rlcf	___lwdiv@quotient^0,f,c
   651  000248  360A               	rlcf	(___lwdiv@quotient+1)^0,f,c
   652  00024A  5007               	movf	___lwdiv@divisor^0,w,c
   653  00024C  5C05               	subwf	___lwdiv@dividend^0,w,c
   654  00024E  5008               	movf	(___lwdiv@divisor+1)^0,w,c
   655  000250  5806               	subwfb	(___lwdiv@dividend+1)^0,w,c
   656  000252  A0D8               	btfss	status,0,c
   657  000254  EF2E  F001         	goto	u171
   658  000258  EF30  F001         	goto	u170
   659  00025C                     u171:
   660  00025C  EF35  F001         	goto	l882
   661  000260                     u170:
   662  000260  5007               	movf	___lwdiv@divisor^0,w,c
   663  000262  5E05               	subwf	___lwdiv@dividend^0,f,c
   664  000264  5008               	movf	(___lwdiv@divisor+1)^0,w,c
   665  000266  5A06               	subwfb	(___lwdiv@dividend+1)^0,f,c
   666  000268  8009               	bsf	___lwdiv@quotient^0,0,c
   667  00026A                     l882:
   668  00026A  90D8               	bcf	status,0,c
   669  00026C  3208               	rrcf	(___lwdiv@divisor+1)^0,f,c
   670  00026E  3207               	rrcf	___lwdiv@divisor^0,f,c
   671  000270  2E0B               	decfsz	___lwdiv@counter^0,f,c
   672  000272  EF22  F001         	goto	l874
   673  000276                     l562:
   674  000276  C009  F005         	movff	___lwdiv@quotient,?___lwdiv
   675  00027A  C00A  F006         	movff	___lwdiv@quotient+1,?___lwdiv+1
   676  00027E  0012               	return		;funcret
   677  000280                     __end_of___lwdiv:
   678                           	callstack 0
   679                           
   680 ;; *************** function _Int_Ext *****************
   681 ;; Defined at:
   682 ;;		line 7 in file "Interrupt.c"
   683 ;; Parameters:    Size  Location     Type
   684 ;;		None
   685 ;; Auto vars:     Size  Location     Type
   686 ;;		None
   687 ;; Return value:  Size  Location     Type
   688 ;;                  1    wreg      void 
   689 ;; Registers used:
   690 ;;		None
   691 ;; Tracked objects:
   692 ;;		On entry : 0/0
   693 ;;		On exit  : 0/0
   694 ;;		Unchanged: 0/0
   695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   696 ;;      Params:         0       0       0       0       0       0       0       0       0
   697 ;;      Locals:         0       0       0       0       0       0       0       0       0
   698 ;;      Temps:          0       0       0       0       0       0       0       0       0
   699 ;;      Totals:         0       0       0       0       0       0       0       0       0
   700 ;;Total ram usage:        0 bytes
   701 ;; Hardware stack levels used:    1
   702 ;; Hardware stack levels required when called:    2
   703 ;; This function calls:
   704 ;;		Nothing
   705 ;; This function is called by:
   706 ;;		_main
   707 ;; This function uses a non-reentrant model
   708 ;;
   709                           
   710                           	psect	text3
   711  000350                     __ptext3:
   712                           	callstack 0
   713  000350                     _Int_Ext:
   714                           	callstack 28
   715  000350                     
   716                           ;Interrupt.c: 8:     TRISBbits.RB0 = 1;
   717  000350  8093               	bsf	147,0,c	;volatile
   718                           
   719                           ;Interrupt.c: 9:     TRISBbits.RB1 = 1;
   720  000352  8293               	bsf	147,1,c	;volatile
   721                           
   722                           ;Interrupt.c: 10:     TRISBbits.RB2 = 1;
   723  000354  8493               	bsf	147,2,c	;volatile
   724                           
   725                           ;Interrupt.c: 11:     INTCONbits.INT0E = 1;
   726  000356  88F2               	bsf	242,4,c	;volatile
   727                           
   728                           ;Interrupt.c: 12:     INTCONbits.INT0F = 0;
   729  000358  92F2               	bcf	242,1,c	;volatile
   730                           
   731                           ;Interrupt.c: 13:     INTCON3bits.INT1E = 1;
   732  00035A  86F0               	bsf	240,3,c	;volatile
   733                           
   734                           ;Interrupt.c: 14:     INTCON3bits.INT2E = 1;
   735  00035C  88F0               	bsf	240,4,c	;volatile
   736                           
   737                           ;Interrupt.c: 15:     INTCON3bits.INT1F = 0;
   738  00035E  90F0               	bcf	240,0,c	;volatile
   739                           
   740                           ;Interrupt.c: 16:     INTCON3bits.INT2F = 0;
   741  000360  92F0               	bcf	240,1,c	;volatile
   742                           
   743                           ;Interrupt.c: 17:     INTCON3bits.INT1IP = 0;
   744  000362  9CF0               	bcf	240,6,c	;volatile
   745                           
   746                           ;Interrupt.c: 18:     INTCON3bits.INT2IP = 1;
   747  000364  8EF0               	bsf	240,7,c	;volatile
   748                           
   749                           ;Interrupt.c: 19:     INTCON2bits.INTEDG0 = 0;
   750  000366  9CF1               	bcf	241,6,c	;volatile
   751                           
   752                           ;Interrupt.c: 20:     INTCON2bits.INTEDG1 = 0;
   753  000368  9AF1               	bcf	241,5,c	;volatile
   754                           
   755                           ;Interrupt.c: 21:     INTCON2bits.INTEDG2 = 0;
   756  00036A  98F1               	bcf	241,4,c	;volatile
   757                           
   758                           ;Interrupt.c: 22:     RCONbits.IPEN = 1;
   759  00036C  8ED0               	bsf	208,7,c	;volatile
   760                           
   761                           ;Interrupt.c: 23:     INTCONbits.GIEH = 1;
   762  00036E  8EF2               	bsf	242,7,c	;volatile
   763                           
   764                           ;Interrupt.c: 24:     INTCONbits.GIEL = 1;
   765  000370  8CF2               	bsf	242,6,c	;volatile
   766  000372  0012               	return		;funcret
   767  000374                     __end_of_Int_Ext:
   768                           	callstack 0
   769                           
   770 ;; *************** function _INT1_Ext *****************
   771 ;; Defined at:
   772 ;;		line 39 in file "Interrupt.c"
   773 ;; Parameters:    Size  Location     Type
   774 ;;		None
   775 ;; Auto vars:     Size  Location     Type
   776 ;;		None
   777 ;; Return value:  Size  Location     Type
   778 ;;                  1    wreg      void 
   779 ;; Registers used:
   780 ;;		wreg, status,2, status,0
   781 ;; Tracked objects:
   782 ;;		On entry : 0/0
   783 ;;		On exit  : 0/0
   784 ;;		Unchanged: 0/0
   785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   786 ;;      Params:         0       0       0       0       0       0       0       0       0
   787 ;;      Locals:         0       0       0       0       0       0       0       0       0
   788 ;;      Temps:          4       0       0       0       0       0       0       0       0
   789 ;;      Totals:         4       0       0       0       0       0       0       0       0
   790 ;;Total ram usage:        4 bytes
   791 ;; Hardware stack levels used:    1
   792 ;; Hardware stack levels required when called:    1
   793 ;; This function calls:
   794 ;;		Nothing
   795 ;; This function is called by:
   796 ;;		Interrupt level 1
   797 ;; This function uses a non-reentrant model
   798 ;;
   799                           
   800                           	psect	intcodelo
   801  000018                     __pintcodelo:
   802                           	callstack 0
   803  000018                     _INT1_Ext:
   804                           	callstack 28
   805                           
   806                           ;incstack = 0
   807  000018  8022               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   808  00001A  CFD8 F002          	movff	status,??_INT1_Ext+1
   809  00001E  CFE8 F003          	movff	wreg,??_INT1_Ext+2
   810  000022  CFE0 F004          	movff	bsr,??_INT1_Ext+3
   811  000026                     
   812                           ;Interrupt.c: 41:     LATBbits.LATB0 = ~LATBbits.LATB0;
   813  000026  B08A               	btfsc	138,0,c	;volatile
   814  000028  EF18  F000         	goto	i1u14_21
   815  00002C  EF1B  F000         	goto	i1u14_20
   816  000030                     i1u14_21:
   817  000030  0E01               	movlw	1
   818  000032  EF1C  F000         	goto	i1u14_26
   819  000036                     i1u14_20:
   820  000036  0E00               	movlw	0
   821  000038                     i1u14_26:
   822  000038  0AFF               	xorlw	255
   823  00003A  6E01               	movwf	??_INT1_Ext^0,c
   824  00003C  508A               	movf	138,w,c	;volatile
   825  00003E  1801               	xorwf	??_INT1_Ext^0,w,c
   826  000040  0BFE               	andlw	-2
   827  000042  1801               	xorwf	??_INT1_Ext^0,w,c
   828  000044  6E8A               	movwf	138,c	;volatile
   829  000046                     
   830                           ;Interrupt.c: 42:     INTCON3bits.INT1F = 0;
   831  000046  90F0               	bcf	240,0,c	;volatile
   832  000048  C004  FFE0         	movff	??_INT1_Ext+3,bsr
   833  00004C  C003  FFE8         	movff	??_INT1_Ext+2,wreg
   834  000050  C002  FFD8         	movff	??_INT1_Ext+1,status
   835  000054  9022               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   836  000056  0010               	retfie	
   837  000058                     __end_of_INT1_Ext:
   838                           	callstack 0
   839                           
   840 ;; *************** function _INT02_Ext *****************
   841 ;; Defined at:
   842 ;;		line 27 in file "Interrupt.c"
   843 ;; Parameters:    Size  Location     Type
   844 ;;		None
   845 ;; Auto vars:     Size  Location     Type
   846 ;;		None
   847 ;; Return value:  Size  Location     Type
   848 ;;                  1    wreg      void 
   849 ;; Registers used:
   850 ;;		wreg, status,2
   851 ;; Tracked objects:
   852 ;;		On entry : 0/0
   853 ;;		On exit  : 0/0
   854 ;;		Unchanged: 0/0
   855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   856 ;;      Params:         0       0       0       0       0       0       0       0       0
   857 ;;      Locals:         0       0       0       0       0       0       0       0       0
   858 ;;      Temps:          0       0       0       0       0       0       0       0       0
   859 ;;      Totals:         0       0       0       0       0       0       0       0       0
   860 ;;Total ram usage:        0 bytes
   861 ;; Hardware stack levels used:    1
   862 ;; This function calls:
   863 ;;		Nothing
   864 ;; This function is called by:
   865 ;;		Interrupt level 2
   866 ;; This function uses a non-reentrant model
   867 ;;
   868                           
   869                           	psect	intcode
   870  000008                     __pintcode:
   871                           	callstack 0
   872  000008                     _INT02_Ext:
   873                           	callstack 28
   874                           
   875                           ;incstack = 0
   876  000008  8222               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   877  00000A  ED8D  F001         	call	int_func,f	;refresh shadow registers
   878                           
   879                           	psect	intcode_body
   880  00031A                     __pintcode_body:
   881                           	callstack 28
   882  00031A                     int_func:
   883                           	callstack 28
   884  00031A  0006               	pop		; remove dummy address from shadow register refresh
   885  00031C                     
   886                           ;Interrupt.c: 28:     if(INTCONbits.INT0F){
   887  00031C  A2F2               	btfss	242,1,c	;volatile
   888  00031E  EF93  F001         	goto	i2u12_41
   889  000322  EF95  F001         	goto	i2u12_40
   890  000326                     i2u12_41:
   891  000326  EF9A  F001         	goto	i2l854
   892  00032A                     i2u12_40:
   893  00032A                     
   894                           ;Interrupt.c: 29:         x = 2;
   895  00032A  0E00               	movlw	0
   896  00032C  6E1B               	movwf	(_x+1)^0,c
   897  00032E  0E02               	movlw	2
   898  000330  6E1A               	movwf	_x^0,c
   899  000332                     
   900                           ;Interrupt.c: 30:         INTCONbits.INT0F = 0;
   901  000332  92F2               	bcf	242,1,c	;volatile
   902  000334                     i2l854:
   903                           
   904                           ;Interrupt.c: 32:     if(INTCON3bits.INT2F){
   905  000334  A2F0               	btfss	240,1,c	;volatile
   906  000336  EF9F  F001         	goto	i2u13_41
   907  00033A  EFA1  F001         	goto	i2u13_40
   908  00033E                     i2u13_41:
   909  00033E  EFA6  F001         	goto	i2l63
   910  000342                     i2u13_40:
   911  000342                     
   912                           ;Interrupt.c: 33:         x = 1;
   913  000342  0E00               	movlw	0
   914  000344  6E1B               	movwf	(_x+1)^0,c
   915  000346  0E01               	movlw	1
   916  000348  6E1A               	movwf	_x^0,c
   917  00034A                     
   918                           ;Interrupt.c: 34:         INTCON3bits.INT2F = 0;
   919  00034A  92F0               	bcf	240,1,c	;volatile
   920  00034C                     i2l63:
   921  00034C  9222               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   922  00034E  0011               	retfie		f
   923  000350                     __end_of_INT02_Ext:
   924                           	callstack 0
   925  0000                     
   926                           	psect	rparam
   927  0000                     
   928                           	psect	temp
   929  000022                     btemp:
   930                           	callstack 0
   931  000022                     	ds	1
   932  0000                     int$flags	set	btemp
   933  0000                     wtemp8	set	btemp+1
   934  0000                     ttemp5	set	btemp+1
   935  0000                     ttemp6	set	btemp+4
   936  0000                     ttemp7	set	btemp+8
   937                           
   938                           	psect	idloc
   939                           
   940                           ;Config register IDLOC0 @ 0x200000
   941                           ;	unspecified, using default values
   942  200000                     	org	2097152
   943  200000  FF                 	db	255
   944                           
   945                           ;Config register IDLOC1 @ 0x200001
   946                           ;	unspecified, using default values
   947  200001                     	org	2097153
   948  200001  FF                 	db	255
   949                           
   950                           ;Config register IDLOC2 @ 0x200002
   951                           ;	unspecified, using default values
   952  200002                     	org	2097154
   953  200002  FF                 	db	255
   954                           
   955                           ;Config register IDLOC3 @ 0x200003
   956                           ;	unspecified, using default values
   957  200003                     	org	2097155
   958  200003  FF                 	db	255
   959                           
   960                           ;Config register IDLOC4 @ 0x200004
   961                           ;	unspecified, using default values
   962  200004                     	org	2097156
   963  200004  FF                 	db	255
   964                           
   965                           ;Config register IDLOC5 @ 0x200005
   966                           ;	unspecified, using default values
   967  200005                     	org	2097157
   968  200005  FF                 	db	255
   969                           
   970                           ;Config register IDLOC6 @ 0x200006
   971                           ;	unspecified, using default values
   972  200006                     	org	2097158
   973  200006  FF                 	db	255
   974                           
   975                           ;Config register IDLOC7 @ 0x200007
   976                           ;	unspecified, using default values
   977  200007                     	org	2097159
   978  200007  FF                 	db	255
   979                           
   980                           	psect	config
   981                           
   982                           ;Config register CONFIG1L @ 0x300000
   983                           ;	PLL Prescaler Selection bits
   984                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   985                           ;	System Clock Postscaler Selection bits
   986                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   987                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   988                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   989  300000                     	org	3145728
   990  300000  00                 	db	0
   991                           
   992                           ;Config register CONFIG1H @ 0x300001
   993                           ;	Oscillator Selection bits
   994                           ;	FOSC = HS, HS oscillator (HS)
   995                           ;	Fail-Safe Clock Monitor Enable bit
   996                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   997                           ;	Internal/External Oscillator Switchover bit
   998                           ;	IESO = OFF, Oscillator Switchover mode disabled
   999  300001                     	org	3145729
  1000  300001  0C                 	db	12
  1001                           
  1002                           ;Config register CONFIG2L @ 0x300002
  1003                           ;	Power-up Timer Enable bit
  1004                           ;	PWRT = ON, PWRT enabled
  1005                           ;	Brown-out Reset Enable bits
  1006                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  1007                           ;	Brown-out Reset Voltage bits
  1008                           ;	BORV = 3, Minimum setting 2.05V
  1009                           ;	USB Voltage Regulator Enable bit
  1010                           ;	VREGEN = OFF, USB voltage regulator disabled
  1011  300002                     	org	3145730
  1012  300002  18                 	db	24
  1013                           
  1014                           ;Config register CONFIG2H @ 0x300003
  1015                           ;	Watchdog Timer Enable bit
  1016                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1017                           ;	Watchdog Timer Postscale Select bits
  1018                           ;	WDTPS = 32768, 1:32768
  1019  300003                     	org	3145731
  1020  300003  1E                 	db	30
  1021                           
  1022                           ; Padding undefined space
  1023  300004                     	org	3145732
  1024  300004  FF                 	db	255
  1025                           
  1026                           ;Config register CONFIG3H @ 0x300005
  1027                           ;	CCP2 MUX bit
  1028                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1029                           ;	PORTB A/D Enable bit
  1030                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1031                           ;	Low-Power Timer 1 Oscillator Enable bit
  1032                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1033                           ;	MCLR Pin Enable bit
  1034                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1035  300005                     	org	3145733
  1036  300005  81                 	db	129
  1037                           
  1038                           ;Config register CONFIG4L @ 0x300006
  1039                           ;	Stack Full/Underflow Reset Enable bit
  1040                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  1041                           ;	Single-Supply ICSP Enable bit
  1042                           ;	LVP = OFF, Single-Supply ICSP disabled
  1043                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1044                           ;	ICPRT = OFF, ICPORT disabled
  1045                           ;	Extended Instruction Set Enable bit
  1046                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1047                           ;	Background Debugger Enable bit
  1048                           ;	DEBUG = 0x1, unprogrammed default
  1049  300006                     	org	3145734
  1050  300006  80                 	db	128
  1051                           
  1052                           ; Padding undefined space
  1053  300007                     	org	3145735
  1054  300007  FF                 	db	255
  1055                           
  1056                           ;Config register CONFIG5L @ 0x300008
  1057                           ;	Code Protection bit
  1058                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1059                           ;	Code Protection bit
  1060                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1061                           ;	Code Protection bit
  1062                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1063                           ;	Code Protection bit
  1064                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1065  300008                     	org	3145736
  1066  300008  0F                 	db	15
  1067                           
  1068                           ;Config register CONFIG5H @ 0x300009
  1069                           ;	Boot Block Code Protection bit
  1070                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1071                           ;	Data EEPROM Code Protection bit
  1072                           ;	CPD = OFF, Data EEPROM is not code-protected
  1073  300009                     	org	3145737
  1074  300009  C0                 	db	192
  1075                           
  1076                           ;Config register CONFIG6L @ 0x30000A
  1077                           ;	Write Protection bit
  1078                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1079                           ;	Write Protection bit
  1080                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1081                           ;	Write Protection bit
  1082                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1083                           ;	Write Protection bit
  1084                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1085  30000A                     	org	3145738
  1086  30000A  0F                 	db	15
  1087                           
  1088                           ;Config register CONFIG6H @ 0x30000B
  1089                           ;	Configuration Register Write Protection bit
  1090                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1091                           ;	Boot Block Write Protection bit
  1092                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1093                           ;	Data EEPROM Write Protection bit
  1094                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1095  30000B                     	org	3145739
  1096  30000B  E0                 	db	224
  1097                           
  1098                           ;Config register CONFIG7L @ 0x30000C
  1099                           ;	Table Read Protection bit
  1100                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1101                           ;	Table Read Protection bit
  1102                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1103                           ;	Table Read Protection bit
  1104                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1105                           ;	Table Read Protection bit
  1106                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1107  30000C                     	org	3145740
  1108  30000C  0F                 	db	15
  1109                           
  1110                           ;Config register CONFIG7H @ 0x30000D
  1111                           ;	Boot Block Table Read Protection bit
  1112                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1113  30000D                     	org	3145741
  1114  30000D  40                 	db	64
  1115                           tosu	equ	0xFFF
  1116                           tosh	equ	0xFFE
  1117                           tosl	equ	0xFFD
  1118                           stkptr	equ	0xFFC
  1119                           pclatu	equ	0xFFB
  1120                           pclath	equ	0xFFA
  1121                           pcl	equ	0xFF9
  1122                           tblptru	equ	0xFF8
  1123                           tblptrh	equ	0xFF7
  1124                           tblptrl	equ	0xFF6
  1125                           tablat	equ	0xFF5
  1126                           prodh	equ	0xFF4
  1127                           prodl	equ	0xFF3
  1128                           indf0	equ	0xFEF
  1129                           postinc0	equ	0xFEE
  1130                           postdec0	equ	0xFED
  1131                           preinc0	equ	0xFEC
  1132                           plusw0	equ	0xFEB
  1133                           fsr0h	equ	0xFEA
  1134                           fsr0l	equ	0xFE9
  1135                           wreg	equ	0xFE8
  1136                           indf1	equ	0xFE7
  1137                           postinc1	equ	0xFE6
  1138                           postdec1	equ	0xFE5
  1139                           preinc1	equ	0xFE4
  1140                           plusw1	equ	0xFE3
  1141                           fsr1h	equ	0xFE2
  1142                           fsr1l	equ	0xFE1
  1143                           bsr	equ	0xFE0
  1144                           indf2	equ	0xFDF
  1145                           postinc2	equ	0xFDE
  1146                           postdec2	equ	0xFDD
  1147                           preinc2	equ	0xFDC
  1148                           plusw2	equ	0xFDB
  1149                           fsr2h	equ	0xFDA
  1150                           fsr2l	equ	0xFD9
  1151                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     15      33
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___lwdiv

Critical Paths under _INT1_Ext in COMRAM

    None.

Critical Paths under _INT02_Ext in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_Ext in BANK0

    None.

Critical Paths under _INT02_Ext in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_Ext in BANK1

    None.

Critical Paths under _INT02_Ext in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_Ext in BANK2

    None.

Critical Paths under _INT02_Ext in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_Ext in BANK3

    None.

Critical Paths under _INT02_Ext in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_Ext in BANK4

    None.

Critical Paths under _INT02_Ext in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_Ext in BANK5

    None.

Critical Paths under _INT02_Ext in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_Ext in BANK6

    None.

Critical Paths under _INT02_Ext in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_Ext in BANK7

    None.

Critical Paths under _INT02_Ext in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1109
                                             11 COMRAM     4     4      0
                            _Int_Ext
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     463
                                              4 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     466
                                              4 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _Int_Ext                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _INT1_Ext                                             4     4      0       0
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INT02_Ext                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Int_Ext
   ___lwdiv
   ___lwmod

 _INT1_Ext (ROOT)

 _INT02_Ext (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      F      21       1       35.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      21      20        0.0%
DATA                 0      0      21       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sat Dec 19 15:17:32 2020

                      _x 001A                       l56 0372                       bsr 000FE0  
                    l562 0276                      l900 02D4                      l572 02DA  
                    l902 005C                      l744 0350                      l920 00B4  
                    l904 0068                      l569 027E                      l930 011A  
                    l922 00CA                      l914 0086                      l906 006C  
                    l579 02E2                      l940 0160                      l932 011C  
                    l924 00CC                      l916 00A2                      l908 007E  
                    l870 022E                      l950 01B8                      l942 0162  
                    l934 012C                      l926 00E8                      l918 00A4  
                    l880 0268                      l872 0236                      l864 020C  
                    l960 01D2                      l952 01BA                      l944 0188  
                    l936 0142                      l928 00FE                      l882 026A  
                    l874 0244                      l866 0214                      l890 029A  
                    l962 01EA                      l946 018A                      l938 0144  
                    l884 0270                      l876 024A                      l868 0226  
                    l892 02A2                      l964 01EE                      l948 01A4  
                    l878 0260                      l894 02B0                      l886 0280  
                    l958 01C2                      l896 02C6                      l888 0292  
                    l898 02CE                      u200 02C6                      u201 02C2  
                    u210 007E                      u211 007A                      u220 00FE  
                    u221 00FA                      u150 0226                      u230 01A4  
                    u151 0222                      u231 01A0                      u160 0244  
                    u240 01B8                      u161 0240                      u241 01B4  
                    u170 0260                      u250 0204                      u171 025C  
                    u251 0200                      u180 0292                      u181 028E  
                    u190 02B0                      u191 02AC                      u267 00BE  
                    u277 0136                      u287 017C                      u297 01DC  
                    _dec 001E                      _cen 001C                      _uni 0020  
                    wreg 000FE8                     _LATD 000F8C                     i1l68 0048  
                   i2l63 034C       __size_of_INT02_Ext 0348                     _main 005C  
                   indf2 000FDF                     fsr1l 000FE1                     fsr2l 000FD9  
                   btemp 0022                     start 0058             ___param_bank 000000  
        __end_of_Int_Ext 0374         __end_of_INT1_Ext 0058                    ?_main 0001  
        __end_of___lwdiv 0280          __end_of___lwmod 02E4                    i1l860 0026  
                  i1l862 0046                    i2l850 032A                    i2l852 0332  
                  i2l854 0334                    i2l856 0342                    i2l848 031C  
                  i2l858 034A                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISD 000F95                    main@i 000E                    tablat 000FF5  
                  ttemp5 0023                    ttemp6 0026                    ttemp7 002A  
                  status 000FD8                    wtemp8 0023          __initialization 02E4  
           __end_of_main 020C        __end_of_INT02_Ext 0350                   ??_main 000C  
          __activetblptr 000000                ??_Int_Ext 0005                ??___lwdiv 0009  
              ??___lwmod 0009                   clear_0 030A             __pdataCOMRAM 0010  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 0310                ?_INT1_Ext 0001  
          ___rparam_used 000001           __pcstackCOMRAM 0001               ??_INT1_Ext 0001  
                i1u14_20 0036                  i1u14_21 0030                  i1u14_26 0038  
                i2u12_40 032A                  i2u12_41 0326                  i2u13_40 0342  
                i2u13_41 033E                  _Int_Ext 0350                  __Hparam 0000  
                __Lparam 0000                  ___lwdiv 020C                  ___lwmod 0280  
                __pcinit 02E4                  __ramtop 0800                  __ptext0 005C  
                __ptext1 0280                  __ptext2 020C                  __ptext3 0350  
                _display 0010                _INT02_Ext 0008           __pintcode_body 031A  
   end_of_initialization 0310                  int_func 031A                  postdec1 000FE5  
                postinc0 000FEE               ?_INT02_Ext 0001                _TRISBbits 000F93  
      __size_of_INT1_Ext 0040            __pidataCOMRAM 0374      start_initialization 02E4  
            __pbssCOMRAM 001A              ??_INT02_Ext 0001                 ?_Int_Ext 0001  
       ___lwdiv@dividend 0005                __pintcode 0008                 ?___lwdiv 0005  
               ?___lwmod 0005              __pintcodelo 0018         ___lwdiv@quotient 0009  
               _LATAbits 000F89                 _LATBbits 000F8A                 _INT1_Ext 0018  
               _RCONbits 000FD0              _INTCON2bits 000FF1              _INTCON3bits 000FF0  
              copy_data0 02F8                 __Hrparam 0000         __size_of_Int_Ext 0024  
               __Lrparam 0000         __size_of___lwdiv 0074         __size_of___lwmod 0064  
        ___lwdiv@divisor 0007          ___lwdiv@counter 000B            __size_of_main 01B0  
               int$flags 0022               _INTCONbits 000FF2                 intlevel1 0000  
               intlevel2 0000         ___lwmod@dividend 0005          ___lwmod@divisor 0007  
        ___lwmod@counter 0009  
