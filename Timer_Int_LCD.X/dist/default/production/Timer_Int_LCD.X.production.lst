

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sun Dec 20 15:55:02 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    23                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    25  0000                     
    26                           ; Version 2.20
    27                           ; Generated 12/02/2020 GMT
    28                           ; 
    29                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F4550 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     _LATD	set	3980
    61  0000                     _TRISD	set	3989
    62  0000                     _TMR0L	set	4054
    63  0000                     _LATDbits	set	3980
    64  0000                     _T0CONbits	set	4053
    65  0000                     _RCONbits	set	4048
    66  0000                     _INTCON2bits	set	4081
    67  0000                     _INTCONbits	set	4082
    68  0000                     _TRISBbits	set	3987
    69                           
    70                           	psect	smallconst
    71  000800                     __psmallconst:
    72                           	callstack 0
    73  000800  00                 	db	0
    74  000801                     STR_1:
    75  000801  48                 	db	72	;'H'
    76  000802  6F                 	db	111	;'o'
    77  000803  6C                 	db	108	;'l'
    78  000804  61                 	db	97	;'a'
    79  000805  20                 	db	32
    80  000806  3A                 	db	58	;':'
    81  000807  44                 	db	68	;'D'
    82  000808  00                 	db	0
    83  000809                     STR_2:
    84  000809  57                 	db	87	;'W'
    85  00080A  45                 	db	69	;'E'
    86  00080B  4C                 	db	76	;'L'
    87  00080C  53                 	db	83	;'S'
    88  00080D  00                 	db	0
    89  00080E  00                 	db	0	; dummy byte at the end
    90  0000                     
    91                           ; #config settings
    92                           
    93                           	psect	cinit
    94  000AA6                     __pcinit:
    95                           	callstack 0
    96  000AA6                     start_initialization:
    97                           	callstack 0
    98  000AA6                     __initialization:
    99                           	callstack 0
   100                           
   101                           ; Clear objects allocated to COMRAM (4 bytes)
   102  000AA6  6A0E               	clrf	(__pbssCOMRAM+3)& (0+255),c
   103  000AA8  6A0D               	clrf	(__pbssCOMRAM+2)& (0+255),c
   104  000AAA  6A0C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   105  000AAC  6A0B               	clrf	__pbssCOMRAM& (0+255),c
   106  000AAE                     end_of_initialization:
   107                           	callstack 0
   108  000AAE                     __end_of__initialization:
   109                           	callstack 0
   110  000AAE  900F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   111  000AB0  920F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   112  000AB2  0E00               	movlw	low (__Lsmallconst shr (0+16))
   113  000AB4  6EF8               	movwf	tblptru,c
   114  000AB6  0E08               	movlw	high __Lsmallconst
   115  000AB8  6EF7               	movwf	tblptrh,c
   116  000ABA  0100               	movlb	0
   117  000ABC  EF08  F004         	goto	_main	;jump to C main() function
   118                           
   119                           	psect	bssCOMRAM
   120  00000B                     __pbssCOMRAM:
   121                           	callstack 0
   122  00000B                     _i:
   123                           	callstack 0
   124  00000B                     	ds	2
   125  00000D                     _x:
   126                           	callstack 0
   127  00000D                     	ds	2
   128                           
   129                           	psect	cstackCOMRAM
   130  000001                     __pcstackCOMRAM:
   131                           	callstack 0
   132  000001                     ??_TMR0_Ext:
   133  000001                     
   134                           ; 1 bytes @ 0x0
   135  000001                     	ds	4
   136  000005                     ??_LCD_Comando:
   137  000005                     ??_LCD_Data:
   138                           
   139                           ; 1 bytes @ 0x4
   140  000005                     	ds	1
   141  000006                     LCD_Comando@cmd:
   142                           	callstack 0
   143  000006                     LCD_Data@data:
   144                           	callstack 0
   145                           
   146                           ; 1 bytes @ 0x5
   147  000006                     	ds	1
   148  000007                     ??_LCD_Init:
   149  000007                     LCD_XY@x:
   150                           	callstack 0
   151  000007                     LCD_Cadena@dato:
   152                           	callstack 0
   153                           
   154                           ; 2 bytes @ 0x6
   155  000007                     	ds	2
   156  000009                     LCD_XY@y:
   157                           	callstack 0
   158                           
   159                           ; 2 bytes @ 0x8
   160  000009                     	ds	2
   161  00000B                     
   162                           ; 1 bytes @ 0xA
   163 ;;
   164 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   165 ;;
   166 ;; *************** function _main *****************
   167 ;; Defined at:
   168 ;;		line 17 in file "Programa_principal.c"
   169 ;; Parameters:    Size  Location     Type
   170 ;;		None
   171 ;; Auto vars:     Size  Location     Type
   172 ;;		None
   173 ;; Return value:  Size  Location     Type
   174 ;;                  1    wreg      void 
   175 ;; Registers used:
   176 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   177 ;; Tracked objects:
   178 ;;		On entry : 0/0
   179 ;;		On exit  : 0/0
   180 ;;		Unchanged: 0/0
   181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   182 ;;      Params:         0       0       0       0       0       0       0       0       0
   183 ;;      Locals:         0       0       0       0       0       0       0       0       0
   184 ;;      Temps:          0       0       0       0       0       0       0       0       0
   185 ;;      Totals:         0       0       0       0       0       0       0       0       0
   186 ;;Total ram usage:        0 bytes
   187 ;; Hardware stack levels required when called:    4
   188 ;; This function calls:
   189 ;;		_Int_Ext
   190 ;;		_LCD_Cadena
   191 ;;		_LCD_Comando
   192 ;;		_LCD_Init
   193 ;;		_LCD_XY
   194 ;;		_Timer0_Init
   195 ;; This function is called by:
   196 ;;		Startup code after reset
   197 ;; This function uses a non-reentrant model
   198 ;;
   199                           
   200                           	psect	text0
   201  000810                     __ptext0:
   202                           	callstack 0
   203  000810                     _main:
   204                           	callstack 27
   205  000810                     
   206                           ;Programa_principal.c: 18:     TRISD = 0x00;
   207  000810  0E00               	movlw	0
   208  000812  6E95               	movwf	149,c	;volatile
   209  000814                     
   210                           ;Programa_principal.c: 19:     Timer0_Init();
   211  000814  EC60  F005         	call	_Timer0_Init	;wreg free
   212  000818                     
   213                           ;Programa_principal.c: 20:     LCD_Init();
   214  000818  EC53  F004         	call	_LCD_Init	;wreg free
   215  00081C                     
   216                           ;Programa_principal.c: 21:     Int_Ext();
   217  00081C  EC6C  F005         	call	_Int_Ext	;wreg free
   218  000820                     l1034:
   219                           
   220                           ;Programa_principal.c: 23:         if (x == 1){
   221  000820  040D               	decf	_x^0,w,c
   222  000822  100E               	iorwf	(_x+1)^0,w,c
   223  000824  A4D8               	btfss	status,2,c
   224  000826  EF17  F004         	goto	u141
   225  00082A  EF19  F004         	goto	u140
   226  00082E                     u141:
   227  00082E  EF29  F004         	goto	l1040
   228  000832                     u140:
   229  000832                     
   230                           ;Programa_principal.c: 24:             LCD_XY(1,5);
   231  000832  0E00               	movlw	0
   232  000834  6E08               	movwf	(LCD_XY@x+1)^0,c
   233  000836  0E01               	movlw	1
   234  000838  6E07               	movwf	LCD_XY@x^0,c
   235  00083A  0E00               	movlw	0
   236  00083C  6E0A               	movwf	(LCD_XY@y+1)^0,c
   237  00083E  0E05               	movlw	5
   238  000840  6E09               	movwf	LCD_XY@y^0,c
   239  000842  EC3B  F005         	call	_LCD_XY	;wreg free
   240  000846                     
   241                           ;Programa_principal.c: 25:             LCD_Cadena("Hola :D");
   242  000846  0E01               	movlw	low STR_1
   243  000848  6E07               	movwf	LCD_Cadena@dato^0,c
   244  00084A  0E08               	movlw	high STR_1
   245  00084C  6E08               	movwf	(LCD_Cadena@dato+1)^0,c
   246  00084E  EC1C  F005         	call	_LCD_Cadena	;wreg free
   247  000852                     l1040:
   248                           
   249                           ;Programa_principal.c: 27:         if( x == 2){
   250  000852  0E02               	movlw	2
   251  000854  180D               	xorwf	_x^0,w,c
   252  000856  100E               	iorwf	(_x+1)^0,w,c
   253  000858  A4D8               	btfss	status,2,c
   254  00085A  EF31  F004         	goto	u151
   255  00085E  EF33  F004         	goto	u150
   256  000862                     u151:
   257  000862  EF43  F004         	goto	l1046
   258  000866                     u150:
   259  000866                     
   260                           ;Programa_principal.c: 28:             LCD_XY(0,9);
   261  000866  0E00               	movlw	0
   262  000868  6E08               	movwf	(LCD_XY@x+1)^0,c
   263  00086A  0E00               	movlw	0
   264  00086C  6E07               	movwf	LCD_XY@x^0,c
   265  00086E  0E00               	movlw	0
   266  000870  6E0A               	movwf	(LCD_XY@y+1)^0,c
   267  000872  0E09               	movlw	9
   268  000874  6E09               	movwf	LCD_XY@y^0,c
   269  000876  EC3B  F005         	call	_LCD_XY	;wreg free
   270  00087A                     
   271                           ;Programa_principal.c: 29:             LCD_Cadena("WELS");
   272  00087A  0E09               	movlw	low STR_2
   273  00087C  6E07               	movwf	LCD_Cadena@dato^0,c
   274  00087E  0E08               	movlw	high STR_2
   275  000880  6E08               	movwf	(LCD_Cadena@dato+1)^0,c
   276  000882  EC1C  F005         	call	_LCD_Cadena	;wreg free
   277  000886                     l1046:
   278                           
   279                           ;Programa_principal.c: 31:         if(x == 0){
   280  000886  500D               	movf	_x^0,w,c
   281  000888  100E               	iorwf	(_x+1)^0,w,c
   282  00088A  A4D8               	btfss	status,2,c
   283  00088C  EF4A  F004         	goto	u161
   284  000890  EF4C  F004         	goto	u160
   285  000894                     u161:
   286  000894  EF10  F004         	goto	l1034
   287  000898                     u160:
   288  000898                     
   289                           ;Programa_principal.c: 32:             LCD_Comando(0x01);
   290  000898  0E01               	movlw	1
   291  00089A  EC8E  F004         	call	_LCD_Comando
   292  00089E  EF10  F004         	goto	l1034
   293  0008A2  EF3E  F000         	goto	start
   294  0008A6                     __end_of_main:
   295                           	callstack 0
   296                           
   297 ;; *************** function _Timer0_Init *****************
   298 ;; Defined at:
   299 ;;		line 24 in file "Timer0_Libreria.c"
   300 ;; Parameters:    Size  Location     Type
   301 ;;		None
   302 ;; Auto vars:     Size  Location     Type
   303 ;;		None
   304 ;; Return value:  Size  Location     Type
   305 ;;                  1    wreg      void 
   306 ;; Registers used:
   307 ;;		wreg, status,2
   308 ;; Tracked objects:
   309 ;;		On entry : 0/0
   310 ;;		On exit  : 0/0
   311 ;;		Unchanged: 0/0
   312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   313 ;;      Params:         0       0       0       0       0       0       0       0       0
   314 ;;      Locals:         0       0       0       0       0       0       0       0       0
   315 ;;      Temps:          0       0       0       0       0       0       0       0       0
   316 ;;      Totals:         0       0       0       0       0       0       0       0       0
   317 ;;Total ram usage:        0 bytes
   318 ;; Hardware stack levels used:    1
   319 ;; Hardware stack levels required when called:    2
   320 ;; This function calls:
   321 ;;		Nothing
   322 ;; This function is called by:
   323 ;;		_main
   324 ;; This function uses a non-reentrant model
   325 ;;
   326                           
   327                           	psect	text1
   328  000AC0                     __ptext1:
   329                           	callstack 0
   330  000AC0                     _Timer0_Init:
   331                           	callstack 28
   332  000AC0                     
   333                           ;Timer0_Libreria.c: 25:     T0CONbits.T08BIT = 1;
   334  000AC0  8CD5               	bsf	213,6,c	;volatile
   335                           
   336                           ;Timer0_Libreria.c: 26:     T0CONbits.T0CS = 0;
   337  000AC2  9AD5               	bcf	213,5,c	;volatile
   338                           
   339                           ;Timer0_Libreria.c: 27:     T0CONbits.PSA = 0;
   340  000AC4  96D5               	bcf	213,3,c	;volatile
   341  000AC6                     
   342                           ;Timer0_Libreria.c: 28:     T0CONbits.T0PS = 0b111;
   343  000AC6  0E07               	movlw	7
   344  000AC8  12D5               	iorwf	213,f,c	;volatile
   345                           
   346                           ;Timer0_Libreria.c: 29:     TMR0L = 60;
   347  000ACA  0E3C               	movlw	60
   348  000ACC  6ED6               	movwf	214,c	;volatile
   349  000ACE                     
   350                           ;Timer0_Libreria.c: 30:     INTCONbits.TMR0IE = 1;
   351  000ACE  8AF2               	bsf	242,5,c	;volatile
   352  000AD0                     
   353                           ;Timer0_Libreria.c: 31:     INTCONbits.TMR0IF = 0;
   354  000AD0  94F2               	bcf	242,2,c	;volatile
   355  000AD2                     
   356                           ;Timer0_Libreria.c: 32:     INTCON2bits.TMR0IP = 0;
   357  000AD2  94F1               	bcf	241,2,c	;volatile
   358  000AD4                     
   359                           ;Timer0_Libreria.c: 33:     T0CONbits.TMR0ON = 0;
   360  000AD4  9ED5               	bcf	213,7,c	;volatile
   361  000AD6  0012               	return		;funcret
   362  000AD8                     __end_of_Timer0_Init:
   363                           	callstack 0
   364                           
   365 ;; *************** function _LCD_XY *****************
   366 ;; Defined at:
   367 ;;		line 87 in file "LCD_Libreria.c"
   368 ;; Parameters:    Size  Location     Type
   369 ;;  x               2    6[COMRAM] int 
   370 ;;  y               2    8[COMRAM] int 
   371 ;; Auto vars:     Size  Location     Type
   372 ;;		None
   373 ;; Return value:  Size  Location     Type
   374 ;;                  1    wreg      void 
   375 ;; Registers used:
   376 ;;		wreg, status,2, status,0, cstack
   377 ;; Tracked objects:
   378 ;;		On entry : 0/0
   379 ;;		On exit  : 0/0
   380 ;;		Unchanged: 0/0
   381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   382 ;;      Params:         4       0       0       0       0       0       0       0       0
   383 ;;      Locals:         0       0       0       0       0       0       0       0       0
   384 ;;      Temps:          0       0       0       0       0       0       0       0       0
   385 ;;      Totals:         4       0       0       0       0       0       0       0       0
   386 ;;Total ram usage:        4 bytes
   387 ;; Hardware stack levels used:    1
   388 ;; Hardware stack levels required when called:    3
   389 ;; This function calls:
   390 ;;		_LCD_Comando
   391 ;; This function is called by:
   392 ;;		_main
   393 ;; This function uses a non-reentrant model
   394 ;;
   395                           
   396                           	psect	text2
   397  000A76                     __ptext2:
   398                           	callstack 0
   399  000A76                     _LCD_XY:
   400                           	callstack 27
   401  000A76                     
   402                           ;LCD_Libreria.c: 88:     if(x>0){
   403  000A76  BE08               	btfsc	(LCD_XY@x+1)^0,7,c
   404  000A78  EF46  F005         	goto	u101
   405  000A7C  5008               	movf	(LCD_XY@x+1)^0,w,c
   406  000A7E  E108               	bnz	u100
   407  000A80  0407               	decf	LCD_XY@x^0,w,c
   408  000A82  A0D8               	btfss	status,0,c
   409  000A84  EF46  F005         	goto	u101
   410  000A88  EF48  F005         	goto	u100
   411  000A8C                     u101:
   412  000A8C  EF4E  F005         	goto	l990
   413  000A90                     u100:
   414  000A90                     
   415                           ;LCD_Libreria.c: 89:         LCD_Comando(0xC0+y);
   416  000A90  5009               	movf	LCD_XY@y^0,w,c
   417  000A92  0FC0               	addlw	192
   418  000A94  EC8E  F004         	call	_LCD_Comando
   419                           
   420                           ;LCD_Libreria.c: 90:     }
   421  000A98  EF52  F005         	goto	l58
   422  000A9C                     l990:
   423                           
   424                           ;LCD_Libreria.c: 92:         LCD_Comando(0x80+y);
   425  000A9C  5009               	movf	LCD_XY@y^0,w,c
   426  000A9E  0F80               	addlw	128
   427  000AA0  EC8E  F004         	call	_LCD_Comando
   428  000AA4                     l58:
   429  000AA4  0012               	return		;funcret
   430  000AA6                     __end_of_LCD_XY:
   431                           	callstack 0
   432                           
   433 ;; *************** function _LCD_Init *****************
   434 ;; Defined at:
   435 ;;		line 6 in file "LCD_Libreria.c"
   436 ;; Parameters:    Size  Location     Type
   437 ;;		None
   438 ;; Auto vars:     Size  Location     Type
   439 ;;		None
   440 ;; Return value:  Size  Location     Type
   441 ;;                  1    wreg      void 
   442 ;; Registers used:
   443 ;;		wreg, status,2, status,0, cstack
   444 ;; Tracked objects:
   445 ;;		On entry : 0/0
   446 ;;		On exit  : 0/0
   447 ;;		Unchanged: 0/0
   448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   449 ;;      Params:         0       0       0       0       0       0       0       0       0
   450 ;;      Locals:         0       0       0       0       0       0       0       0       0
   451 ;;      Temps:          2       0       0       0       0       0       0       0       0
   452 ;;      Totals:         2       0       0       0       0       0       0       0       0
   453 ;;Total ram usage:        2 bytes
   454 ;; Hardware stack levels used:    1
   455 ;; Hardware stack levels required when called:    3
   456 ;; This function calls:
   457 ;;		_LCD_Comando
   458 ;; This function is called by:
   459 ;;		_main
   460 ;; This function uses a non-reentrant model
   461 ;;
   462                           
   463                           	psect	text3
   464  0008A6                     __ptext3:
   465                           	callstack 0
   466  0008A6                     _LCD_Init:
   467                           	callstack 27
   468  0008A6                     
   469                           ;LCD_Libreria.c: 7:     TRISD = 0x00;
   470  0008A6  0E00               	movlw	0
   471  0008A8  6E95               	movwf	149,c	;volatile
   472                           
   473                           ;LCD_Libreria.c: 8:     LATD = 0x00;
   474  0008AA  0E00               	movlw	0
   475  0008AC  6E8C               	movwf	140,c	;volatile
   476  0008AE                     
   477                           ;LCD_Libreria.c: 11:     LCD_Comando(0x30);
   478  0008AE  0E30               	movlw	48
   479  0008B0  EC8E  F004         	call	_LCD_Comando
   480  0008B4                     
   481                           ;LCD_Libreria.c: 12:     _delay((unsigned long)((100)*(20000000UL/4000.0)));
   482  0008B4  0E03               	movlw	3
   483  0008B6  6E08               	movwf	(??_LCD_Init+1)^0,c
   484  0008B8  0E8A               	movlw	138
   485  0008BA  6E07               	movwf	??_LCD_Init^0,c
   486  0008BC  0E56               	movlw	86
   487  0008BE                     u177:
   488  0008BE  2EE8               	decfsz	wreg,f,c
   489  0008C0  D7FE               	bra	u177
   490  0008C2  2E07               	decfsz	??_LCD_Init^0,f,c
   491  0008C4  D7FC               	bra	u177
   492  0008C6  2E08               	decfsz	(??_LCD_Init+1)^0,f,c
   493  0008C8  D7FA               	bra	u177
   494  0008CA                     
   495                           ;LCD_Libreria.c: 13:     LCD_Comando(0x30);
   496  0008CA  0E30               	movlw	48
   497  0008CC  EC8E  F004         	call	_LCD_Comando
   498  0008D0                     
   499                           ;LCD_Libreria.c: 14:     _delay((unsigned long)((100)*(20000000UL/4000.0)));
   500  0008D0  0E03               	movlw	3
   501  0008D2  6E08               	movwf	(??_LCD_Init+1)^0,c
   502  0008D4  0E8A               	movlw	138
   503  0008D6  6E07               	movwf	??_LCD_Init^0,c
   504  0008D8  0E56               	movlw	86
   505  0008DA                     u187:
   506  0008DA  2EE8               	decfsz	wreg,f,c
   507  0008DC  D7FE               	bra	u187
   508  0008DE  2E07               	decfsz	??_LCD_Init^0,f,c
   509  0008E0  D7FC               	bra	u187
   510  0008E2  2E08               	decfsz	(??_LCD_Init+1)^0,f,c
   511  0008E4  D7FA               	bra	u187
   512  0008E6                     
   513                           ;LCD_Libreria.c: 15:     LCD_Comando(0x32);
   514  0008E6  0E32               	movlw	50
   515  0008E8  EC8E  F004         	call	_LCD_Comando
   516  0008EC                     
   517                           ;LCD_Libreria.c: 16:     LCD_Comando(0x28);
   518  0008EC  0E28               	movlw	40
   519  0008EE  EC8E  F004         	call	_LCD_Comando
   520  0008F2                     
   521                           ;LCD_Libreria.c: 17:     LCD_Comando(0x0C);
   522  0008F2  0E0C               	movlw	12
   523  0008F4  EC8E  F004         	call	_LCD_Comando
   524  0008F8                     
   525                           ;LCD_Libreria.c: 18:     LCD_Comando(0x01);
   526  0008F8  0E01               	movlw	1
   527  0008FA  EC8E  F004         	call	_LCD_Comando
   528  0008FE                     
   529                           ;LCD_Libreria.c: 19:     LCD_Comando(0x06);
   530  0008FE  0E06               	movlw	6
   531  000900  EC8E  F004         	call	_LCD_Comando
   532  000904                     
   533                           ;LCD_Libreria.c: 20:     _delay((unsigned long)((100)*(20000000UL/4000.0)));
   534  000904  0E03               	movlw	3
   535  000906  6E08               	movwf	(??_LCD_Init+1)^0,c
   536  000908  0E8A               	movlw	138
   537  00090A  6E07               	movwf	??_LCD_Init^0,c
   538  00090C  0E56               	movlw	86
   539  00090E                     u197:
   540  00090E  2EE8               	decfsz	wreg,f,c
   541  000910  D7FE               	bra	u197
   542  000912  2E07               	decfsz	??_LCD_Init^0,f,c
   543  000914  D7FC               	bra	u197
   544  000916  2E08               	decfsz	(??_LCD_Init+1)^0,f,c
   545  000918  D7FA               	bra	u197
   546  00091A  0012               	return		;funcret
   547  00091C                     __end_of_LCD_Init:
   548                           	callstack 0
   549                           
   550 ;; *************** function _LCD_Comando *****************
   551 ;; Defined at:
   552 ;;		line 23 in file "LCD_Libreria.c"
   553 ;; Parameters:    Size  Location     Type
   554 ;;  cmd             1    wreg     unsigned char 
   555 ;; Auto vars:     Size  Location     Type
   556 ;;  cmd             1    5[COMRAM] unsigned char 
   557 ;; Return value:  Size  Location     Type
   558 ;;                  1    wreg      void 
   559 ;; Registers used:
   560 ;;		wreg, status,2, status,0
   561 ;; Tracked objects:
   562 ;;		On entry : 0/0
   563 ;;		On exit  : 0/0
   564 ;;		Unchanged: 0/0
   565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   566 ;;      Params:         0       0       0       0       0       0       0       0       0
   567 ;;      Locals:         1       0       0       0       0       0       0       0       0
   568 ;;      Temps:          1       0       0       0       0       0       0       0       0
   569 ;;      Totals:         2       0       0       0       0       0       0       0       0
   570 ;;Total ram usage:        2 bytes
   571 ;; Hardware stack levels used:    1
   572 ;; Hardware stack levels required when called:    2
   573 ;; This function calls:
   574 ;;		Nothing
   575 ;; This function is called by:
   576 ;;		_LCD_Init
   577 ;;		_LCD_XY
   578 ;;		_main
   579 ;; This function uses a non-reentrant model
   580 ;;
   581                           
   582                           	psect	text4
   583  00091C                     __ptext4:
   584                           	callstack 0
   585  00091C                     _LCD_Comando:
   586                           	callstack 27
   587                           
   588                           ;incstack = 0
   589                           ;LCD_Comando@cmd stored from wreg
   590  00091C  6E06               	movwf	LCD_Comando@cmd^0,c
   591  00091E                     
   592                           ;LCD_Libreria.c: 27:     LATD = LATD & 0x0f;
   593  00091E  508C               	movf	140,w,c	;volatile
   594  000920  0B0F               	andlw	15
   595  000922  6E8C               	movwf	140,c	;volatile
   596                           
   597                           ;LCD_Libreria.c: 33:     LATD = LATD | (cmd & 0xf0);
   598  000924  5006               	movf	LCD_Comando@cmd^0,w,c
   599  000926  0BF0               	andlw	240
   600  000928  108C               	iorwf	140,w,c	;volatile
   601  00092A  6E8C               	movwf	140,c	;volatile
   602  00092C                     
   603                           ;LCD_Libreria.c: 42:     LATDbits.LATD2 = 0;
   604  00092C  948C               	bcf	140,2,c	;volatile
   605  00092E                     
   606                           ;LCD_Libreria.c: 43:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   607  00092E  0E07               	movlw	7
   608  000930  6E05               	movwf	??_LCD_Comando^0,c
   609  000932  0E7D               	movlw	125
   610  000934                     u207:
   611  000934  2EE8               	decfsz	wreg,f,c
   612  000936  D7FE               	bra	u207
   613  000938  2E05               	decfsz	??_LCD_Comando^0,f,c
   614  00093A  D7FC               	bra	u207
   615  00093C  F000               	nop	
   616  00093E                     
   617                           ;LCD_Libreria.c: 44:     LATDbits.LATD3 = 1;
   618  00093E  868C               	bsf	140,3,c	;volatile
   619  000940                     
   620                           ;LCD_Libreria.c: 45:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   621  000940  0E07               	movlw	7
   622  000942  6E05               	movwf	??_LCD_Comando^0,c
   623  000944  0E7D               	movlw	125
   624  000946                     u217:
   625  000946  2EE8               	decfsz	wreg,f,c
   626  000948  D7FE               	bra	u217
   627  00094A  2E05               	decfsz	??_LCD_Comando^0,f,c
   628  00094C  D7FC               	bra	u217
   629  00094E  F000               	nop	
   630  000950                     
   631                           ;LCD_Libreria.c: 46:     LATDbits.LATD3 = 0;
   632  000950  968C               	bcf	140,3,c	;volatile
   633                           
   634                           ;LCD_Libreria.c: 48:     LATD &= 0x0f;
   635  000952  0E0F               	movlw	15
   636  000954  168C               	andwf	140,f,c	;volatile
   637                           
   638                           ;LCD_Libreria.c: 49:     LATD |= ((cmd<<4) & 0xf0);
   639  000956  3806               	swapf	LCD_Comando@cmd^0,w,c
   640  000958  0BF0               	andlw	240
   641  00095A  0BF0               	andlw	240
   642  00095C  128C               	iorwf	140,f,c	;volatile
   643  00095E                     
   644                           ;LCD_Libreria.c: 57:     LATDbits.LATD2 = 0;
   645  00095E  948C               	bcf	140,2,c	;volatile
   646  000960                     
   647                           ;LCD_Libreria.c: 58:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   648  000960  0E07               	movlw	7
   649  000962  6E05               	movwf	??_LCD_Comando^0,c
   650  000964  0E7D               	movlw	125
   651  000966                     u227:
   652  000966  2EE8               	decfsz	wreg,f,c
   653  000968  D7FE               	bra	u227
   654  00096A  2E05               	decfsz	??_LCD_Comando^0,f,c
   655  00096C  D7FC               	bra	u227
   656  00096E  F000               	nop	
   657  000970                     
   658                           ;LCD_Libreria.c: 59:     LATDbits.LATD3 = 1;
   659  000970  868C               	bsf	140,3,c	;volatile
   660  000972                     
   661                           ;LCD_Libreria.c: 60:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   662  000972  0E07               	movlw	7
   663  000974  6E05               	movwf	??_LCD_Comando^0,c
   664  000976  0E7D               	movlw	125
   665  000978                     u237:
   666  000978  2EE8               	decfsz	wreg,f,c
   667  00097A  D7FE               	bra	u237
   668  00097C  2E05               	decfsz	??_LCD_Comando^0,f,c
   669  00097E  D7FC               	bra	u237
   670  000980  F000               	nop	
   671  000982                     
   672                           ;LCD_Libreria.c: 61:     LATDbits.LATD3 = 0;
   673  000982  968C               	bcf	140,3,c	;volatile
   674  000984  0012               	return		;funcret
   675  000986                     __end_of_LCD_Comando:
   676                           	callstack 0
   677                           
   678 ;; *************** function _LCD_Cadena *****************
   679 ;; Defined at:
   680 ;;		line 96 in file "LCD_Libreria.c"
   681 ;; Parameters:    Size  Location     Type
   682 ;;  dato            2    6[COMRAM] PTR const unsigned char 
   683 ;;		 -> STR_2(5), STR_1(8), 
   684 ;; Auto vars:     Size  Location     Type
   685 ;;		None
   686 ;; Return value:  Size  Location     Type
   687 ;;                  1    wreg      void 
   688 ;; Registers used:
   689 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   690 ;; Tracked objects:
   691 ;;		On entry : 0/0
   692 ;;		On exit  : 0/0
   693 ;;		Unchanged: 0/0
   694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   695 ;;      Params:         2       0       0       0       0       0       0       0       0
   696 ;;      Locals:         0       0       0       0       0       0       0       0       0
   697 ;;      Temps:          0       0       0       0       0       0       0       0       0
   698 ;;      Totals:         2       0       0       0       0       0       0       0       0
   699 ;;Total ram usage:        2 bytes
   700 ;; Hardware stack levels used:    1
   701 ;; Hardware stack levels required when called:    3
   702 ;; This function calls:
   703 ;;		_LCD_Data
   704 ;; This function is called by:
   705 ;;		_main
   706 ;; This function uses a non-reentrant model
   707 ;;
   708                           
   709                           	psect	text5
   710  000A38                     __ptext5:
   711                           	callstack 0
   712  000A38                     _LCD_Cadena:
   713                           	callstack 27
   714  000A38                     
   715                           ;LCD_Libreria.c: 97:     while(*dato != '\0'){
   716  000A38  EF2C  F005         	goto	l1000
   717  000A3C                     l994:
   718                           
   719                           ;LCD_Libreria.c: 98:         _delay((unsigned long)((100)*(20000000UL/4000000.0)));
   720  000A3C  0EA6               	movlw	166
   721  000A3E                     u247:
   722  000A3E  2EE8               	decfsz	wreg,f,c
   723  000A40  D7FE               	bra	u247
   724  000A42  D000               	nop2	
   725  000A44                     
   726                           ;LCD_Libreria.c: 99:         LCD_Data(*dato);
   727  000A44  C007  FFF6         	movff	LCD_Cadena@dato,tblptrl
   728  000A48  C008  FFF7         	movff	LCD_Cadena@dato+1,tblptrh
   729  000A4C                     	if	0	;tblptru may be non-zero
   730  000A4C                     	endif
   731  000A4C                     	if	0	;tblptru may be non-zero
   732  000A4C                     	endif
   733  000A4C  0008               	tblrd		*
   734  000A4E  50F5               	movf	tablat,w,c
   735  000A50  ECC3  F004         	call	_LCD_Data
   736  000A54                     
   737                           ;LCD_Libreria.c: 100:         dato++;
   738  000A54  4A07               	infsnz	LCD_Cadena@dato^0,f,c
   739  000A56  2A08               	incf	(LCD_Cadena@dato+1)^0,f,c
   740  000A58                     l1000:
   741                           
   742                           ;LCD_Libreria.c: 97:     while(*dato != '\0'){
   743  000A58  C007  FFF6         	movff	LCD_Cadena@dato,tblptrl
   744  000A5C  C008  FFF7         	movff	LCD_Cadena@dato+1,tblptrh
   745  000A60                     	if	0	;tblptru may be non-zero
   746  000A60                     	endif
   747  000A60                     	if	0	;tblptru may be non-zero
   748  000A60                     	endif
   749  000A60  0008               	tblrd		*
   750  000A62  50F5               	movf	tablat,w,c
   751  000A64  0900               	iorlw	0
   752  000A66  A4D8               	btfss	status,2,c
   753  000A68  EF38  F005         	goto	u111
   754  000A6C  EF3A  F005         	goto	u110
   755  000A70                     u111:
   756  000A70  EF1E  F005         	goto	l994
   757  000A74                     u110:
   758  000A74  0012               	return		;funcret
   759  000A76                     __end_of_LCD_Cadena:
   760                           	callstack 0
   761                           
   762 ;; *************** function _LCD_Data *****************
   763 ;; Defined at:
   764 ;;		line 64 in file "LCD_Libreria.c"
   765 ;; Parameters:    Size  Location     Type
   766 ;;  data            1    wreg     unsigned char 
   767 ;; Auto vars:     Size  Location     Type
   768 ;;  data            1    5[COMRAM] unsigned char 
   769 ;; Return value:  Size  Location     Type
   770 ;;                  1    wreg      void 
   771 ;; Registers used:
   772 ;;		wreg, status,2, status,0
   773 ;; Tracked objects:
   774 ;;		On entry : 0/0
   775 ;;		On exit  : 0/0
   776 ;;		Unchanged: 0/0
   777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   778 ;;      Params:         0       0       0       0       0       0       0       0       0
   779 ;;      Locals:         1       0       0       0       0       0       0       0       0
   780 ;;      Temps:          1       0       0       0       0       0       0       0       0
   781 ;;      Totals:         2       0       0       0       0       0       0       0       0
   782 ;;Total ram usage:        2 bytes
   783 ;; Hardware stack levels used:    1
   784 ;; Hardware stack levels required when called:    2
   785 ;; This function calls:
   786 ;;		Nothing
   787 ;; This function is called by:
   788 ;;		_LCD_Cadena
   789 ;; This function uses a non-reentrant model
   790 ;;
   791                           
   792                           	psect	text6
   793  000986                     __ptext6:
   794                           	callstack 0
   795  000986                     _LCD_Data:
   796                           	callstack 27
   797                           
   798                           ;incstack = 0
   799                           ;LCD_Data@data stored from wreg
   800  000986  6E06               	movwf	LCD_Data@data^0,c
   801  000988                     
   802                           ;LCD_Libreria.c: 68:     LATD = LATD & 0x0f;
   803  000988  508C               	movf	140,w,c	;volatile
   804  00098A  0B0F               	andlw	15
   805  00098C  6E8C               	movwf	140,c	;volatile
   806                           
   807                           ;LCD_Libreria.c: 69:     LATD = LATD | (data & 0xf0);
   808  00098E  5006               	movf	LCD_Data@data^0,w,c
   809  000990  0BF0               	andlw	240
   810  000992  108C               	iorwf	140,w,c	;volatile
   811  000994  6E8C               	movwf	140,c	;volatile
   812  000996                     
   813                           ;LCD_Libreria.c: 71:     LATDbits.LATD2 = 1;
   814  000996  848C               	bsf	140,2,c	;volatile
   815  000998                     
   816                           ;LCD_Libreria.c: 72:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   817  000998  0E07               	movlw	7
   818  00099A  6E05               	movwf	??_LCD_Data^0,c
   819  00099C  0E7D               	movlw	125
   820  00099E                     u257:
   821  00099E  2EE8               	decfsz	wreg,f,c
   822  0009A0  D7FE               	bra	u257
   823  0009A2  2E05               	decfsz	??_LCD_Data^0,f,c
   824  0009A4  D7FC               	bra	u257
   825  0009A6  F000               	nop	
   826  0009A8                     
   827                           ;LCD_Libreria.c: 73:     LATDbits.LATD3 = 1;
   828  0009A8  868C               	bsf	140,3,c	;volatile
   829  0009AA                     
   830                           ;LCD_Libreria.c: 74:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   831  0009AA  0E07               	movlw	7
   832  0009AC  6E05               	movwf	??_LCD_Data^0,c
   833  0009AE  0E7D               	movlw	125
   834  0009B0                     u267:
   835  0009B0  2EE8               	decfsz	wreg,f,c
   836  0009B2  D7FE               	bra	u267
   837  0009B4  2E05               	decfsz	??_LCD_Data^0,f,c
   838  0009B6  D7FC               	bra	u267
   839  0009B8  F000               	nop	
   840  0009BA                     
   841                           ;LCD_Libreria.c: 75:     LATDbits.LATD3 = 0;
   842  0009BA  968C               	bcf	140,3,c	;volatile
   843                           
   844                           ;LCD_Libreria.c: 77:     LATD &= 0x0f;
   845  0009BC  0E0F               	movlw	15
   846  0009BE  168C               	andwf	140,f,c	;volatile
   847                           
   848                           ;LCD_Libreria.c: 78:     LATD |= ((data<<4) & 0xf0);
   849  0009C0  3806               	swapf	LCD_Data@data^0,w,c
   850  0009C2  0BF0               	andlw	240
   851  0009C4  0BF0               	andlw	240
   852  0009C6  128C               	iorwf	140,f,c	;volatile
   853  0009C8                     
   854                           ;LCD_Libreria.c: 80:     LATDbits.LATD2 = 1;
   855  0009C8  848C               	bsf	140,2,c	;volatile
   856  0009CA                     
   857                           ;LCD_Libreria.c: 81:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   858  0009CA  0E07               	movlw	7
   859  0009CC  6E05               	movwf	??_LCD_Data^0,c
   860  0009CE  0E7D               	movlw	125
   861  0009D0                     u277:
   862  0009D0  2EE8               	decfsz	wreg,f,c
   863  0009D2  D7FE               	bra	u277
   864  0009D4  2E05               	decfsz	??_LCD_Data^0,f,c
   865  0009D6  D7FC               	bra	u277
   866  0009D8  F000               	nop	
   867  0009DA                     
   868                           ;LCD_Libreria.c: 82:     LATDbits.LATD3 = 1;
   869  0009DA  868C               	bsf	140,3,c	;volatile
   870  0009DC                     
   871                           ;LCD_Libreria.c: 83:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   872  0009DC  0E07               	movlw	7
   873  0009DE  6E05               	movwf	??_LCD_Data^0,c
   874  0009E0  0E7D               	movlw	125
   875  0009E2                     u287:
   876  0009E2  2EE8               	decfsz	wreg,f,c
   877  0009E4  D7FE               	bra	u287
   878  0009E6  2E05               	decfsz	??_LCD_Data^0,f,c
   879  0009E8  D7FC               	bra	u287
   880  0009EA  F000               	nop	
   881  0009EC                     
   882                           ;LCD_Libreria.c: 84:     LATDbits.LATD3 = 0;
   883  0009EC  968C               	bcf	140,3,c	;volatile
   884  0009EE  0012               	return		;funcret
   885  0009F0                     __end_of_LCD_Data:
   886                           	callstack 0
   887                           
   888 ;; *************** function _Int_Ext *****************
   889 ;; Defined at:
   890 ;;		line 8 in file "Interrupt.c"
   891 ;; Parameters:    Size  Location     Type
   892 ;;		None
   893 ;; Auto vars:     Size  Location     Type
   894 ;;		None
   895 ;; Return value:  Size  Location     Type
   896 ;;                  1    wreg      void 
   897 ;; Registers used:
   898 ;;		None
   899 ;; Tracked objects:
   900 ;;		On entry : 0/0
   901 ;;		On exit  : 0/0
   902 ;;		Unchanged: 0/0
   903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   904 ;;      Params:         0       0       0       0       0       0       0       0       0
   905 ;;      Locals:         0       0       0       0       0       0       0       0       0
   906 ;;      Temps:          0       0       0       0       0       0       0       0       0
   907 ;;      Totals:         0       0       0       0       0       0       0       0       0
   908 ;;Total ram usage:        0 bytes
   909 ;; Hardware stack levels used:    1
   910 ;; Hardware stack levels required when called:    2
   911 ;; This function calls:
   912 ;;		Nothing
   913 ;; This function is called by:
   914 ;;		_main
   915 ;; This function uses a non-reentrant model
   916 ;;
   917                           
   918                           	psect	text7
   919  000AD8                     __ptext7:
   920                           	callstack 0
   921  000AD8                     _Int_Ext:
   922                           	callstack 28
   923  000AD8                     
   924                           ;Interrupt.c: 9:     TRISBbits.RB0 = 1;
   925  000AD8  8093               	bsf	147,0,c	;volatile
   926                           
   927                           ;Interrupt.c: 12:     INTCONbits.INT0E = 1;
   928  000ADA  88F2               	bsf	242,4,c	;volatile
   929                           
   930                           ;Interrupt.c: 13:     INTCONbits.INT0F = 0;
   931  000ADC  92F2               	bcf	242,1,c	;volatile
   932                           
   933                           ;Interrupt.c: 20:     INTCON2bits.INTEDG0 = 0;
   934  000ADE  9CF1               	bcf	241,6,c	;volatile
   935                           
   936                           ;Interrupt.c: 23:     RCONbits.IPEN = 1;
   937  000AE0  8ED0               	bsf	208,7,c	;volatile
   938                           
   939                           ;Interrupt.c: 24:     INTCONbits.GIEH = 1;
   940  000AE2  8EF2               	bsf	242,7,c	;volatile
   941                           
   942                           ;Interrupt.c: 25:     INTCONbits.GIEL = 1;
   943  000AE4  8CF2               	bsf	242,6,c	;volatile
   944  000AE6  0012               	return		;funcret
   945  000AE8                     __end_of_Int_Ext:
   946                           	callstack 0
   947                           
   948 ;; *************** function _TMR0_Ext *****************
   949 ;; Defined at:
   950 ;;		line 41 in file "Interrupt.c"
   951 ;; Parameters:    Size  Location     Type
   952 ;;		None
   953 ;; Auto vars:     Size  Location     Type
   954 ;;		None
   955 ;; Return value:  Size  Location     Type
   956 ;;                  1    wreg      void 
   957 ;; Registers used:
   958 ;;		wreg, status,2, status,0
   959 ;; Tracked objects:
   960 ;;		On entry : 0/0
   961 ;;		On exit  : 0/0
   962 ;;		Unchanged: 0/0
   963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   964 ;;      Params:         0       0       0       0       0       0       0       0       0
   965 ;;      Locals:         0       0       0       0       0       0       0       0       0
   966 ;;      Temps:          4       0       0       0       0       0       0       0       0
   967 ;;      Totals:         4       0       0       0       0       0       0       0       0
   968 ;;Total ram usage:        4 bytes
   969 ;; Hardware stack levels used:    1
   970 ;; Hardware stack levels required when called:    1
   971 ;; This function calls:
   972 ;;		Nothing
   973 ;; This function is called by:
   974 ;;		Interrupt level 1
   975 ;; This function uses a non-reentrant model
   976 ;;
   977                           
   978                           	psect	intcodelo
   979  000018                     __pintcodelo:
   980                           	callstack 0
   981  000018                     _TMR0_Ext:
   982                           	callstack 27
   983                           
   984                           ;incstack = 0
   985  000018  800F               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   986  00001A  CFD8 F002          	movff	status,??_TMR0_Ext+1
   987  00001E  CFE8 F003          	movff	wreg,??_TMR0_Ext+2
   988  000022  CFE0 F004          	movff	bsr,??_TMR0_Ext+3
   989  000026                     
   990                           ;Interrupt.c: 42:     TMR0L = 60;
   991  000026  0E3C               	movlw	60
   992  000028  6ED6               	movwf	214,c	;volatile
   993  00002A                     
   994                           ;Interrupt.c: 43:     i++;
   995  00002A  4A0B               	infsnz	_i^0,f,c
   996  00002C  2A0C               	incf	(_i+1)^0,f,c
   997  00002E                     
   998                           ;Interrupt.c: 44:     if(i == 10){
   999  00002E  0E0A               	movlw	10
  1000  000030  180B               	xorwf	_i^0,w,c
  1001  000032  100C               	iorwf	(_i+1)^0,w,c
  1002  000034  A4D8               	btfss	status,2,c
  1003  000036  EF1F  F000         	goto	i1u5_21
  1004  00003A  EF21  F000         	goto	i1u5_20
  1005  00003E                     i1u5_21:
  1006  00003E  EF35  F000         	goto	i1l892
  1007  000042                     i1u5_20:
  1008  000042                     
  1009                           ;Interrupt.c: 45:         i = 0;
  1010  000042  0E00               	movlw	0
  1011  000044  6E0C               	movwf	(_i+1)^0,c
  1012  000046  0E00               	movlw	0
  1013  000048  6E0B               	movwf	_i^0,c
  1014  00004A                     
  1015                           ;Interrupt.c: 46:         LATDbits.LATD0 = ~LATDbits.LATD0;
  1016  00004A  B08C               	btfsc	140,0,c	;volatile
  1017  00004C  EF2A  F000         	goto	i1u6_21
  1018  000050  EF2D  F000         	goto	i1u6_20
  1019  000054                     i1u6_21:
  1020  000054  0E01               	movlw	1
  1021  000056  EF2E  F000         	goto	i1u6_26
  1022  00005A                     i1u6_20:
  1023  00005A  0E00               	movlw	0
  1024  00005C                     i1u6_26:
  1025  00005C  0AFF               	xorlw	255
  1026  00005E  6E01               	movwf	??_TMR0_Ext^0,c
  1027  000060  508C               	movf	140,w,c	;volatile
  1028  000062  1801               	xorwf	??_TMR0_Ext^0,w,c
  1029  000064  0BFE               	andlw	-2
  1030  000066  1801               	xorwf	??_TMR0_Ext^0,w,c
  1031  000068  6E8C               	movwf	140,c	;volatile
  1032  00006A                     i1l892:
  1033                           
  1034                           ;Interrupt.c: 48:     INTCONbits.TMR0IF = 0;
  1035  00006A  94F2               	bcf	242,2,c	;volatile
  1036  00006C  C004  FFE0         	movff	??_TMR0_Ext+3,bsr
  1037  000070  C003  FFE8         	movff	??_TMR0_Ext+2,wreg
  1038  000074  C002  FFD8         	movff	??_TMR0_Ext+1,status
  1039  000078  900F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1040  00007A  0010               	retfie	
  1041  00007C                     __end_of_TMR0_Ext:
  1042                           	callstack 0
  1043                           
  1044 ;; *************** function _INT0_Ext *****************
  1045 ;; Defined at:
  1046 ;;		line 28 in file "Interrupt.c"
  1047 ;; Parameters:    Size  Location     Type
  1048 ;;		None
  1049 ;; Auto vars:     Size  Location     Type
  1050 ;;		None
  1051 ;; Return value:  Size  Location     Type
  1052 ;;                  1    wreg      void 
  1053 ;; Registers used:
  1054 ;;		wreg, status,2, status,0
  1055 ;; Tracked objects:
  1056 ;;		On entry : 0/0
  1057 ;;		On exit  : 0/0
  1058 ;;		Unchanged: 0/0
  1059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1060 ;;      Params:         0       0       0       0       0       0       0       0       0
  1061 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1062 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1063 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1064 ;;Total ram usage:        0 bytes
  1065 ;; Hardware stack levels used:    1
  1066 ;; This function calls:
  1067 ;;		Nothing
  1068 ;; This function is called by:
  1069 ;;		Interrupt level 2
  1070 ;; This function uses a non-reentrant model
  1071 ;;
  1072                           
  1073                           	psect	intcode
  1074  000008                     __pintcode:
  1075                           	callstack 0
  1076  000008                     _INT0_Ext:
  1077                           	callstack 27
  1078                           
  1079                           ;incstack = 0
  1080  000008  820F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1081  00000A  EDF8  F004         	call	int_func,f	;refresh shadow registers
  1082                           
  1083                           	psect	intcode_body
  1084  0009F0                     __pintcode_body:
  1085                           	callstack 27
  1086  0009F0                     int_func:
  1087                           	callstack 27
  1088  0009F0  0006               	pop		; remove dummy address from shadow register refresh
  1089  0009F2                     
  1090                           ;Interrupt.c: 29:     x++;
  1091  0009F2  4A0D               	infsnz	_x^0,f,c
  1092  0009F4  2A0E               	incf	(_x+1)^0,f,c
  1093  0009F6                     
  1094                           ;Interrupt.c: 30:     if(x > 2){
  1095  0009F6  BE0E               	btfsc	(_x+1)^0,7,c
  1096  0009F8  EF07  F005         	goto	i2u12_41
  1097  0009FC  500E               	movf	(_x+1)^0,w,c
  1098  0009FE  E109               	bnz	i2u12_40
  1099  000A00  0E03               	movlw	3
  1100  000A02  5C0D               	subwf	_x^0,w,c
  1101  000A04  A0D8               	btfss	status,0,c
  1102  000A06  EF07  F005         	goto	i2u12_41
  1103  000A0A  EF09  F005         	goto	i2u12_40
  1104  000A0E                     i2u12_41:
  1105  000A0E  EF0F  F005         	goto	i2l1022
  1106  000A12                     i2u12_40:
  1107  000A12                     
  1108                           ;Interrupt.c: 31:         T0CONbits.TMR0ON = 0;
  1109  000A12  9ED5               	bcf	213,7,c	;volatile
  1110                           
  1111                           ;Interrupt.c: 32:         LATDbits.LATD0 = 0;
  1112  000A14  908C               	bcf	140,0,c	;volatile
  1113  000A16                     
  1114                           ;Interrupt.c: 33:         x = 0;
  1115  000A16  0E00               	movlw	0
  1116  000A18  6E0E               	movwf	(_x+1)^0,c
  1117  000A1A  0E00               	movlw	0
  1118  000A1C  6E0D               	movwf	_x^0,c
  1119  000A1E                     i2l1022:
  1120                           
  1121                           ;Interrupt.c: 35:     if(x == 0){
  1122  000A1E  500D               	movf	_x^0,w,c
  1123  000A20  100E               	iorwf	(_x+1)^0,w,c
  1124  000A22  A4D8               	btfss	status,2,c
  1125  000A24  EF16  F005         	goto	i2u13_41
  1126  000A28  EF18  F005         	goto	i2u13_40
  1127  000A2C                     i2u13_41:
  1128  000A2C  EF19  F005         	goto	i2l27
  1129  000A30                     i2u13_40:
  1130  000A30                     
  1131                           ;Interrupt.c: 36:         T0CONbits.TMR0ON = 1;
  1132  000A30  8ED5               	bsf	213,7,c	;volatile
  1133  000A32                     i2l27:
  1134                           
  1135                           ;Interrupt.c: 38:     INTCONbits.INT0F = 0;
  1136  000A32  92F2               	bcf	242,1,c	;volatile
  1137  000A34  920F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1138  000A36  0011               	retfie		f
  1139  000A38                     __end_of_INT0_Ext:
  1140                           	callstack 0
  1141                           
  1142                           	psect	rparam
  1143  0000                     
  1144                           	psect	temp
  1145  00000F                     btemp:
  1146                           	callstack 0
  1147  00000F                     	ds	1
  1148  0000                     int$flags	set	btemp
  1149  0000                     wtemp8	set	btemp+1
  1150  0000                     ttemp5	set	btemp+1
  1151  0000                     ttemp6	set	btemp+4
  1152  0000                     ttemp7	set	btemp+8
  1153                           
  1154                           	psect	idloc
  1155                           
  1156                           ;Config register IDLOC0 @ 0x200000
  1157                           ;	unspecified, using default values
  1158  200000                     	org	2097152
  1159  200000  FF                 	db	255
  1160                           
  1161                           ;Config register IDLOC1 @ 0x200001
  1162                           ;	unspecified, using default values
  1163  200001                     	org	2097153
  1164  200001  FF                 	db	255
  1165                           
  1166                           ;Config register IDLOC2 @ 0x200002
  1167                           ;	unspecified, using default values
  1168  200002                     	org	2097154
  1169  200002  FF                 	db	255
  1170                           
  1171                           ;Config register IDLOC3 @ 0x200003
  1172                           ;	unspecified, using default values
  1173  200003                     	org	2097155
  1174  200003  FF                 	db	255
  1175                           
  1176                           ;Config register IDLOC4 @ 0x200004
  1177                           ;	unspecified, using default values
  1178  200004                     	org	2097156
  1179  200004  FF                 	db	255
  1180                           
  1181                           ;Config register IDLOC5 @ 0x200005
  1182                           ;	unspecified, using default values
  1183  200005                     	org	2097157
  1184  200005  FF                 	db	255
  1185                           
  1186                           ;Config register IDLOC6 @ 0x200006
  1187                           ;	unspecified, using default values
  1188  200006                     	org	2097158
  1189  200006  FF                 	db	255
  1190                           
  1191                           ;Config register IDLOC7 @ 0x200007
  1192                           ;	unspecified, using default values
  1193  200007                     	org	2097159
  1194  200007  FF                 	db	255
  1195                           
  1196                           	psect	config
  1197                           
  1198                           ;Config register CONFIG1L @ 0x300000
  1199                           ;	PLL Prescaler Selection bits
  1200                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  1201                           ;	System Clock Postscaler Selection bits
  1202                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1203                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1204                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  1205  300000                     	org	3145728
  1206  300000  00                 	db	0
  1207                           
  1208                           ;Config register CONFIG1H @ 0x300001
  1209                           ;	Oscillator Selection bits
  1210                           ;	FOSC = HS, HS oscillator (HS)
  1211                           ;	Fail-Safe Clock Monitor Enable bit
  1212                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1213                           ;	Internal/External Oscillator Switchover bit
  1214                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1215  300001                     	org	3145729
  1216  300001  0C                 	db	12
  1217                           
  1218                           ;Config register CONFIG2L @ 0x300002
  1219                           ;	Power-up Timer Enable bit
  1220                           ;	PWRT = ON, PWRT enabled
  1221                           ;	Brown-out Reset Enable bits
  1222                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  1223                           ;	Brown-out Reset Voltage bits
  1224                           ;	BORV = 3, Minimum setting 2.05V
  1225                           ;	USB Voltage Regulator Enable bit
  1226                           ;	VREGEN = OFF, USB voltage regulator disabled
  1227  300002                     	org	3145730
  1228  300002  18                 	db	24
  1229                           
  1230                           ;Config register CONFIG2H @ 0x300003
  1231                           ;	Watchdog Timer Enable bit
  1232                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1233                           ;	Watchdog Timer Postscale Select bits
  1234                           ;	WDTPS = 32768, 1:32768
  1235  300003                     	org	3145731
  1236  300003  1E                 	db	30
  1237                           
  1238                           ; Padding undefined space
  1239  300004                     	org	3145732
  1240  300004  FF                 	db	255
  1241                           
  1242                           ;Config register CONFIG3H @ 0x300005
  1243                           ;	CCP2 MUX bit
  1244                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1245                           ;	PORTB A/D Enable bit
  1246                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1247                           ;	Low-Power Timer 1 Oscillator Enable bit
  1248                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1249                           ;	MCLR Pin Enable bit
  1250                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1251  300005                     	org	3145733
  1252  300005  81                 	db	129
  1253                           
  1254                           ;Config register CONFIG4L @ 0x300006
  1255                           ;	Stack Full/Underflow Reset Enable bit
  1256                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  1257                           ;	Single-Supply ICSP Enable bit
  1258                           ;	LVP = OFF, Single-Supply ICSP disabled
  1259                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1260                           ;	ICPRT = OFF, ICPORT disabled
  1261                           ;	Extended Instruction Set Enable bit
  1262                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1263                           ;	Background Debugger Enable bit
  1264                           ;	DEBUG = 0x1, unprogrammed default
  1265  300006                     	org	3145734
  1266  300006  80                 	db	128
  1267                           
  1268                           ; Padding undefined space
  1269  300007                     	org	3145735
  1270  300007  FF                 	db	255
  1271                           
  1272                           ;Config register CONFIG5L @ 0x300008
  1273                           ;	Code Protection bit
  1274                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1275                           ;	Code Protection bit
  1276                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1277                           ;	Code Protection bit
  1278                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1279                           ;	Code Protection bit
  1280                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1281  300008                     	org	3145736
  1282  300008  0F                 	db	15
  1283                           
  1284                           ;Config register CONFIG5H @ 0x300009
  1285                           ;	Boot Block Code Protection bit
  1286                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1287                           ;	Data EEPROM Code Protection bit
  1288                           ;	CPD = OFF, Data EEPROM is not code-protected
  1289  300009                     	org	3145737
  1290  300009  C0                 	db	192
  1291                           
  1292                           ;Config register CONFIG6L @ 0x30000A
  1293                           ;	Write Protection bit
  1294                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1295                           ;	Write Protection bit
  1296                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1297                           ;	Write Protection bit
  1298                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1299                           ;	Write Protection bit
  1300                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1301  30000A                     	org	3145738
  1302  30000A  0F                 	db	15
  1303                           
  1304                           ;Config register CONFIG6H @ 0x30000B
  1305                           ;	Configuration Register Write Protection bit
  1306                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1307                           ;	Boot Block Write Protection bit
  1308                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1309                           ;	Data EEPROM Write Protection bit
  1310                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1311  30000B                     	org	3145739
  1312  30000B  E0                 	db	224
  1313                           
  1314                           ;Config register CONFIG7L @ 0x30000C
  1315                           ;	Table Read Protection bit
  1316                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1317                           ;	Table Read Protection bit
  1318                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1319                           ;	Table Read Protection bit
  1320                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1321                           ;	Table Read Protection bit
  1322                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1323  30000C                     	org	3145740
  1324  30000C  0F                 	db	15
  1325                           
  1326                           ;Config register CONFIG7H @ 0x30000D
  1327                           ;	Boot Block Table Read Protection bit
  1328                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1329  30000D                     	org	3145741
  1330  30000D  40                 	db	64
  1331                           tosu	equ	0xFFF
  1332                           tosh	equ	0xFFE
  1333                           tosl	equ	0xFFD
  1334                           stkptr	equ	0xFFC
  1335                           pclatu	equ	0xFFB
  1336                           pclath	equ	0xFFA
  1337                           pcl	equ	0xFF9
  1338                           tblptru	equ	0xFF8
  1339                           tblptrh	equ	0xFF7
  1340                           tblptrl	equ	0xFF6
  1341                           tablat	equ	0xFF5
  1342                           prodh	equ	0xFF4
  1343                           prodl	equ	0xFF3
  1344                           indf0	equ	0xFEF
  1345                           postinc0	equ	0xFEE
  1346                           postdec0	equ	0xFED
  1347                           preinc0	equ	0xFEC
  1348                           plusw0	equ	0xFEB
  1349                           fsr0h	equ	0xFEA
  1350                           fsr0l	equ	0xFE9
  1351                           wreg	equ	0xFE8
  1352                           indf1	equ	0xFE7
  1353                           postinc1	equ	0xFE6
  1354                           postdec1	equ	0xFE5
  1355                           preinc1	equ	0xFE4
  1356                           plusw1	equ	0xFE3
  1357                           fsr1h	equ	0xFE2
  1358                           fsr1l	equ	0xFE1
  1359                           bsr	equ	0xFE0
  1360                           indf2	equ	0xFDF
  1361                           postinc2	equ	0xFDE
  1362                           postdec2	equ	0xFDD
  1363                           preinc2	equ	0xFDC
  1364                           plusw2	equ	0xFDB
  1365                           fsr2h	equ	0xFDA
  1366                           fsr2l	equ	0xFD9
  1367                           status	equ	0xFD8

Data Sizes:
    Strings     13
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     10      14
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    LCD_Cadena@dato	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_2(CODE[5]), STR_1(CODE[8]), 


Critical Paths under _main in COMRAM

    _main->_LCD_XY
    _LCD_XY->_LCD_Comando
    _LCD_Init->_LCD_Comando
    _LCD_Cadena->_LCD_Data

Critical Paths under _TMR0_Ext in COMRAM

    None.

Critical Paths under _INT0_Ext in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _TMR0_Ext in BANK0

    None.

Critical Paths under _INT0_Ext in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TMR0_Ext in BANK1

    None.

Critical Paths under _INT0_Ext in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TMR0_Ext in BANK2

    None.

Critical Paths under _INT0_Ext in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TMR0_Ext in BANK3

    None.

Critical Paths under _INT0_Ext in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TMR0_Ext in BANK4

    None.

Critical Paths under _INT0_Ext in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TMR0_Ext in BANK5

    None.

Critical Paths under _INT0_Ext in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TMR0_Ext in BANK6

    None.

Critical Paths under _INT0_Ext in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TMR0_Ext in BANK7

    None.

Critical Paths under _INT0_Ext in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     743
                            _Int_Ext
                         _LCD_Cadena
                        _LCD_Comando
                           _LCD_Init
                             _LCD_XY
                        _Timer0_Init
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_XY                                               4     0      4     414
                                              6 COMRAM     4     0      4
                        _LCD_Comando
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      44
                                              6 COMRAM     2     2      0
                        _LCD_Comando
 ---------------------------------------------------------------------------------
 (2) _LCD_Comando                                          2     2      0      44
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Cadena                                           2     0      2     241
                                              6 COMRAM     2     0      2
                           _LCD_Data
 ---------------------------------------------------------------------------------
 (2) _LCD_Data                                             2     2      0      44
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Int_Ext                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _TMR0_Ext                                             4     4      0       0
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INT0_Ext                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Int_Ext
   _LCD_Cadena
     _LCD_Data
   _LCD_Comando
   _LCD_Init
     _LCD_Comando
   _LCD_XY
     _LCD_Comando
   _Timer0_Init

 _TMR0_Ext (ROOT)

 _INT0_Ext (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      A       E       1       14.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       E      20        0.0%
DATA                 0      0       E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sun Dec 20 15:55:02 2020

                      _i 000B                        _x 000D             ?_LCD_Comando 0001  
                     l21 0AE6                       l50 0984                       l53 09EE  
                     l47 091A                       l64 0A74                       l58 0AA4  
                     bsr 000FE0                      l102 0AD6                      l920 092C  
                    l930 095E                      l922 092E                      l940 0988  
                    l932 0960                      l924 093E                      l950 09BA  
                    l942 0996                      l934 0970                      l926 0940  
                    l918 091E                      l960 09EC                      l952 09C8  
                    l944 0998                      l936 0972                      l928 0950  
                    l962 0AD8                      l954 09CA                      l946 09A8  
                    l938 0982                      l970 08CA                      l956 09DA  
                    l948 09AA                      l980 08F8                      l972 08D0  
                    l964 08A6                      l958 09DC                      l982 08FE  
                    l974 08E6                      l966 08AE                      l990 0A9C  
                    l992 0A38                      l984 0904                      l976 08EC  
                    l968 08B4                      l994 0A3C                      l978 08F2  
                    l986 0A76                      l996 0A44                      l988 0A90  
                    l998 0A54                      u100 0A90                      u101 0A8C  
                    u110 0A74                      u111 0A70                      u140 0832  
                    u141 082E                      u150 0866                      u207 0934  
                    u151 0862                      u160 0898                      u217 0946  
                    u161 0894                      u227 0966                      u237 0978  
                    u247 0A3E                      u257 099E                      u177 08BE  
                    u267 09B0                      u187 08DA                      u277 09D0  
                    u197 090E                      u287 09E2                      wreg 000FE8  
                   l1000 0A58                     l1010 0AD2                     l1002 0AC0  
                   l1012 0AD4                     l1004 0AC6                     l1006 0ACE  
                   l1030 0818                     l1008 0AD0                     l1040 0852  
                   l1032 081C                     l1042 0866                     l1034 0820  
                   l1026 0810                     l1044 087A                     l1036 0832  
                   l1028 0814                     l1046 0886                     l1038 0846  
                   l1048 0898                     STR_1 0801                     STR_2 0809  
                   _LATD 000F8C                     i1l34 006C                     i2l27 0A32  
                   i2l28 0A34                     _main 0810                     btemp 000F  
                   start 007C             ___param_bank 000000          __end_of_Int_Ext 0AE8  
       __end_of_LCD_Data 09F0         __end_of_LCD_Init 091C             LCD_Data@data 0006  
       __end_of_INT0_Ext 0A38                    ?_main 0001                    i1l890 004A  
                  i1l882 0026                    i1l892 006A                    i1l884 002A  
                  i1l886 002E                    i1l888 0042                    _TMR0L 000FD6  
                  _TRISD 000F95         __end_of_TMR0_Ext 007C      __size_of_LCD_Cadena 003E  
                  tablat 000FF5                    ttemp5 0010                    ttemp6 0013  
                  ttemp7 0017                    status 000FD8                    wtemp8 0010  
        __initialization 0AA6             __end_of_main 08A6                   ??_main 000B  
          __activetblptr 000001                   _LCD_XY 0A76                   i2l1020 0A16  
                 i2l1022 0A1E                   i2l1014 09F2                   i2l1024 0A30  
                 i2l1016 09F6                   i2l1018 0A12                   i1u5_20 0042  
                 i1u5_21 003E                   i1u6_20 005A                   i1u6_21 0054  
                 i1u6_26 005C                ??_Int_Ext 0005            ??_Timer0_Init 0005  
   __size_of_LCD_Comando 006A             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8                ?_LCD_Data 0001  
             __accesstop 0060  __end_of__initialization 0AAE                ?_LCD_Init 0001  
              ?_INT0_Ext 0001            ___rparam_used 000001             ??_LCD_Cadena 0009  
         __pcstackCOMRAM 0001                ?_TMR0_Ext 0001      __end_of_Timer0_Init 0AD8  
         LCD_Cadena@dato 0007       __end_of_LCD_Cadena 0A76                  ?_LCD_XY 0007  
                LCD_XY@x 0007                  LCD_XY@y 0009               ??_LCD_Data 0005  
             ??_LCD_Init 0007               ??_INT0_Ext 0001               ??_TMR0_Ext 0001  
                i2u12_40 0A12                  i2u12_41 0A0E                  i2u13_40 0A30  
                i2u13_41 0A2C          __size_of_LCD_XY 0030                  _Int_Ext 0AD8  
                __Hparam 0000              _Timer0_Init 0AC0                  __Lparam 0000  
           __psmallconst 0800                  __pcinit 0AA6                  __ramtop 0800  
                __ptext0 0810                  __ptext1 0AC0                  __ptext2 0A76  
                __ptext3 08A6                  __ptext4 091C                  __ptext5 0A38  
                __ptext6 0986                  __ptext7 0AD8                _T0CONbits 000FD5  
         LCD_Comando@cmd 0006           __pintcode_body 09F0     end_of_initialization 0AAE  
                int_func 09F0                _TRISBbits 000F93           __end_of_LCD_XY 0AA6  
      __size_of_LCD_Data 006A        __size_of_LCD_Init 0076        __size_of_INT0_Ext 0A30  
          ??_LCD_Comando 0005        __size_of_TMR0_Ext 0064      start_initialization 0AA6  
               ??_LCD_XY 000B      __end_of_LCD_Comando 0986              __pbssCOMRAM 000B  
               ?_Int_Ext 0001             ?_Timer0_Init 0001                __pintcode 0008  
            __pintcodelo 0018              __smallconst 0800                 _LCD_Data 0986  
               _LCD_Init 08A6                 _INT0_Ext 0008                 _LATDbits 000F8C  
               _RCONbits 000FD0                 _TMR0_Ext 0018              _LCD_Comando 091C  
            _INTCON2bits 000FF1                 __Hrparam 0000         __size_of_Int_Ext 0010  
               __Lrparam 0000             __Lsmallconst 0800            __size_of_main 0096  
             _LCD_Cadena 0A38     __size_of_Timer0_Init 0018                 int$flags 000F  
             _INTCONbits 000FF2                 intlevel1 0000                 intlevel2 0000  
            ?_LCD_Cadena 0007  
