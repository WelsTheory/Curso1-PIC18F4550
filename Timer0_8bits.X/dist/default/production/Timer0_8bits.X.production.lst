

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sat Dec 19 17:22:00 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    17                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F4550 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     _TMR0	set	4054
    55  0000                     _INTCON2bits	set	4081
    56  0000                     _T0CONbits	set	4053
    57  0000                     _LATD	set	3980
    58  0000                     _TRISD	set	3989
    59  0000                     _LATDbits	set	3980
    60  0000                     _INTCONbits	set	4082
    61  0000                     _RCONbits	set	4048
    62                           
    63                           ; #config settings
    64                           
    65                           	psect	cinit
    66  000094                     __pcinit:
    67                           	callstack 0
    68  000094                     start_initialization:
    69                           	callstack 0
    70  000094                     __initialization:
    71                           	callstack 0
    72                           
    73                           ; Clear objects allocated to COMRAM (2 bytes)
    74  000094  6A06               	clrf	(__pbssCOMRAM+1)& (0+255),c
    75  000096  6A05               	clrf	__pbssCOMRAM& (0+255),c
    76  000098                     end_of_initialization:
    77                           	callstack 0
    78  000098                     __end_of__initialization:
    79                           	callstack 0
    80  000098  9007               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    81  00009A  9207               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    82  00009C  0100               	movlb	0
    83  00009E  EF40  F000         	goto	_main	;jump to C main() function
    84                           
    85                           	psect	bssCOMRAM
    86  000005                     __pbssCOMRAM:
    87                           	callstack 0
    88  000005                     _i:
    89                           	callstack 0
    90  000005                     	ds	2
    91                           
    92                           	psect	cstackCOMRAM
    93  000001                     __pcstackCOMRAM:
    94                           	callstack 0
    95  000001                     ??_TMR0_Ext:
    96  000001                     
    97                           ; 1 bytes @ 0x0
    98  000001                     	ds	4
    99  000005                     
   100                           ; 1 bytes @ 0x4
   101 ;;
   102 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   103 ;;
   104 ;; *************** function _main *****************
   105 ;; Defined at:
   106 ;;		line 15 in file "Programa_principal.c"
   107 ;; Parameters:    Size  Location     Type
   108 ;;		None
   109 ;; Auto vars:     Size  Location     Type
   110 ;;		None
   111 ;; Return value:  Size  Location     Type
   112 ;;                  1    wreg      void 
   113 ;; Registers used:
   114 ;;		wreg, status,2, cstack
   115 ;; Tracked objects:
   116 ;;		On entry : 0/0
   117 ;;		On exit  : 0/0
   118 ;;		Unchanged: 0/0
   119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   120 ;;      Params:         0       0       0       0       0       0       0       0       0
   121 ;;      Locals:         0       0       0       0       0       0       0       0       0
   122 ;;      Temps:          0       0       0       0       0       0       0       0       0
   123 ;;      Totals:         0       0       0       0       0       0       0       0       0
   124 ;;Total ram usage:        0 bytes
   125 ;; Hardware stack levels required when called:    3
   126 ;; This function calls:
   127 ;;		_Int_Ext
   128 ;;		_Timer0_Init
   129 ;; This function is called by:
   130 ;;		Startup code after reset
   131 ;; This function uses a non-reentrant model
   132 ;;
   133                           
   134                           	psect	text0
   135  000080                     __ptext0:
   136                           	callstack 0
   137  000080                     _main:
   138                           	callstack 28
   139  000080                     
   140                           ;Programa_principal.c: 16:     TRISD = 0x00;
   141  000080  0E00               	movlw	0
   142  000082  6E95               	movwf	149,c	;volatile
   143  000084                     
   144                           ;Programa_principal.c: 17:     Timer0_Init();
   145  000084  EC32  F000         	call	_Timer0_Init	;wreg free
   146                           
   147                           ;Programa_principal.c: 18:     Int_Ext();
   148  000088  EC51  F000         	call	_Int_Ext	;wreg free
   149  00008C                     l64:
   150  00008C  EF46  F000         	goto	l64
   151  000090  EF30  F000         	goto	start
   152  000094                     __end_of_main:
   153                           	callstack 0
   154                           
   155 ;; *************** function _Timer0_Init *****************
   156 ;; Defined at:
   157 ;;		line 11 in file "Timer0_Libreria.c"
   158 ;; Parameters:    Size  Location     Type
   159 ;;		None
   160 ;; Auto vars:     Size  Location     Type
   161 ;;		None
   162 ;; Return value:  Size  Location     Type
   163 ;;                  1    wreg      void 
   164 ;; Registers used:
   165 ;;		wreg, status,2
   166 ;; Tracked objects:
   167 ;;		On entry : 0/0
   168 ;;		On exit  : 0/0
   169 ;;		Unchanged: 0/0
   170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   171 ;;      Params:         0       0       0       0       0       0       0       0       0
   172 ;;      Locals:         0       0       0       0       0       0       0       0       0
   173 ;;      Temps:          0       0       0       0       0       0       0       0       0
   174 ;;      Totals:         0       0       0       0       0       0       0       0       0
   175 ;;Total ram usage:        0 bytes
   176 ;; Hardware stack levels used:    1
   177 ;; Hardware stack levels required when called:    2
   178 ;; This function calls:
   179 ;;		Nothing
   180 ;; This function is called by:
   181 ;;		_main
   182 ;; This function uses a non-reentrant model
   183 ;;
   184                           
   185                           	psect	text1
   186  000064                     __ptext1:
   187                           	callstack 0
   188  000064                     _Timer0_Init:
   189                           	callstack 28
   190  000064                     
   191                           ;Timer0_Libreria.c: 12:     T0CONbits.T08BIT = 0;
   192  000064  9CD5               	bcf	213,6,c	;volatile
   193                           
   194                           ;Timer0_Libreria.c: 13:     T0CONbits.T0CS = 0;
   195  000066  9AD5               	bcf	213,5,c	;volatile
   196                           
   197                           ;Timer0_Libreria.c: 14:     T0CONbits.PSA = 0;
   198  000068  96D5               	bcf	213,3,c	;volatile
   199  00006A                     
   200                           ;Timer0_Libreria.c: 15:     T0CONbits.T0PS = 0b111;
   201  00006A  0E07               	movlw	7
   202  00006C  12D5               	iorwf	213,f,c	;volatile
   203                           
   204                           ;Timer0_Libreria.c: 16:     TMR0 = 46004;
   205  00006E  0EB3               	movlw	179
   206  000070  6ED7               	movwf	215,c	;volatile
   207  000072  0EB4               	movlw	180
   208  000074  6ED6               	movwf	214,c	;volatile
   209  000076                     
   210                           ;Timer0_Libreria.c: 17:     INTCONbits.TMR0IE = 1;
   211  000076  8AF2               	bsf	242,5,c	;volatile
   212  000078                     
   213                           ;Timer0_Libreria.c: 18:     INTCONbits.TMR0IF = 0;
   214  000078  94F2               	bcf	242,2,c	;volatile
   215  00007A                     
   216                           ;Timer0_Libreria.c: 19:     INTCON2bits.TMR0IP = 0;
   217  00007A  94F1               	bcf	241,2,c	;volatile
   218  00007C                     
   219                           ;Timer0_Libreria.c: 20:     T0CONbits.TMR0ON = 1;
   220  00007C  8ED5               	bsf	213,7,c	;volatile
   221  00007E  0012               	return		;funcret
   222  000080                     __end_of_Timer0_Init:
   223                           	callstack 0
   224                           
   225 ;; *************** function _Int_Ext *****************
   226 ;; Defined at:
   227 ;;		line 8 in file "Interrupt.c"
   228 ;; Parameters:    Size  Location     Type
   229 ;;		None
   230 ;; Auto vars:     Size  Location     Type
   231 ;;		None
   232 ;; Return value:  Size  Location     Type
   233 ;;                  1    wreg      void 
   234 ;; Registers used:
   235 ;;		None
   236 ;; Tracked objects:
   237 ;;		On entry : 0/0
   238 ;;		On exit  : 0/0
   239 ;;		Unchanged: 0/0
   240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   241 ;;      Params:         0       0       0       0       0       0       0       0       0
   242 ;;      Locals:         0       0       0       0       0       0       0       0       0
   243 ;;      Temps:          0       0       0       0       0       0       0       0       0
   244 ;;      Totals:         0       0       0       0       0       0       0       0       0
   245 ;;Total ram usage:        0 bytes
   246 ;; Hardware stack levels used:    1
   247 ;; Hardware stack levels required when called:    2
   248 ;; This function calls:
   249 ;;		Nothing
   250 ;; This function is called by:
   251 ;;		_main
   252 ;; This function uses a non-reentrant model
   253 ;;
   254                           
   255                           	psect	text2
   256  0000A2                     __ptext2:
   257                           	callstack 0
   258  0000A2                     _Int_Ext:
   259                           	callstack 28
   260  0000A2                     
   261                           ;Interrupt.c: 23:     RCONbits.IPEN = 1;
   262  0000A2  8ED0               	bsf	208,7,c	;volatile
   263                           
   264                           ;Interrupt.c: 24:     INTCONbits.GIEH = 1;
   265  0000A4  8EF2               	bsf	242,7,c	;volatile
   266                           
   267                           ;Interrupt.c: 25:     INTCONbits.GIEL = 1;
   268  0000A6  8CF2               	bsf	242,6,c	;volatile
   269  0000A8  0012               	return		;funcret
   270  0000AA                     __end_of_Int_Ext:
   271                           	callstack 0
   272                           
   273 ;; *************** function _TMR0_Ext *****************
   274 ;; Defined at:
   275 ;;		line 40 in file "Interrupt.c"
   276 ;; Parameters:    Size  Location     Type
   277 ;;		None
   278 ;; Auto vars:     Size  Location     Type
   279 ;;		None
   280 ;; Return value:  Size  Location     Type
   281 ;;                  1    wreg      void 
   282 ;; Registers used:
   283 ;;		wreg, status,2, status,0
   284 ;; Tracked objects:
   285 ;;		On entry : 0/0
   286 ;;		On exit  : 0/0
   287 ;;		Unchanged: 0/0
   288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   289 ;;      Params:         0       0       0       0       0       0       0       0       0
   290 ;;      Locals:         0       0       0       0       0       0       0       0       0
   291 ;;      Temps:          4       0       0       0       0       0       0       0       0
   292 ;;      Totals:         4       0       0       0       0       0       0       0       0
   293 ;;Total ram usage:        4 bytes
   294 ;; Hardware stack levels used:    1
   295 ;; Hardware stack levels required when called:    1
   296 ;; This function calls:
   297 ;;		Nothing
   298 ;; This function is called by:
   299 ;;		Interrupt level 1
   300 ;; This function uses a non-reentrant model
   301 ;;
   302                           
   303                           	psect	intcodelo
   304  000018                     __pintcodelo:
   305                           	callstack 0
   306  000018                     _TMR0_Ext:
   307                           	callstack 28
   308                           
   309                           ;incstack = 0
   310  000018  8007               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   311  00001A  CFD8 F002          	movff	status,??_TMR0_Ext+1
   312  00001E  CFE8 F003          	movff	wreg,??_TMR0_Ext+2
   313  000022  CFE0 F004          	movff	bsr,??_TMR0_Ext+3
   314  000026                     
   315                           ;Interrupt.c: 41:     LATDbits.LATD0 = ~LATDbits.LATD0;
   316  000026  B08C               	btfsc	140,0,c	;volatile
   317  000028  EF18  F000         	goto	i1u1_21
   318  00002C  EF1B  F000         	goto	i1u1_20
   319  000030                     i1u1_21:
   320  000030  0E01               	movlw	1
   321  000032  EF1C  F000         	goto	i1u1_26
   322  000036                     i1u1_20:
   323  000036  0E00               	movlw	0
   324  000038                     i1u1_26:
   325  000038  0AFF               	xorlw	255
   326  00003A  6E01               	movwf	??_TMR0_Ext^0,c
   327  00003C  508C               	movf	140,w,c	;volatile
   328  00003E  1801               	xorwf	??_TMR0_Ext^0,w,c
   329  000040  0BFE               	andlw	-2
   330  000042  1801               	xorwf	??_TMR0_Ext^0,w,c
   331  000044  6E8C               	movwf	140,c	;volatile
   332  000046                     
   333                           ;Interrupt.c: 42:     TMR0 = 46004;
   334  000046  0EB3               	movlw	179
   335  000048  6ED7               	movwf	215,c	;volatile
   336  00004A  0EB4               	movlw	180
   337  00004C  6ED6               	movwf	214,c	;volatile
   338  00004E                     
   339                           ;Interrupt.c: 43:     INTCONbits.TMR0IF = 0;
   340  00004E  94F2               	bcf	242,2,c	;volatile
   341  000050  C004  FFE0         	movff	??_TMR0_Ext+3,bsr
   342  000054  C003  FFE8         	movff	??_TMR0_Ext+2,wreg
   343  000058  C002  FFD8         	movff	??_TMR0_Ext+1,status
   344  00005C  9007               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   345  00005E  0010               	retfie	
   346  000060                     __end_of_TMR0_Ext:
   347                           	callstack 0
   348                           
   349 ;; *************** function _INT02_Ext *****************
   350 ;; Defined at:
   351 ;;		line 28 in file "Interrupt.c"
   352 ;; Parameters:    Size  Location     Type
   353 ;;		None
   354 ;; Auto vars:     Size  Location     Type
   355 ;;		None
   356 ;; Return value:  Size  Location     Type
   357 ;;                  1    wreg      void 
   358 ;; Registers used:
   359 ;;		None
   360 ;; Tracked objects:
   361 ;;		On entry : 0/0
   362 ;;		On exit  : 0/0
   363 ;;		Unchanged: 0/0
   364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   365 ;;      Params:         0       0       0       0       0       0       0       0       0
   366 ;;      Locals:         0       0       0       0       0       0       0       0       0
   367 ;;      Temps:          0       0       0       0       0       0       0       0       0
   368 ;;      Totals:         0       0       0       0       0       0       0       0       0
   369 ;;Total ram usage:        0 bytes
   370 ;; Hardware stack levels used:    1
   371 ;; This function calls:
   372 ;;		Nothing
   373 ;; This function is called by:
   374 ;;		Interrupt level 2
   375 ;; This function uses a non-reentrant model
   376 ;;
   377                           
   378                           	psect	intcode
   379  000008                     __pintcode:
   380                           	callstack 0
   381  000008                     _INT02_Ext:
   382                           	callstack 28
   383                           
   384                           ;incstack = 0
   385  000008  8207               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   386  00000A  ED55  F000         	call	int_func,f	;refresh shadow registers
   387                           
   388                           	psect	intcode_body
   389  0000AA                     __pintcode_body:
   390                           	callstack 28
   391  0000AA                     int_func:
   392                           	callstack 28
   393  0000AA  0006               	pop		; remove dummy address from shadow register refresh
   394  0000AC  9207               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   395  0000AE  0011               	retfie		f
   396  0000B0                     __end_of_INT02_Ext:
   397                           	callstack 0
   398  0000                     
   399                           	psect	rparam
   400  0000                     
   401                           	psect	temp
   402  000007                     btemp:
   403                           	callstack 0
   404  000007                     	ds	1
   405  0000                     int$flags	set	btemp
   406  0000                     wtemp8	set	btemp+1
   407  0000                     ttemp5	set	btemp+1
   408  0000                     ttemp6	set	btemp+4
   409  0000                     ttemp7	set	btemp+8
   410                           
   411                           	psect	idloc
   412                           
   413                           ;Config register IDLOC0 @ 0x200000
   414                           ;	unspecified, using default values
   415  200000                     	org	2097152
   416  200000  FF                 	db	255
   417                           
   418                           ;Config register IDLOC1 @ 0x200001
   419                           ;	unspecified, using default values
   420  200001                     	org	2097153
   421  200001  FF                 	db	255
   422                           
   423                           ;Config register IDLOC2 @ 0x200002
   424                           ;	unspecified, using default values
   425  200002                     	org	2097154
   426  200002  FF                 	db	255
   427                           
   428                           ;Config register IDLOC3 @ 0x200003
   429                           ;	unspecified, using default values
   430  200003                     	org	2097155
   431  200003  FF                 	db	255
   432                           
   433                           ;Config register IDLOC4 @ 0x200004
   434                           ;	unspecified, using default values
   435  200004                     	org	2097156
   436  200004  FF                 	db	255
   437                           
   438                           ;Config register IDLOC5 @ 0x200005
   439                           ;	unspecified, using default values
   440  200005                     	org	2097157
   441  200005  FF                 	db	255
   442                           
   443                           ;Config register IDLOC6 @ 0x200006
   444                           ;	unspecified, using default values
   445  200006                     	org	2097158
   446  200006  FF                 	db	255
   447                           
   448                           ;Config register IDLOC7 @ 0x200007
   449                           ;	unspecified, using default values
   450  200007                     	org	2097159
   451  200007  FF                 	db	255
   452                           
   453                           	psect	config
   454                           
   455                           ;Config register CONFIG1L @ 0x300000
   456                           ;	PLL Prescaler Selection bits
   457                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   458                           ;	System Clock Postscaler Selection bits
   459                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   460                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   461                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   462  300000                     	org	3145728
   463  300000  00                 	db	0
   464                           
   465                           ;Config register CONFIG1H @ 0x300001
   466                           ;	Oscillator Selection bits
   467                           ;	FOSC = HS, HS oscillator (HS)
   468                           ;	Fail-Safe Clock Monitor Enable bit
   469                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   470                           ;	Internal/External Oscillator Switchover bit
   471                           ;	IESO = OFF, Oscillator Switchover mode disabled
   472  300001                     	org	3145729
   473  300001  0C                 	db	12
   474                           
   475                           ;Config register CONFIG2L @ 0x300002
   476                           ;	Power-up Timer Enable bit
   477                           ;	PWRT = ON, PWRT enabled
   478                           ;	Brown-out Reset Enable bits
   479                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   480                           ;	Brown-out Reset Voltage bits
   481                           ;	BORV = 3, Minimum setting 2.05V
   482                           ;	USB Voltage Regulator Enable bit
   483                           ;	VREGEN = OFF, USB voltage regulator disabled
   484  300002                     	org	3145730
   485  300002  18                 	db	24
   486                           
   487                           ;Config register CONFIG2H @ 0x300003
   488                           ;	Watchdog Timer Enable bit
   489                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   490                           ;	Watchdog Timer Postscale Select bits
   491                           ;	WDTPS = 32768, 1:32768
   492  300003                     	org	3145731
   493  300003  1E                 	db	30
   494                           
   495                           ; Padding undefined space
   496  300004                     	org	3145732
   497  300004  FF                 	db	255
   498                           
   499                           ;Config register CONFIG3H @ 0x300005
   500                           ;	CCP2 MUX bit
   501                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   502                           ;	PORTB A/D Enable bit
   503                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   504                           ;	Low-Power Timer 1 Oscillator Enable bit
   505                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   506                           ;	MCLR Pin Enable bit
   507                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   508  300005                     	org	3145733
   509  300005  81                 	db	129
   510                           
   511                           ;Config register CONFIG4L @ 0x300006
   512                           ;	Stack Full/Underflow Reset Enable bit
   513                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
   514                           ;	Single-Supply ICSP Enable bit
   515                           ;	LVP = OFF, Single-Supply ICSP disabled
   516                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   517                           ;	ICPRT = OFF, ICPORT disabled
   518                           ;	Extended Instruction Set Enable bit
   519                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   520                           ;	Background Debugger Enable bit
   521                           ;	DEBUG = 0x1, unprogrammed default
   522  300006                     	org	3145734
   523  300006  80                 	db	128
   524                           
   525                           ; Padding undefined space
   526  300007                     	org	3145735
   527  300007  FF                 	db	255
   528                           
   529                           ;Config register CONFIG5L @ 0x300008
   530                           ;	Code Protection bit
   531                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   532                           ;	Code Protection bit
   533                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   534                           ;	Code Protection bit
   535                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   536                           ;	Code Protection bit
   537                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   538  300008                     	org	3145736
   539  300008  0F                 	db	15
   540                           
   541                           ;Config register CONFIG5H @ 0x300009
   542                           ;	Boot Block Code Protection bit
   543                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   544                           ;	Data EEPROM Code Protection bit
   545                           ;	CPD = OFF, Data EEPROM is not code-protected
   546  300009                     	org	3145737
   547  300009  C0                 	db	192
   548                           
   549                           ;Config register CONFIG6L @ 0x30000A
   550                           ;	Write Protection bit
   551                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   552                           ;	Write Protection bit
   553                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   554                           ;	Write Protection bit
   555                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   556                           ;	Write Protection bit
   557                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   558  30000A                     	org	3145738
   559  30000A  0F                 	db	15
   560                           
   561                           ;Config register CONFIG6H @ 0x30000B
   562                           ;	Configuration Register Write Protection bit
   563                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   564                           ;	Boot Block Write Protection bit
   565                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   566                           ;	Data EEPROM Write Protection bit
   567                           ;	WRTD = OFF, Data EEPROM is not write-protected
   568  30000B                     	org	3145739
   569  30000B  E0                 	db	224
   570                           
   571                           ;Config register CONFIG7L @ 0x30000C
   572                           ;	Table Read Protection bit
   573                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   574                           ;	Table Read Protection bit
   575                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   576                           ;	Table Read Protection bit
   577                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   578                           ;	Table Read Protection bit
   579                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   580  30000C                     	org	3145740
   581  30000C  0F                 	db	15
   582                           
   583                           ;Config register CONFIG7H @ 0x30000D
   584                           ;	Boot Block Table Read Protection bit
   585                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   586  30000D                     	org	3145741
   587  30000D  40                 	db	64
   588                           tosu	equ	0xFFF
   589                           tosh	equ	0xFFE
   590                           tosl	equ	0xFFD
   591                           stkptr	equ	0xFFC
   592                           pclatu	equ	0xFFB
   593                           pclath	equ	0xFFA
   594                           pcl	equ	0xFF9
   595                           tblptru	equ	0xFF8
   596                           tblptrh	equ	0xFF7
   597                           tblptrl	equ	0xFF6
   598                           tablat	equ	0xFF5
   599                           prodh	equ	0xFF4
   600                           prodl	equ	0xFF3
   601                           indf0	equ	0xFEF
   602                           postinc0	equ	0xFEE
   603                           postdec0	equ	0xFED
   604                           preinc0	equ	0xFEC
   605                           plusw0	equ	0xFEB
   606                           fsr0h	equ	0xFEA
   607                           fsr0l	equ	0xFE9
   608                           wreg	equ	0xFE8
   609                           indf1	equ	0xFE7
   610                           postinc1	equ	0xFE6
   611                           postdec1	equ	0xFE5
   612                           preinc1	equ	0xFE4
   613                           plusw1	equ	0xFE3
   614                           fsr1h	equ	0xFE2
   615                           fsr1l	equ	0xFE1
   616                           bsr	equ	0xFE0
   617                           indf2	equ	0xFDF
   618                           postinc2	equ	0xFDE
   619                           postdec2	equ	0xFDD
   620                           preinc2	equ	0xFDC
   621                           plusw2	equ	0xFDB
   622                           fsr2h	equ	0xFDA
   623                           fsr2l	equ	0xFD9
   624                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      4       6
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _TMR0_Ext in COMRAM

    None.

Critical Paths under _INT02_Ext in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _TMR0_Ext in BANK0

    None.

Critical Paths under _INT02_Ext in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TMR0_Ext in BANK1

    None.

Critical Paths under _INT02_Ext in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TMR0_Ext in BANK2

    None.

Critical Paths under _INT02_Ext in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TMR0_Ext in BANK3

    None.

Critical Paths under _INT02_Ext in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TMR0_Ext in BANK4

    None.

Critical Paths under _INT02_Ext in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TMR0_Ext in BANK5

    None.

Critical Paths under _INT02_Ext in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TMR0_Ext in BANK6

    None.

Critical Paths under _INT02_Ext in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TMR0_Ext in BANK7

    None.

Critical Paths under _INT02_Ext in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                            _Int_Ext
                        _Timer0_Init
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Int_Ext                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _TMR0_Ext                                             4     4      0       0
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INT02_Ext                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Int_Ext
   _Timer0_Init

 _TMR0_Ext (ROOT)

 _INT02_Ext (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      4       6       1        6.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       6      20        0.0%
DATA                 0      0       6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sat Dec 19 17:22:00 2020

                      _i 0005                       l13 00A8                       l64 008C  
                     l65 008C                       l78 007E                       bsr 000FE0  
                    l800 0064                      l810 007C                      l802 006A  
                    l804 0076                      l806 0078                      l808 007A  
                    l754 00A2                      l856 0080                      l858 0084  
                    wreg 000FE8                     _LATD 000F8C                     i1l23 0050  
                   i2l18 00AC                     _TMR0 000FD6       __size_of_INT02_Ext 00A8  
                   _main 0080                     btemp 0007                     start 0060  
           ___param_bank 000000          __end_of_Int_Ext 00AA                    ?_main 0001  
                  i1l812 0026                    i1l814 0046                    i1l816 004E  
                  _TRISD 000F95         __end_of_TMR0_Ext 0060                    ttemp5 0008  
                  ttemp6 000B                    ttemp7 000F                    status 000FD8  
                  wtemp8 0008          __initialization 0094             __end_of_main 0094  
      __end_of_INT02_Ext 00B0                   ??_main 0005            __activetblptr 000000  
                 i1u1_20 0036                   i1u1_21 0030                   i1u1_26 0038  
              ??_Int_Ext 0005            ??_Timer0_Init 0005               __accesstop 0060  
__end_of__initialization 0098            ___rparam_used 000001           __pcstackCOMRAM 0001  
              ?_TMR0_Ext 0001      __end_of_Timer0_Init 0080               ??_TMR0_Ext 0001  
                _Int_Ext 00A2                  __Hparam 0000              _Timer0_Init 0064  
                __Lparam 0000                  __pcinit 0094                  __ramtop 0800  
                __ptext0 0080                  __ptext1 0064                  __ptext2 00A2  
              _T0CONbits 000FD5                _INT02_Ext 0008           __pintcode_body 00AA  
   end_of_initialization 0098                  int_func 00AA               ?_INT02_Ext 0001  
      __size_of_TMR0_Ext 0048      start_initialization 0094              __pbssCOMRAM 0005  
            ??_INT02_Ext 0001                 ?_Int_Ext 0001             ?_Timer0_Init 0001  
              __pintcode 0008              __pintcodelo 0018                 _LATDbits 000F8C  
               _RCONbits 000FD0                 _TMR0_Ext 0018              _INTCON2bits 000FF1  
               __Hrparam 0000         __size_of_Int_Ext 0008                 __Lrparam 0000  
          __size_of_main 0014     __size_of_Timer0_Init 001C                 int$flags 0007  
             _INTCONbits 000FF2                 intlevel1 0000                 intlevel2 0000  
